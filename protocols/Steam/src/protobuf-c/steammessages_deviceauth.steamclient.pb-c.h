/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_deviceauth.steamclient.proto */

#ifndef PROTOBUF_C_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_base.pb-c.h"
#include "steammessages_unified_base.steamclient.pb-c.h"

struct CDeviceAuthGetOwnAuthorizedDevicesRequest;
struct CDeviceAuthGetOwnAuthorizedDevicesResponse;
struct CDeviceAuthGetOwnAuthorizedDevicesResponse__Device;
struct CDeviceAuthAcceptAuthorizationRequestRequest;
struct CDeviceAuthAcceptAuthorizationRequestResponse;
struct CDeviceAuthAuthorizeRemoteDeviceRequest;
struct CDeviceAuthAuthorizeRemoteDeviceResponse;
struct CDeviceAuthDeauthorizeRemoteDeviceRequest;
struct CDeviceAuthDeauthorizeRemoteDeviceResponse;
struct CDeviceAuthGetUsedAuthorizedDevicesRequest;
struct CDeviceAuthGetUsedAuthorizedDevicesResponse;
struct CDeviceAuthGetUsedAuthorizedDevicesResponse__Device;
struct CDeviceAuthGetAuthorizedBorrowersRequest;
struct CDeviceAuthGetAuthorizedBorrowersResponse;
struct CDeviceAuthGetAuthorizedBorrowersResponse__Borrower;
struct CDeviceAuthAddAuthorizedBorrowersRequest;
struct CDeviceAuthAddAuthorizedBorrowersResponse;
struct CDeviceAuthRemoveAuthorizedBorrowersRequest;
struct CDeviceAuthRemoveAuthorizedBorrowersResponse;
struct CDeviceAuthGetAuthorizedAsBorrowerRequest;
struct CDeviceAuthGetAuthorizedAsBorrowerResponse;
struct CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender;
struct CDeviceAuthGetExcludedGamesInLibraryRequest;
struct CDeviceAuthGetExcludedGamesInLibraryResponse;
struct CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame;
struct CDeviceAuthGetBorrowerPlayHistoryRequest;
struct CDeviceAuthGetBorrowerPlayHistoryResponse;
struct CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory;
struct CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory;


/* --- enums --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cdevice_auth__get_own_authorized_devices__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_own_authorized_devices__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_own_authorized_devices__response__device__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__accept_authorization_request__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__accept_authorization_request__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__authorize_remote_device__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__authorize_remote_device__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__deauthorize_remote_device__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__deauthorize_remote_device__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_used_authorized_devices__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_used_authorized_devices__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_used_authorized_devices__response__device__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_borrowers__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_borrowers__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_borrowers__response__borrower__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__add_authorized_borrowers__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__add_authorized_borrowers__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__remove_authorized_borrowers__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__remove_authorized_borrowers__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_as_borrower__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_as_borrower__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_authorized_as_borrower__response__lender__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_excluded_games_in_library__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_excluded_games_in_library__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_excluded_games_in_library__response__excluded_game__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_borrower_play_history__request__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_borrower_play_history__response__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_borrower_play_history__response__game_history__descriptor;
extern const ProtobufCMessageDescriptor cdevice_auth__get_borrower_play_history__response__lender_history__descriptor;
extern const ProtobufCServiceDescriptor device_auth__descriptor;

/* --- messages --- */

extern "C" void message_init_generic(const ProtobufCMessageDescriptor * desc, ProtobufCMessage * message);

struct ProtobufCppMessage : public ProtobufCMessage
{
	ProtobufCppMessage(const ProtobufCMessageDescriptor &descr)
	{
		message_init_generic(&descr, this);
	}
};

struct CDeviceAuthGetOwnAuthorizedDevicesRequest : public ProtobufCppMessage
{
  CDeviceAuthGetOwnAuthorizedDevicesRequest() :
     ProtobufCppMessage(cdevice_auth__get_own_authorized_devices__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_include_canceled;
  protobuf_c_boolean include_canceled;
};

struct CDeviceAuthGetOwnAuthorizedDevicesResponse__Device : public ProtobufCppMessage
{
  CDeviceAuthGetOwnAuthorizedDevicesResponse__Device() :
     ProtobufCppMessage(cdevice_auth__get_own_authorized_devices__response__device__descriptor)
  {}

  protobuf_c_boolean has_auth_device_token;
  uint64_t auth_device_token;
  char *device_name;
  protobuf_c_boolean has_is_pending;
  protobuf_c_boolean is_pending;
  protobuf_c_boolean has_is_canceled;
  protobuf_c_boolean is_canceled;
  protobuf_c_boolean has_last_time_used;
  uint32_t last_time_used;
  protobuf_c_boolean has_last_borrower_id;
  uint64_t last_borrower_id;
  protobuf_c_boolean has_last_app_played;
  uint32_t last_app_played;
  protobuf_c_boolean has_is_limited;
  protobuf_c_boolean is_limited;
};

struct CDeviceAuthGetOwnAuthorizedDevicesResponse : public ProtobufCppMessage
{
  CDeviceAuthGetOwnAuthorizedDevicesResponse() :
     ProtobufCppMessage(cdevice_auth__get_own_authorized_devices__response__descriptor)
  {}

  size_t n_devices;
  CDeviceAuthGetOwnAuthorizedDevicesResponse__Device **devices;
};

struct CDeviceAuthAcceptAuthorizationRequestRequest : public ProtobufCppMessage
{
  CDeviceAuthAcceptAuthorizationRequestRequest() :
     ProtobufCppMessage(cdevice_auth__accept_authorization_request__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_auth_device_token;
  uint64_t auth_device_token;
  protobuf_c_boolean has_auth_code;
  uint64_t auth_code;
  protobuf_c_boolean has_from_steamid;
  uint64_t from_steamid;
};

struct CDeviceAuthAcceptAuthorizationRequestResponse : public ProtobufCppMessage
{
  CDeviceAuthAcceptAuthorizationRequestResponse() :
     ProtobufCppMessage(cdevice_auth__accept_authorization_request__response__descriptor)
  {}

};

struct CDeviceAuthAuthorizeRemoteDeviceRequest : public ProtobufCppMessage
{
  CDeviceAuthAuthorizeRemoteDeviceRequest() :
     ProtobufCppMessage(cdevice_auth__authorize_remote_device__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_auth_device_token;
  uint64_t auth_device_token;
};

struct CDeviceAuthAuthorizeRemoteDeviceResponse : public ProtobufCppMessage
{
  CDeviceAuthAuthorizeRemoteDeviceResponse() :
     ProtobufCppMessage(cdevice_auth__authorize_remote_device__response__descriptor)
  {}

};

struct CDeviceAuthDeauthorizeRemoteDeviceRequest : public ProtobufCppMessage
{
  CDeviceAuthDeauthorizeRemoteDeviceRequest() :
     ProtobufCppMessage(cdevice_auth__deauthorize_remote_device__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_auth_device_token;
  uint64_t auth_device_token;
};

struct CDeviceAuthDeauthorizeRemoteDeviceResponse : public ProtobufCppMessage
{
  CDeviceAuthDeauthorizeRemoteDeviceResponse() :
     ProtobufCppMessage(cdevice_auth__deauthorize_remote_device__response__descriptor)
  {}

};

struct CDeviceAuthGetUsedAuthorizedDevicesRequest : public ProtobufCppMessage
{
  CDeviceAuthGetUsedAuthorizedDevicesRequest() :
     ProtobufCppMessage(cdevice_auth__get_used_authorized_devices__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CDeviceAuthGetUsedAuthorizedDevicesResponse__Device : public ProtobufCppMessage
{
  CDeviceAuthGetUsedAuthorizedDevicesResponse__Device() :
     ProtobufCppMessage(cdevice_auth__get_used_authorized_devices__response__device__descriptor)
  {}

  protobuf_c_boolean has_auth_device_token;
  uint64_t auth_device_token;
  char *device_name;
  protobuf_c_boolean has_owner_steamid;
  uint64_t owner_steamid;
  protobuf_c_boolean has_last_time_used;
  uint32_t last_time_used;
  protobuf_c_boolean has_last_app_played;
  uint32_t last_app_played;
};

struct CDeviceAuthGetUsedAuthorizedDevicesResponse : public ProtobufCppMessage
{
  CDeviceAuthGetUsedAuthorizedDevicesResponse() :
     ProtobufCppMessage(cdevice_auth__get_used_authorized_devices__response__descriptor)
  {}

  size_t n_devices;
  CDeviceAuthGetUsedAuthorizedDevicesResponse__Device **devices;
};

struct CDeviceAuthGetAuthorizedBorrowersRequest : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedBorrowersRequest() :
     ProtobufCppMessage(cdevice_auth__get_authorized_borrowers__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_include_canceled;
  protobuf_c_boolean include_canceled;
  protobuf_c_boolean has_include_pending;
  protobuf_c_boolean include_pending;
};

struct CDeviceAuthGetAuthorizedBorrowersResponse__Borrower : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedBorrowersResponse__Borrower() :
     ProtobufCppMessage(cdevice_auth__get_authorized_borrowers__response__borrower__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_is_pending;
  protobuf_c_boolean is_pending;
  protobuf_c_boolean has_is_canceled;
  protobuf_c_boolean is_canceled;
  protobuf_c_boolean has_time_created;
  uint32_t time_created;
};

struct CDeviceAuthGetAuthorizedBorrowersResponse : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedBorrowersResponse() :
     ProtobufCppMessage(cdevice_auth__get_authorized_borrowers__response__descriptor)
  {}

  size_t n_borrowers;
  CDeviceAuthGetAuthorizedBorrowersResponse__Borrower **borrowers;
};

struct CDeviceAuthAddAuthorizedBorrowersRequest : public ProtobufCppMessage
{
  CDeviceAuthAddAuthorizedBorrowersRequest() :
     ProtobufCppMessage(cdevice_auth__add_authorized_borrowers__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  size_t n_steamid_borrower;
  uint64_t *steamid_borrower;
};

struct CDeviceAuthAddAuthorizedBorrowersResponse : public ProtobufCppMessage
{
  CDeviceAuthAddAuthorizedBorrowersResponse() :
     ProtobufCppMessage(cdevice_auth__add_authorized_borrowers__response__descriptor)
  {}

  protobuf_c_boolean has_seconds_to_wait;
  int32_t seconds_to_wait;
};

struct CDeviceAuthRemoveAuthorizedBorrowersRequest : public ProtobufCppMessage
{
  CDeviceAuthRemoveAuthorizedBorrowersRequest() :
     ProtobufCppMessage(cdevice_auth__remove_authorized_borrowers__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  size_t n_steamid_borrower;
  uint64_t *steamid_borrower;
};

struct CDeviceAuthRemoveAuthorizedBorrowersResponse : public ProtobufCppMessage
{
  CDeviceAuthRemoveAuthorizedBorrowersResponse() :
     ProtobufCppMessage(cdevice_auth__remove_authorized_borrowers__response__descriptor)
  {}

};

struct CDeviceAuthGetAuthorizedAsBorrowerRequest : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedAsBorrowerRequest() :
     ProtobufCppMessage(cdevice_auth__get_authorized_as_borrower__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_include_canceled;
  protobuf_c_boolean include_canceled;
  protobuf_c_boolean has_include_pending;
  protobuf_c_boolean include_pending;
};

struct CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender() :
     ProtobufCppMessage(cdevice_auth__get_authorized_as_borrower__response__lender__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_time_created;
  uint32_t time_created;
  protobuf_c_boolean has_is_pending;
  protobuf_c_boolean is_pending;
  protobuf_c_boolean has_is_canceled;
  protobuf_c_boolean is_canceled;
  protobuf_c_boolean has_is_used;
  protobuf_c_boolean is_used;
  protobuf_c_boolean has_time_removed;
  uint32_t time_removed;
  protobuf_c_boolean has_time_first;
  uint32_t time_first;
};

struct CDeviceAuthGetAuthorizedAsBorrowerResponse : public ProtobufCppMessage
{
  CDeviceAuthGetAuthorizedAsBorrowerResponse() :
     ProtobufCppMessage(cdevice_auth__get_authorized_as_borrower__response__descriptor)
  {}

  size_t n_lenders;
  CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender **lenders;
};

struct CDeviceAuthGetExcludedGamesInLibraryRequest : public ProtobufCppMessage
{
  CDeviceAuthGetExcludedGamesInLibraryRequest() :
     ProtobufCppMessage(cdevice_auth__get_excluded_games_in_library__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};

struct CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame : public ProtobufCppMessage
{
  CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame() :
     ProtobufCppMessage(cdevice_auth__get_excluded_games_in_library__response__excluded_game__descriptor)
  {}

  protobuf_c_boolean has_appid;
  uint32_t appid;
  char *game_name;
  protobuf_c_boolean has_vac_banned;
  protobuf_c_boolean vac_banned;
  protobuf_c_boolean has_package_excluded;
  protobuf_c_boolean package_excluded;
};

struct CDeviceAuthGetExcludedGamesInLibraryResponse : public ProtobufCppMessage
{
  CDeviceAuthGetExcludedGamesInLibraryResponse() :
     ProtobufCppMessage(cdevice_auth__get_excluded_games_in_library__response__descriptor)
  {}

  size_t n_excluded_games;
  CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame **excluded_games;
};

struct CDeviceAuthGetBorrowerPlayHistoryRequest : public ProtobufCppMessage
{
  CDeviceAuthGetBorrowerPlayHistoryRequest() :
     ProtobufCppMessage(cdevice_auth__get_borrower_play_history__request__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_appid;
  uint32_t appid;
};

struct CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory : public ProtobufCppMessage
{
  CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory() :
     ProtobufCppMessage(cdevice_auth__get_borrower_play_history__response__game_history__descriptor)
  {}

  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_time_last;
  uint32_t time_last;
  protobuf_c_boolean has_time_total;
  uint32_t time_total;
};

struct CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory : public ProtobufCppMessage
{
  CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory() :
     ProtobufCppMessage(cdevice_auth__get_borrower_play_history__response__lender_history__descriptor)
  {}

  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  size_t n_game_history;
  CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory **game_history;
};

struct CDeviceAuthGetBorrowerPlayHistoryResponse : public ProtobufCppMessage
{
  CDeviceAuthGetBorrowerPlayHistoryResponse() :
     ProtobufCppMessage(cdevice_auth__get_borrower_play_history__response__descriptor)
  {}

  size_t n_lender_history;
  CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory **lender_history;
};

size_t cdevice_auth__get_own_authorized_devices__request__get_packed_size
                     (const CDeviceAuthGetOwnAuthorizedDevicesRequest   *message);
size_t cdevice_auth__get_own_authorized_devices__request__pack
                     (const CDeviceAuthGetOwnAuthorizedDevicesRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_own_authorized_devices__request__pack_to_buffer
                     (const CDeviceAuthGetOwnAuthorizedDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetOwnAuthorizedDevicesRequest *
       cdevice_auth__get_own_authorized_devices__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_own_authorized_devices__request__free_unpacked
                     (CDeviceAuthGetOwnAuthorizedDevicesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_own_authorized_devices__response__get_packed_size
                     (const CDeviceAuthGetOwnAuthorizedDevicesResponse   *message);
size_t cdevice_auth__get_own_authorized_devices__response__pack
                     (const CDeviceAuthGetOwnAuthorizedDevicesResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_own_authorized_devices__response__pack_to_buffer
                     (const CDeviceAuthGetOwnAuthorizedDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetOwnAuthorizedDevicesResponse *
       cdevice_auth__get_own_authorized_devices__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_own_authorized_devices__response__free_unpacked
                     (CDeviceAuthGetOwnAuthorizedDevicesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__accept_authorization_request__request__get_packed_size
                     (const CDeviceAuthAcceptAuthorizationRequestRequest   *message);
size_t cdevice_auth__accept_authorization_request__request__pack
                     (const CDeviceAuthAcceptAuthorizationRequestRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__accept_authorization_request__request__pack_to_buffer
                     (const CDeviceAuthAcceptAuthorizationRequestRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAcceptAuthorizationRequestRequest *
       cdevice_auth__accept_authorization_request__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__accept_authorization_request__request__free_unpacked
                     (CDeviceAuthAcceptAuthorizationRequestRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__accept_authorization_request__response__get_packed_size
                     (const CDeviceAuthAcceptAuthorizationRequestResponse   *message);
size_t cdevice_auth__accept_authorization_request__response__pack
                     (const CDeviceAuthAcceptAuthorizationRequestResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__accept_authorization_request__response__pack_to_buffer
                     (const CDeviceAuthAcceptAuthorizationRequestResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAcceptAuthorizationRequestResponse *
       cdevice_auth__accept_authorization_request__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__accept_authorization_request__response__free_unpacked
                     (CDeviceAuthAcceptAuthorizationRequestResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__authorize_remote_device__request__get_packed_size
                     (const CDeviceAuthAuthorizeRemoteDeviceRequest   *message);
size_t cdevice_auth__authorize_remote_device__request__pack
                     (const CDeviceAuthAuthorizeRemoteDeviceRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__authorize_remote_device__request__pack_to_buffer
                     (const CDeviceAuthAuthorizeRemoteDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAuthorizeRemoteDeviceRequest *
       cdevice_auth__authorize_remote_device__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__authorize_remote_device__request__free_unpacked
                     (CDeviceAuthAuthorizeRemoteDeviceRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__authorize_remote_device__response__get_packed_size
                     (const CDeviceAuthAuthorizeRemoteDeviceResponse   *message);
size_t cdevice_auth__authorize_remote_device__response__pack
                     (const CDeviceAuthAuthorizeRemoteDeviceResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__authorize_remote_device__response__pack_to_buffer
                     (const CDeviceAuthAuthorizeRemoteDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAuthorizeRemoteDeviceResponse *
       cdevice_auth__authorize_remote_device__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__authorize_remote_device__response__free_unpacked
                     (CDeviceAuthAuthorizeRemoteDeviceResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__deauthorize_remote_device__request__get_packed_size
                     (const CDeviceAuthDeauthorizeRemoteDeviceRequest   *message);
size_t cdevice_auth__deauthorize_remote_device__request__pack
                     (const CDeviceAuthDeauthorizeRemoteDeviceRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__deauthorize_remote_device__request__pack_to_buffer
                     (const CDeviceAuthDeauthorizeRemoteDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthDeauthorizeRemoteDeviceRequest *
       cdevice_auth__deauthorize_remote_device__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__deauthorize_remote_device__request__free_unpacked
                     (CDeviceAuthDeauthorizeRemoteDeviceRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__deauthorize_remote_device__response__get_packed_size
                     (const CDeviceAuthDeauthorizeRemoteDeviceResponse   *message);
size_t cdevice_auth__deauthorize_remote_device__response__pack
                     (const CDeviceAuthDeauthorizeRemoteDeviceResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__deauthorize_remote_device__response__pack_to_buffer
                     (const CDeviceAuthDeauthorizeRemoteDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthDeauthorizeRemoteDeviceResponse *
       cdevice_auth__deauthorize_remote_device__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__deauthorize_remote_device__response__free_unpacked
                     (CDeviceAuthDeauthorizeRemoteDeviceResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_used_authorized_devices__request__get_packed_size
                     (const CDeviceAuthGetUsedAuthorizedDevicesRequest   *message);
size_t cdevice_auth__get_used_authorized_devices__request__pack
                     (const CDeviceAuthGetUsedAuthorizedDevicesRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_used_authorized_devices__request__pack_to_buffer
                     (const CDeviceAuthGetUsedAuthorizedDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetUsedAuthorizedDevicesRequest *
       cdevice_auth__get_used_authorized_devices__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_used_authorized_devices__request__free_unpacked
                     (CDeviceAuthGetUsedAuthorizedDevicesRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_used_authorized_devices__response__get_packed_size
                     (const CDeviceAuthGetUsedAuthorizedDevicesResponse   *message);
size_t cdevice_auth__get_used_authorized_devices__response__pack
                     (const CDeviceAuthGetUsedAuthorizedDevicesResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_used_authorized_devices__response__pack_to_buffer
                     (const CDeviceAuthGetUsedAuthorizedDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetUsedAuthorizedDevicesResponse *
       cdevice_auth__get_used_authorized_devices__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_used_authorized_devices__response__free_unpacked
                     (CDeviceAuthGetUsedAuthorizedDevicesResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_authorized_borrowers__request__get_packed_size
                     (const CDeviceAuthGetAuthorizedBorrowersRequest   *message);
size_t cdevice_auth__get_authorized_borrowers__request__pack
                     (const CDeviceAuthGetAuthorizedBorrowersRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_authorized_borrowers__request__pack_to_buffer
                     (const CDeviceAuthGetAuthorizedBorrowersRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetAuthorizedBorrowersRequest *
       cdevice_auth__get_authorized_borrowers__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_authorized_borrowers__request__free_unpacked
                     (CDeviceAuthGetAuthorizedBorrowersRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_authorized_borrowers__response__get_packed_size
                     (const CDeviceAuthGetAuthorizedBorrowersResponse   *message);
size_t cdevice_auth__get_authorized_borrowers__response__pack
                     (const CDeviceAuthGetAuthorizedBorrowersResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_authorized_borrowers__response__pack_to_buffer
                     (const CDeviceAuthGetAuthorizedBorrowersResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetAuthorizedBorrowersResponse *
       cdevice_auth__get_authorized_borrowers__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_authorized_borrowers__response__free_unpacked
                     (CDeviceAuthGetAuthorizedBorrowersResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__add_authorized_borrowers__request__get_packed_size
                     (const CDeviceAuthAddAuthorizedBorrowersRequest   *message);
size_t cdevice_auth__add_authorized_borrowers__request__pack
                     (const CDeviceAuthAddAuthorizedBorrowersRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__add_authorized_borrowers__request__pack_to_buffer
                     (const CDeviceAuthAddAuthorizedBorrowersRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAddAuthorizedBorrowersRequest *
       cdevice_auth__add_authorized_borrowers__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__add_authorized_borrowers__request__free_unpacked
                     (CDeviceAuthAddAuthorizedBorrowersRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__add_authorized_borrowers__response__get_packed_size
                     (const CDeviceAuthAddAuthorizedBorrowersResponse   *message);
size_t cdevice_auth__add_authorized_borrowers__response__pack
                     (const CDeviceAuthAddAuthorizedBorrowersResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__add_authorized_borrowers__response__pack_to_buffer
                     (const CDeviceAuthAddAuthorizedBorrowersResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthAddAuthorizedBorrowersResponse *
       cdevice_auth__add_authorized_borrowers__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__add_authorized_borrowers__response__free_unpacked
                     (CDeviceAuthAddAuthorizedBorrowersResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__remove_authorized_borrowers__request__get_packed_size
                     (const CDeviceAuthRemoveAuthorizedBorrowersRequest   *message);
size_t cdevice_auth__remove_authorized_borrowers__request__pack
                     (const CDeviceAuthRemoveAuthorizedBorrowersRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__remove_authorized_borrowers__request__pack_to_buffer
                     (const CDeviceAuthRemoveAuthorizedBorrowersRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthRemoveAuthorizedBorrowersRequest *
       cdevice_auth__remove_authorized_borrowers__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__remove_authorized_borrowers__request__free_unpacked
                     (CDeviceAuthRemoveAuthorizedBorrowersRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__remove_authorized_borrowers__response__get_packed_size
                     (const CDeviceAuthRemoveAuthorizedBorrowersResponse   *message);
size_t cdevice_auth__remove_authorized_borrowers__response__pack
                     (const CDeviceAuthRemoveAuthorizedBorrowersResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__remove_authorized_borrowers__response__pack_to_buffer
                     (const CDeviceAuthRemoveAuthorizedBorrowersResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthRemoveAuthorizedBorrowersResponse *
       cdevice_auth__remove_authorized_borrowers__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__remove_authorized_borrowers__response__free_unpacked
                     (CDeviceAuthRemoveAuthorizedBorrowersResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_authorized_as_borrower__request__get_packed_size
                     (const CDeviceAuthGetAuthorizedAsBorrowerRequest   *message);
size_t cdevice_auth__get_authorized_as_borrower__request__pack
                     (const CDeviceAuthGetAuthorizedAsBorrowerRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_authorized_as_borrower__request__pack_to_buffer
                     (const CDeviceAuthGetAuthorizedAsBorrowerRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetAuthorizedAsBorrowerRequest *
       cdevice_auth__get_authorized_as_borrower__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_authorized_as_borrower__request__free_unpacked
                     (CDeviceAuthGetAuthorizedAsBorrowerRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_authorized_as_borrower__response__get_packed_size
                     (const CDeviceAuthGetAuthorizedAsBorrowerResponse   *message);
size_t cdevice_auth__get_authorized_as_borrower__response__pack
                     (const CDeviceAuthGetAuthorizedAsBorrowerResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_authorized_as_borrower__response__pack_to_buffer
                     (const CDeviceAuthGetAuthorizedAsBorrowerResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetAuthorizedAsBorrowerResponse *
       cdevice_auth__get_authorized_as_borrower__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_authorized_as_borrower__response__free_unpacked
                     (CDeviceAuthGetAuthorizedAsBorrowerResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_excluded_games_in_library__request__get_packed_size
                     (const CDeviceAuthGetExcludedGamesInLibraryRequest   *message);
size_t cdevice_auth__get_excluded_games_in_library__request__pack
                     (const CDeviceAuthGetExcludedGamesInLibraryRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_excluded_games_in_library__request__pack_to_buffer
                     (const CDeviceAuthGetExcludedGamesInLibraryRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetExcludedGamesInLibraryRequest *
       cdevice_auth__get_excluded_games_in_library__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_excluded_games_in_library__request__free_unpacked
                     (CDeviceAuthGetExcludedGamesInLibraryRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_excluded_games_in_library__response__get_packed_size
                     (const CDeviceAuthGetExcludedGamesInLibraryResponse   *message);
size_t cdevice_auth__get_excluded_games_in_library__response__pack
                     (const CDeviceAuthGetExcludedGamesInLibraryResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_excluded_games_in_library__response__pack_to_buffer
                     (const CDeviceAuthGetExcludedGamesInLibraryResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetExcludedGamesInLibraryResponse *
       cdevice_auth__get_excluded_games_in_library__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_excluded_games_in_library__response__free_unpacked
                     (CDeviceAuthGetExcludedGamesInLibraryResponse *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_borrower_play_history__request__get_packed_size
                     (const CDeviceAuthGetBorrowerPlayHistoryRequest   *message);
size_t cdevice_auth__get_borrower_play_history__request__pack
                     (const CDeviceAuthGetBorrowerPlayHistoryRequest   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_borrower_play_history__request__pack_to_buffer
                     (const CDeviceAuthGetBorrowerPlayHistoryRequest   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetBorrowerPlayHistoryRequest *
       cdevice_auth__get_borrower_play_history__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_borrower_play_history__request__free_unpacked
                     (CDeviceAuthGetBorrowerPlayHistoryRequest *message,
                      ProtobufCAllocator *allocator);
size_t cdevice_auth__get_borrower_play_history__response__get_packed_size
                     (const CDeviceAuthGetBorrowerPlayHistoryResponse   *message);
size_t cdevice_auth__get_borrower_play_history__response__pack
                     (const CDeviceAuthGetBorrowerPlayHistoryResponse   *message,
                      uint8_t             *out);
size_t cdevice_auth__get_borrower_play_history__response__pack_to_buffer
                     (const CDeviceAuthGetBorrowerPlayHistoryResponse   *message,
                      ProtobufCBuffer     *buffer);
CDeviceAuthGetBorrowerPlayHistoryResponse *
       cdevice_auth__get_borrower_play_history__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdevice_auth__get_borrower_play_history__response__free_unpacked
                     (CDeviceAuthGetBorrowerPlayHistoryResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDeviceAuthGetOwnAuthorizedDevicesRequest_Closure)
                 (const CDeviceAuthGetOwnAuthorizedDevicesRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetOwnAuthorizedDevicesResponse__Device_Closure)
                 (const CDeviceAuthGetOwnAuthorizedDevicesResponse__Device *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetOwnAuthorizedDevicesResponse_Closure)
                 (const CDeviceAuthGetOwnAuthorizedDevicesResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthAcceptAuthorizationRequestRequest_Closure)
                 (const CDeviceAuthAcceptAuthorizationRequestRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthAcceptAuthorizationRequestResponse_Closure)
                 (const CDeviceAuthAcceptAuthorizationRequestResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthAuthorizeRemoteDeviceRequest_Closure)
                 (const CDeviceAuthAuthorizeRemoteDeviceRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthAuthorizeRemoteDeviceResponse_Closure)
                 (const CDeviceAuthAuthorizeRemoteDeviceResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthDeauthorizeRemoteDeviceRequest_Closure)
                 (const CDeviceAuthDeauthorizeRemoteDeviceRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthDeauthorizeRemoteDeviceResponse_Closure)
                 (const CDeviceAuthDeauthorizeRemoteDeviceResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetUsedAuthorizedDevicesRequest_Closure)
                 (const CDeviceAuthGetUsedAuthorizedDevicesRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetUsedAuthorizedDevicesResponse__Device_Closure)
                 (const CDeviceAuthGetUsedAuthorizedDevicesResponse__Device *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetUsedAuthorizedDevicesResponse_Closure)
                 (const CDeviceAuthGetUsedAuthorizedDevicesResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedBorrowersRequest_Closure)
                 (const CDeviceAuthGetAuthorizedBorrowersRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedBorrowersResponse__Borrower_Closure)
                 (const CDeviceAuthGetAuthorizedBorrowersResponse__Borrower *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedBorrowersResponse_Closure)
                 (const CDeviceAuthGetAuthorizedBorrowersResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthAddAuthorizedBorrowersRequest_Closure)
                 (const CDeviceAuthAddAuthorizedBorrowersRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthAddAuthorizedBorrowersResponse_Closure)
                 (const CDeviceAuthAddAuthorizedBorrowersResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthRemoveAuthorizedBorrowersRequest_Closure)
                 (const CDeviceAuthRemoveAuthorizedBorrowersRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthRemoveAuthorizedBorrowersResponse_Closure)
                 (const CDeviceAuthRemoveAuthorizedBorrowersResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedAsBorrowerRequest_Closure)
                 (const CDeviceAuthGetAuthorizedAsBorrowerRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender_Closure)
                 (const CDeviceAuthGetAuthorizedAsBorrowerResponse__Lender *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetAuthorizedAsBorrowerResponse_Closure)
                 (const CDeviceAuthGetAuthorizedAsBorrowerResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetExcludedGamesInLibraryRequest_Closure)
                 (const CDeviceAuthGetExcludedGamesInLibraryRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame_Closure)
                 (const CDeviceAuthGetExcludedGamesInLibraryResponse__ExcludedGame *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetExcludedGamesInLibraryResponse_Closure)
                 (const CDeviceAuthGetExcludedGamesInLibraryResponse *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetBorrowerPlayHistoryRequest_Closure)
                 (const CDeviceAuthGetBorrowerPlayHistoryRequest *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory_Closure)
                 (const CDeviceAuthGetBorrowerPlayHistoryResponse__GameHistory *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory_Closure)
                 (const CDeviceAuthGetBorrowerPlayHistoryResponse__LenderHistory *message,
                  void *closure_data);
typedef void (*CDeviceAuthGetBorrowerPlayHistoryResponse_Closure)
                 (const CDeviceAuthGetBorrowerPlayHistoryResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct DeviceAuth_Service DeviceAuth_Service;
struct DeviceAuth_Service
{
  ProtobufCService base;
  void (*get_own_authorized_devices)(DeviceAuth_Service *service,
                                     const CDeviceAuthGetOwnAuthorizedDevicesRequest *input,
                                     CDeviceAuthGetOwnAuthorizedDevicesResponse_Closure closure,
                                     void *closure_data);
  void (*accept_authorization_request)(DeviceAuth_Service *service,
                                       const CDeviceAuthAcceptAuthorizationRequestRequest *input,
                                       CDeviceAuthAcceptAuthorizationRequestResponse_Closure closure,
                                       void *closure_data);
  void (*authorize_remote_device)(DeviceAuth_Service *service,
                                  const CDeviceAuthAuthorizeRemoteDeviceRequest *input,
                                  CDeviceAuthAuthorizeRemoteDeviceResponse_Closure closure,
                                  void *closure_data);
  void (*deauthorize_remote_device)(DeviceAuth_Service *service,
                                    const CDeviceAuthDeauthorizeRemoteDeviceRequest *input,
                                    CDeviceAuthDeauthorizeRemoteDeviceResponse_Closure closure,
                                    void *closure_data);
  void (*get_used_authorized_devices)(DeviceAuth_Service *service,
                                      const CDeviceAuthGetUsedAuthorizedDevicesRequest *input,
                                      CDeviceAuthGetUsedAuthorizedDevicesResponse_Closure closure,
                                      void *closure_data);
  void (*get_authorized_borrowers)(DeviceAuth_Service *service,
                                   const CDeviceAuthGetAuthorizedBorrowersRequest *input,
                                   CDeviceAuthGetAuthorizedBorrowersResponse_Closure closure,
                                   void *closure_data);
  void (*add_authorized_borrowers)(DeviceAuth_Service *service,
                                   const CDeviceAuthAddAuthorizedBorrowersRequest *input,
                                   CDeviceAuthAddAuthorizedBorrowersResponse_Closure closure,
                                   void *closure_data);
  void (*remove_authorized_borrowers)(DeviceAuth_Service *service,
                                      const CDeviceAuthRemoveAuthorizedBorrowersRequest *input,
                                      CDeviceAuthRemoveAuthorizedBorrowersResponse_Closure closure,
                                      void *closure_data);
  void (*get_authorized_as_borrower)(DeviceAuth_Service *service,
                                     const CDeviceAuthGetAuthorizedAsBorrowerRequest *input,
                                     CDeviceAuthGetAuthorizedAsBorrowerResponse_Closure closure,
                                     void *closure_data);
  void (*get_excluded_games_in_library)(DeviceAuth_Service *service,
                                        const CDeviceAuthGetExcludedGamesInLibraryRequest *input,
                                        CDeviceAuthGetExcludedGamesInLibraryResponse_Closure closure,
                                        void *closure_data);
  void (*get_borrower_play_history)(DeviceAuth_Service *service,
                                    const CDeviceAuthGetBorrowerPlayHistoryRequest *input,
                                    CDeviceAuthGetBorrowerPlayHistoryResponse_Closure closure,
                                    void *closure_data);
};
typedef void (*DeviceAuth_ServiceDestroy)(DeviceAuth_Service *);
void device_auth__init (DeviceAuth_Service *service,
                        DeviceAuth_ServiceDestroy destroy);
#define DEVICE_AUTH__BASE_INIT \
    { &device_auth__descriptor, protobuf_c_service_invoke_internal, NULL }
#define DEVICE_AUTH__INIT(function_prefix__) \
    { DEVICE_AUTH__BASE_INIT,\
      function_prefix__ ## get_own_authorized_devices,\
      function_prefix__ ## accept_authorization_request,\
      function_prefix__ ## authorize_remote_device,\
      function_prefix__ ## deauthorize_remote_device,\
      function_prefix__ ## get_used_authorized_devices,\
      function_prefix__ ## get_authorized_borrowers,\
      function_prefix__ ## add_authorized_borrowers,\
      function_prefix__ ## remove_authorized_borrowers,\
      function_prefix__ ## get_authorized_as_borrower,\
      function_prefix__ ## get_excluded_games_in_library,\
      function_prefix__ ## get_borrower_play_history  }
void device_auth__get_own_authorized_devices(ProtobufCService *service,
                                             const CDeviceAuthGetOwnAuthorizedDevicesRequest *input,
                                             CDeviceAuthGetOwnAuthorizedDevicesResponse_Closure closure,
                                             void *closure_data);
void device_auth__accept_authorization_request(ProtobufCService *service,
                                               const CDeviceAuthAcceptAuthorizationRequestRequest *input,
                                               CDeviceAuthAcceptAuthorizationRequestResponse_Closure closure,
                                               void *closure_data);
void device_auth__authorize_remote_device(ProtobufCService *service,
                                          const CDeviceAuthAuthorizeRemoteDeviceRequest *input,
                                          CDeviceAuthAuthorizeRemoteDeviceResponse_Closure closure,
                                          void *closure_data);
void device_auth__deauthorize_remote_device(ProtobufCService *service,
                                            const CDeviceAuthDeauthorizeRemoteDeviceRequest *input,
                                            CDeviceAuthDeauthorizeRemoteDeviceResponse_Closure closure,
                                            void *closure_data);
void device_auth__get_used_authorized_devices(ProtobufCService *service,
                                              const CDeviceAuthGetUsedAuthorizedDevicesRequest *input,
                                              CDeviceAuthGetUsedAuthorizedDevicesResponse_Closure closure,
                                              void *closure_data);
void device_auth__get_authorized_borrowers(ProtobufCService *service,
                                           const CDeviceAuthGetAuthorizedBorrowersRequest *input,
                                           CDeviceAuthGetAuthorizedBorrowersResponse_Closure closure,
                                           void *closure_data);
void device_auth__add_authorized_borrowers(ProtobufCService *service,
                                           const CDeviceAuthAddAuthorizedBorrowersRequest *input,
                                           CDeviceAuthAddAuthorizedBorrowersResponse_Closure closure,
                                           void *closure_data);
void device_auth__remove_authorized_borrowers(ProtobufCService *service,
                                              const CDeviceAuthRemoveAuthorizedBorrowersRequest *input,
                                              CDeviceAuthRemoveAuthorizedBorrowersResponse_Closure closure,
                                              void *closure_data);
void device_auth__get_authorized_as_borrower(ProtobufCService *service,
                                             const CDeviceAuthGetAuthorizedAsBorrowerRequest *input,
                                             CDeviceAuthGetAuthorizedAsBorrowerResponse_Closure closure,
                                             void *closure_data);
void device_auth__get_excluded_games_in_library(ProtobufCService *service,
                                                const CDeviceAuthGetExcludedGamesInLibraryRequest *input,
                                                CDeviceAuthGetExcludedGamesInLibraryResponse_Closure closure,
                                                void *closure_data);
void device_auth__get_borrower_play_history(ProtobufCService *service,
                                            const CDeviceAuthGetBorrowerPlayHistoryRequest *input,
                                            CDeviceAuthGetBorrowerPlayHistoryResponse_Closure closure,
                                            void *closure_data);

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED */
