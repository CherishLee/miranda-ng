/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: enums.proto */

#ifndef PROTOBUF_C_enums_2eproto__INCLUDED
#define PROTOBUF_C_enums_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_base.pb-c.h"

/* --- enums --- */

typedef enum _EPublishedFileQueryType {
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByVote = 0,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByPublicationDate = 1,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_AcceptedForGameRankedByAcceptanceDate = 2,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByTrend = 3,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_FavoritedByFriendsRankedByPublicationDate = 4,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_CreatedByFriendsRankedByPublicationDate = 5,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByNumTimesReported = 6,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_CreatedByFollowedUsersRankedByPublicationDate = 7,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_NotYetRated = 8,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByTotalUniqueSubscriptions = 9,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByTotalVotesAsc = 10,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByVotesUp = 11,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByTextSearch = 12,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByPlaytimeTrend = 13,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByTotalPlaytime = 14,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByAveragePlaytimeTrend = 15,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByLifetimeAveragePlaytime = 16,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByPlaytimeSessionsTrend = 17,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByLifetimePlaytimeSessions = 18,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByInappropriateContentRating = 19,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByBanContentCheck = 20,
  EPUBLISHED_FILE_QUERY_TYPE__k_PublishedFileQueryType_RankedByLastUpdatedDate = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPUBLISHED_FILE_QUERY_TYPE)
} EPublishedFileQueryType;
typedef enum _EPublishedFileInappropriateProvider {
  EPUBLISHED_FILE_INAPPROPRIATE_PROVIDER__k_EPublishedFileInappropriateProvider_Invalid = 0,
  EPUBLISHED_FILE_INAPPROPRIATE_PROVIDER__k_EPublishedFileInappropriateProvider_Google = 1,
  EPUBLISHED_FILE_INAPPROPRIATE_PROVIDER__k_EPublishedFileInappropriateProvider_Amazon = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPUBLISHED_FILE_INAPPROPRIATE_PROVIDER)
} EPublishedFileInappropriateProvider;
typedef enum _EPublishedFileInappropriateResult {
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_NotScanned = 0,
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_VeryUnlikely = 1,
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_Unlikely = 30,
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_Possible = 50,
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_Likely = 75,
  EPUBLISHED_FILE_INAPPROPRIATE_RESULT__k_EPublishedFileInappropriateResult_VeryLikely = 100
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPUBLISHED_FILE_INAPPROPRIATE_RESULT)
} EPublishedFileInappropriateResult;
typedef enum _EPersonaStateFlag {
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_HasRichPresence = 1,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_InJoinableGame = 2,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_Golden = 4,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_RemotePlayTogether = 8,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_ClientTypeWeb = 256,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_ClientTypeMobile = 512,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_ClientTypeTenfoot = 1024,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_ClientTypeVR = 2048,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_LaunchTypeGamepad = 4096,
  EPERSONA_STATE_FLAG__k_EPersonaStateFlag_LaunchTypeCompatTool = 8192
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPERSONA_STATE_FLAG)
} EPersonaStateFlag;
typedef enum _EContentCheckProvider {
  ECONTENT_CHECK_PROVIDER__k_EContentCheckProvider_Invalid = 0,
  ECONTENT_CHECK_PROVIDER__k_EContentCheckProvider_Google = 1,
  ECONTENT_CHECK_PROVIDER__k_EContentCheckProvider_Amazon = 2,
  ECONTENT_CHECK_PROVIDER__k_EContentCheckProvider_Local = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECONTENT_CHECK_PROVIDER)
} EContentCheckProvider;
typedef enum _EProfileCustomizationType {
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeInvalid = 0,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeRareAchievementShowcase = 1,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeGameCollector = 2,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeItemShowcase = 3,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeTradeShowcase = 4,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeBadges = 5,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeFavoriteGame = 6,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeScreenshotShowcase = 7,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeCustomText = 8,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeFavoriteGroup = 9,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeRecommendation = 10,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeWorkshopItem = 11,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeMyWorkshop = 12,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeArtworkShowcase = 13,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeVideoShowcase = 14,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeGuides = 15,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeMyGuides = 16,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeAchievements = 17,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeGreenlight = 18,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeMyGreenlight = 19,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeSalien = 20,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeLoyaltyRewardReactions = 21,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeSingleArtworkShowcase = 22,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeAchievementsCompletionist = 23,
  EPROFILE_CUSTOMIZATION_TYPE__k_EProfileCustomizationTypeReplay = 24
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPROFILE_CUSTOMIZATION_TYPE)
} EProfileCustomizationType;
typedef enum _EPublishedFileStorageSystem {
  EPUBLISHED_FILE_STORAGE_SYSTEM__k_EPublishedFileStorageSystemInvalid = 0,
  EPUBLISHED_FILE_STORAGE_SYSTEM__k_EPublishedFileStorageSystemLegacyCloud = 1,
  EPUBLISHED_FILE_STORAGE_SYSTEM__k_EPublishedFileStorageSystemDepot = 2,
  EPUBLISHED_FILE_STORAGE_SYSTEM__k_EPublishedFileStorageSystemUGCCloud = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPUBLISHED_FILE_STORAGE_SYSTEM)
} EPublishedFileStorageSystem;
typedef enum _ECloudStoragePersistState {
  ECLOUD_STORAGE_PERSIST_STATE__k_ECloudStoragePersistStatePersisted = 0,
  ECLOUD_STORAGE_PERSIST_STATE__k_ECloudStoragePersistStateForgotten = 1,
  ECLOUD_STORAGE_PERSIST_STATE__k_ECloudStoragePersistStateDeleted = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECLOUD_STORAGE_PERSIST_STATE)
} ECloudStoragePersistState;
typedef enum _ESDCardFormatStage {
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Invalid = 0,
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Starting = 1,
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Testing = 2,
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Rescuing = 3,
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Formatting = 4,
  ESDCARD_FORMAT_STAGE__k_ESDCardFormatStage_Finalizing = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESDCARD_FORMAT_STAGE)
} ESDCardFormatStage;
typedef enum _ESystemFanControlMode {
  ESYSTEM_FAN_CONTROL_MODE__k_SystemFanControlMode_Invalid = 0,
  ESYSTEM_FAN_CONTROL_MODE__k_SystemFanControlMode_Disabled = 1,
  ESYSTEM_FAN_CONTROL_MODE__k_SystemFanControlMode_Default = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_FAN_CONTROL_MODE)
} ESystemFanControlMode;
typedef enum _EColorProfile {
  ECOLOR_PROFILE__k_EColorProfile_Invalid = 0,
  ECOLOR_PROFILE__k_EColorProfile_Native = 1,
  ECOLOR_PROFILE__k_EColorProfile_Standard = 2,
  ECOLOR_PROFILE__k_EColorProfile_Vivid = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECOLOR_PROFILE)
} EColorProfile;
typedef enum _EBluetoothDeviceType {
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Invalid = 0,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Unknown = 1,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Phone = 2,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Computer = 3,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Headset = 4,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Headphones = 5,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Speakers = 6,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_OtherAudio = 7,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Mouse = 8,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Joystick = 9,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Gamepad = 10,
  EBLUETOOTH_DEVICE_TYPE__k_BluetoothDeviceType_Keyboard = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EBLUETOOTH_DEVICE_TYPE)
} EBluetoothDeviceType;
typedef enum _ESystemAudioDirection {
  ESYSTEM_AUDIO_DIRECTION__k_SystemAudioDirection_Invalid = 0,
  ESYSTEM_AUDIO_DIRECTION__k_SystemAudioDirection_Input = 1,
  ESYSTEM_AUDIO_DIRECTION__k_SystemAudioDirection_Output = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_AUDIO_DIRECTION)
} ESystemAudioDirection;
typedef enum _ESystemAudioChannel {
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_Invalid = 0,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_Aggregated = 1,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_FrontLeft = 2,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_FrontRight = 3,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_LFE = 4,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_BackLeft = 5,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_BackRight = 6,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_FrontCenter = 7,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_Unknown = 8,
  ESYSTEM_AUDIO_CHANNEL__k_SystemAudioChannel_Mono = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_AUDIO_CHANNEL)
} ESystemAudioChannel;
typedef enum _ESystemAudioPortType {
  ESYSTEM_AUDIO_PORT_TYPE__k_SystemAudioPortType_Invalid = 0,
  ESYSTEM_AUDIO_PORT_TYPE__k_SystemAudioPortType_Unknown = 1,
  ESYSTEM_AUDIO_PORT_TYPE__k_SystemAudioPortType_Audio32f = 2,
  ESYSTEM_AUDIO_PORT_TYPE__k_SystemAudioPortType_Midi8b = 3,
  ESYSTEM_AUDIO_PORT_TYPE__k_SystemAudioPortType_Video32RGBA = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_AUDIO_PORT_TYPE)
} ESystemAudioPortType;
typedef enum _ESystemAudioPortDirection {
  ESYSTEM_AUDIO_PORT_DIRECTION__k_SystemAudioPortDirection_Invalid = 0,
  ESYSTEM_AUDIO_PORT_DIRECTION__k_SystemAudioPortDirection_Input = 1,
  ESYSTEM_AUDIO_PORT_DIRECTION__k_SystemAudioPortDirection_Output = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_AUDIO_PORT_DIRECTION)
} ESystemAudioPortDirection;
typedef enum _ESystemServiceState {
  ESYSTEM_SERVICE_STATE__k_ESystemServiceState_Unavailable = 0,
  ESYSTEM_SERVICE_STATE__k_ESystemServiceState_Disabled = 1,
  ESYSTEM_SERVICE_STATE__k_ESystemServiceState_Enabled = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_SERVICE_STATE)
} ESystemServiceState;
typedef enum _EGraphicsPerfOverlayLevel {
  EGRAPHICS_PERF_OVERLAY_LEVEL__k_EGraphicsPerfOverlayLevel_Hidden = 0,
  EGRAPHICS_PERF_OVERLAY_LEVEL__k_EGraphicsPerfOverlayLevel_Basic = 1,
  EGRAPHICS_PERF_OVERLAY_LEVEL__k_EGraphicsPerfOverlayLevel_Medium = 2,
  EGRAPHICS_PERF_OVERLAY_LEVEL__k_EGraphicsPerfOverlayLevel_Full = 3,
  EGRAPHICS_PERF_OVERLAY_LEVEL__k_EGraphicsPerfOverlayLevel_Minimal = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EGRAPHICS_PERF_OVERLAY_LEVEL)
} EGraphicsPerfOverlayLevel;
typedef enum _EGPUPerformanceLevel {
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_Invalid = 0,
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_Auto = 1,
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_Manual = 2,
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_Low = 3,
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_High = 4,
  EGPUPERFORMANCE_LEVEL__k_EGPUPerformanceLevel_Profiling = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EGPUPERFORMANCE_LEVEL)
} EGPUPerformanceLevel;
typedef enum _EScalingFilter {
  ESCALING_FILTER__k_EScalingFilter_Invalid = 0,
  ESCALING_FILTER__k_EScalingFilter_FSR = 1,
  ESCALING_FILTER__k_EScalingFilter_Nearest = 2,
  ESCALING_FILTER__k_EScalingFilter_Integer = 3,
  ESCALING_FILTER__k_EScalingFilter_Linear = 4,
  ESCALING_FILTER__k_EScalingFilter_NIS = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESCALING_FILTER)
} EScalingFilter;
typedef enum _ESplitScalingFilter {
  ESPLIT_SCALING_FILTER__k_ESplitScalingFilter_Invalid = 0,
  ESPLIT_SCALING_FILTER__k_ESplitScalingFilter_Linear = 1,
  ESPLIT_SCALING_FILTER__k_ESplitScalingFilter_Nearest = 2,
  ESPLIT_SCALING_FILTER__k_ESplitScalingFilter_FSR = 3,
  ESPLIT_SCALING_FILTER__k_ESplitScalingFilter_NIS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESPLIT_SCALING_FILTER)
} ESplitScalingFilter;
typedef enum _ESplitScalingScaler {
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Invalid = 0,
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Auto = 1,
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Integer = 2,
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Fit = 3,
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Fill = 4,
  ESPLIT_SCALING_SCALER__k_ESplitScalingScaler_Stretch = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESPLIT_SCALING_SCALER)
} ESplitScalingScaler;
typedef enum _EHDRToneMapOperator {
  EHDRTONE_MAP_OPERATOR__k_EHDRToneMapOperator_Invalid = 0,
  EHDRTONE_MAP_OPERATOR__k_EHDRToneMapOperator_Uncharted = 1,
  EHDRTONE_MAP_OPERATOR__k_EHDRToneMapOperator_Reinhard = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EHDRTONE_MAP_OPERATOR)
} EHDRToneMapOperator;
typedef enum _ECPUGovernor {
  ECPUGOVERNOR__k_ECPUGovernor_Invalid = 0,
  ECPUGOVERNOR__k_ECPUGovernor_Perf = 1,
  ECPUGOVERNOR__k_ECPUGovernor_Powersave = 2,
  ECPUGOVERNOR__k_ECPUGovernor_Manual = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECPUGOVERNOR)
} ECPUGovernor;
typedef enum _EUpdaterType {
  EUPDATER_TYPE__k_EUpdaterType_Invalid = 0,
  EUPDATER_TYPE__k_EUpdaterType_Client = 1,
  EUPDATER_TYPE__k_EUpdaterType_OS = 2,
  EUPDATER_TYPE__k_EUpdaterType_BIOS = 3,
  EUPDATER_TYPE__k_EUpdaterType_Aggregated = 4,
  EUPDATER_TYPE__k_EUpdaterType_Test1 = 5,
  EUPDATER_TYPE__k_EUpdaterType_Test2 = 6,
  EUPDATER_TYPE__k_EUpdaterType_Dummy = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EUPDATER_TYPE)
} EUpdaterType;
typedef enum _EUpdaterState {
  EUPDATER_STATE__k_EUpdaterState_Invalid = 0,
  EUPDATER_STATE__k_EUpdaterState_UpToDate = 2,
  EUPDATER_STATE__k_EUpdaterState_Checking = 3,
  EUPDATER_STATE__k_EUpdaterState_Available = 4,
  EUPDATER_STATE__k_EUpdaterState_Applying = 5,
  EUPDATER_STATE__k_EUpdaterState_ClientRestartPending = 6,
  EUPDATER_STATE__k_EUpdaterState_SystemRestartPending = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EUPDATER_STATE)
} EUpdaterState;
typedef enum _EStorageBlockContentType {
  ESTORAGE_BLOCK_CONTENT_TYPE__k_EStorageBlockContentType_Invalid = 0,
  ESTORAGE_BLOCK_CONTENT_TYPE__k_EStorageBlockContentType_Unknown = 1,
  ESTORAGE_BLOCK_CONTENT_TYPE__k_EStorageBlockContentType_FileSystem = 2,
  ESTORAGE_BLOCK_CONTENT_TYPE__k_EStorageBlockContentType_Crypto = 3,
  ESTORAGE_BLOCK_CONTENT_TYPE__k_EStorageBlockContentType_Raid = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTORAGE_BLOCK_CONTENT_TYPE)
} EStorageBlockContentType;
typedef enum _EStorageBlockFileSystemType {
  ESTORAGE_BLOCK_FILE_SYSTEM_TYPE__k_EStorageBlockFileSystemType_Invalid = 0,
  ESTORAGE_BLOCK_FILE_SYSTEM_TYPE__k_EStorageBlockFileSystemType_Unknown = 1,
  ESTORAGE_BLOCK_FILE_SYSTEM_TYPE__k_EStorageBlockFileSystemType_VFat = 2,
  ESTORAGE_BLOCK_FILE_SYSTEM_TYPE__k_EStorageBlockFileSystemType_Ext4 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTORAGE_BLOCK_FILE_SYSTEM_TYPE)
} EStorageBlockFileSystemType;
typedef enum _EStorageDriveMediaType {
  ESTORAGE_DRIVE_MEDIA_TYPE__k_EStorageDriveMediaType_Invalid = 0,
  ESTORAGE_DRIVE_MEDIA_TYPE__k_EStorageDriveMediaType_Unknown = 1,
  ESTORAGE_DRIVE_MEDIA_TYPE__k_EStorageDriveMediaType_HDD = 2,
  ESTORAGE_DRIVE_MEDIA_TYPE__k_EStorageDriveMediaType_SSD = 3,
  ESTORAGE_DRIVE_MEDIA_TYPE__k_EStorageDriveMediaType_Removable = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTORAGE_DRIVE_MEDIA_TYPE)
} EStorageDriveMediaType;
typedef enum _ESystemDisplayCompatibilityMode {
  ESYSTEM_DISPLAY_COMPATIBILITY_MODE__k_ESystemDisplayCompatibilityMode_Invalid = 0,
  ESYSTEM_DISPLAY_COMPATIBILITY_MODE__k_ESystemDisplayCompatibilityMode_None = 1,
  ESYSTEM_DISPLAY_COMPATIBILITY_MODE__k_ESystemDisplayCompatibilityMode_MinimalBandwith = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESYSTEM_DISPLAY_COMPATIBILITY_MODE)
} ESystemDisplayCompatibilityMode;
typedef enum _ESteamDeckCompatibilityCategory {
  ESTEAM_DECK_COMPATIBILITY_CATEGORY__k_ESteamDeckCompatibilityCategory_Unknown = 0,
  ESTEAM_DECK_COMPATIBILITY_CATEGORY__k_ESteamDeckCompatibilityCategory_Unsupported = 1,
  ESTEAM_DECK_COMPATIBILITY_CATEGORY__k_ESteamDeckCompatibilityCategory_Playable = 2,
  ESTEAM_DECK_COMPATIBILITY_CATEGORY__k_ESteamDeckCompatibilityCategory_Verified = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTEAM_DECK_COMPATIBILITY_CATEGORY)
} ESteamDeckCompatibilityCategory;
typedef enum _ESteamDeckCompatibilityResultDisplayType {
  ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE__k_ESteamDeckCompatibilityResultDisplayType_Invisible = 0,
  ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE__k_ESteamDeckCompatibilityResultDisplayType_Informational = 1,
  ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE__k_ESteamDeckCompatibilityResultDisplayType_Unsupported = 2,
  ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE__k_ESteamDeckCompatibilityResultDisplayType_Playable = 3,
  ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE__k_ESteamDeckCompatibilityResultDisplayType_Verified = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTEAM_DECK_COMPATIBILITY_RESULT_DISPLAY_TYPE)
} ESteamDeckCompatibilityResultDisplayType;
typedef enum _EACState {
  EACSTATE__k_EACState_Unknown = 0,
  EACSTATE__k_EACState_Disconnected = 1,
  EACSTATE__k_EACState_Connected = 2,
  EACSTATE__k_EACState_ConnectedSlow = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EACSTATE)
} EACState;
typedef enum _EBatteryState {
  EBATTERY_STATE__k_EBatteryState_Unknown = 0,
  EBATTERY_STATE__k_EBatteryState_Discharging = 1,
  EBATTERY_STATE__k_EBatteryState_Charging = 2,
  EBATTERY_STATE__k_EBatteryState_Full = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EBATTERY_STATE)
} EBatteryState;
typedef enum _EOSBranch {
  EOSBRANCH__k_EOSBranch_Unknown = 0,
  EOSBRANCH__k_EOSBranch_Release = 1,
  EOSBRANCH__k_EOSBranch_ReleaseCandidate = 2,
  EOSBRANCH__k_EOSBranch_Beta = 3,
  EOSBRANCH__k_EOSBranch_BetaCandidate = 4,
  EOSBRANCH__k_EOSBranch_Main = 5,
  EOSBRANCH__k_EOSBranch_Staging = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EOSBRANCH)
} EOSBranch;
typedef enum _ECommunityItemClass {
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Invalid = 0,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Badge = 1,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_GameCard = 2,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_ProfileBackground = 3,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Emoticon = 4,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_BoosterPack = 5,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Consumable = 6,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_GameGoo = 7,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_ProfileModifier = 8,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Scene = 9,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_SalienItem = 10,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_Sticker = 11,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_ChatEffect = 12,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_MiniProfileBackground = 13,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_AvatarFrame = 14,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_AnimatedAvatar = 15,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_SteamDeckKeyboardSkin = 16,
  ECOMMUNITY_ITEM_CLASS__k_ECommunityItemClass_SteamDeckStartupMovie = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECOMMUNITY_ITEM_CLASS)
} ECommunityItemClass;
typedef enum _ESteamDeckCompatibilityFeedback {
  ESTEAM_DECK_COMPATIBILITY_FEEDBACK__k_ESteamDeckCompatibilityFeedback_Unset = 0,
  ESTEAM_DECK_COMPATIBILITY_FEEDBACK__k_ESteamDeckCompatibilityFeedback_Agree = 1,
  ESTEAM_DECK_COMPATIBILITY_FEEDBACK__k_ESteamDeckCompatibilityFeedback_Disagree = 2,
  ESTEAM_DECK_COMPATIBILITY_FEEDBACK__k_ESteamDeckCompatibilityFeedback_Ignore = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTEAM_DECK_COMPATIBILITY_FEEDBACK)
} ESteamDeckCompatibilityFeedback;
typedef enum _EProvideDeckFeedbackPreference {
  EPROVIDE_DECK_FEEDBACK_PREFERENCE__k_EProvideDeckFeedbackPreference_Unset = 0,
  EPROVIDE_DECK_FEEDBACK_PREFERENCE__k_EProvideDeckFeedbackPreference_Yes = 1,
  EPROVIDE_DECK_FEEDBACK_PREFERENCE__k_EProvideDeckFeedbackPreference_No = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPROVIDE_DECK_FEEDBACK_PREFERENCE)
} EProvideDeckFeedbackPreference;
typedef enum _ETouchGesture {
  ETOUCH_GESTURE__k_ETouchGestureNone = 0,
  ETOUCH_GESTURE__k_ETouchGestureTouch = 1,
  ETOUCH_GESTURE__k_ETouchGestureTap = 2,
  ETOUCH_GESTURE__k_ETouchGestureDoubleTap = 3,
  ETOUCH_GESTURE__k_ETouchGestureShortPress = 4,
  ETOUCH_GESTURE__k_ETouchGestureLongPress = 5,
  ETOUCH_GESTURE__k_ETouchGestureLongTap = 6,
  ETOUCH_GESTURE__k_ETouchGestureTwoFingerTap = 7,
  ETOUCH_GESTURE__k_ETouchGestureTapCancelled = 8,
  ETOUCH_GESTURE__k_ETouchGesturePinchBegin = 9,
  ETOUCH_GESTURE__k_ETouchGesturePinchUpdate = 10,
  ETOUCH_GESTURE__k_ETouchGesturePinchEnd = 11,
  ETOUCH_GESTURE__k_ETouchGestureFlingStart = 12,
  ETOUCH_GESTURE__k_ETouchGestureFlingCancelled = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ETOUCH_GESTURE)
} ETouchGesture;
typedef enum _ESessionPersistence {
  ESESSION_PERSISTENCE__k_ESessionPersistence_Invalid = -1,
  ESESSION_PERSISTENCE__k_ESessionPersistence_Ephemeral = 0,
  ESESSION_PERSISTENCE__k_ESessionPersistence_Persistent = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESESSION_PERSISTENCE)
} ESessionPersistence;
typedef enum _ENewSteamAnnouncementState {
  ENEW_STEAM_ANNOUNCEMENT_STATE__k_ENewSteamAnnouncementState_Invalid = 0,
  ENEW_STEAM_ANNOUNCEMENT_STATE__k_ENewSteamAnnouncementState_AllRead = 1,
  ENEW_STEAM_ANNOUNCEMENT_STATE__k_ENewSteamAnnouncementState_NewAnnouncement = 2,
  ENEW_STEAM_ANNOUNCEMENT_STATE__k_ENewSteamAnnouncementState_FeaturedAnnouncement = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ENEW_STEAM_ANNOUNCEMENT_STATE)
} ENewSteamAnnouncementState;

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    epublished_file_query_type__descriptor;
extern const ProtobufCEnumDescriptor    epublished_file_inappropriate_provider__descriptor;
extern const ProtobufCEnumDescriptor    epublished_file_inappropriate_result__descriptor;
extern const ProtobufCEnumDescriptor    epersona_state_flag__descriptor;
extern const ProtobufCEnumDescriptor    econtent_check_provider__descriptor;
extern const ProtobufCEnumDescriptor    eprofile_customization_type__descriptor;
extern const ProtobufCEnumDescriptor    epublished_file_storage_system__descriptor;
extern const ProtobufCEnumDescriptor    ecloud_storage_persist_state__descriptor;
extern const ProtobufCEnumDescriptor    esdcard_format_stage__descriptor;
extern const ProtobufCEnumDescriptor    esystem_fan_control_mode__descriptor;
extern const ProtobufCEnumDescriptor    ecolor_profile__descriptor;
extern const ProtobufCEnumDescriptor    ebluetooth_device_type__descriptor;
extern const ProtobufCEnumDescriptor    esystem_audio_direction__descriptor;
extern const ProtobufCEnumDescriptor    esystem_audio_channel__descriptor;
extern const ProtobufCEnumDescriptor    esystem_audio_port_type__descriptor;
extern const ProtobufCEnumDescriptor    esystem_audio_port_direction__descriptor;
extern const ProtobufCEnumDescriptor    esystem_service_state__descriptor;
extern const ProtobufCEnumDescriptor    egraphics_perf_overlay_level__descriptor;
extern const ProtobufCEnumDescriptor    egpuperformance_level__descriptor;
extern const ProtobufCEnumDescriptor    escaling_filter__descriptor;
extern const ProtobufCEnumDescriptor    esplit_scaling_filter__descriptor;
extern const ProtobufCEnumDescriptor    esplit_scaling_scaler__descriptor;
extern const ProtobufCEnumDescriptor    ehdrtone_map_operator__descriptor;
extern const ProtobufCEnumDescriptor    ecpugovernor__descriptor;
extern const ProtobufCEnumDescriptor    eupdater_type__descriptor;
extern const ProtobufCEnumDescriptor    eupdater_state__descriptor;
extern const ProtobufCEnumDescriptor    estorage_block_content_type__descriptor;
extern const ProtobufCEnumDescriptor    estorage_block_file_system_type__descriptor;
extern const ProtobufCEnumDescriptor    estorage_drive_media_type__descriptor;
extern const ProtobufCEnumDescriptor    esystem_display_compatibility_mode__descriptor;
extern const ProtobufCEnumDescriptor    esteam_deck_compatibility_category__descriptor;
extern const ProtobufCEnumDescriptor    esteam_deck_compatibility_result_display_type__descriptor;
extern const ProtobufCEnumDescriptor    eacstate__descriptor;
extern const ProtobufCEnumDescriptor    ebattery_state__descriptor;
extern const ProtobufCEnumDescriptor    eosbranch__descriptor;
extern const ProtobufCEnumDescriptor    ecommunity_item_class__descriptor;
extern const ProtobufCEnumDescriptor    esteam_deck_compatibility_feedback__descriptor;
extern const ProtobufCEnumDescriptor    eprovide_deck_feedback_preference__descriptor;
extern const ProtobufCEnumDescriptor    etouch_gesture__descriptor;
extern const ProtobufCEnumDescriptor    esession_persistence__descriptor;
extern const ProtobufCEnumDescriptor    enew_steam_announcement_state__descriptor;

/* --- messages --- */

/* --- per-message closures --- */

/* --- services --- */


PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_enums_2eproto__INCLUDED */
