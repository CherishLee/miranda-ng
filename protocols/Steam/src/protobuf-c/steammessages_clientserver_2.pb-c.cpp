/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_clientserver_2.proto */

/* Do not generate deprecated warnings for self */
#ifndef PROTOBUF_C__NO_DEPRECATED
#define PROTOBUF_C__NO_DEPRECATED
#endif

#include "steammessages_clientserver_2.pb-c.h"
size_t cmsg_client_update_user_game_info__get_packed_size
                     (const CMsgClientUpdateUserGameInfo *message)
{
  assert(message->descriptor == &cmsg_client_update_user_game_info__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_update_user_game_info__pack
                     (const CMsgClientUpdateUserGameInfo *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_update_user_game_info__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_update_user_game_info__pack_to_buffer
                     (const CMsgClientUpdateUserGameInfo *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_update_user_game_info__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUpdateUserGameInfo *
       cmsg_client_update_user_game_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUpdateUserGameInfo *)
     protobuf_c_message_unpack (&cmsg_client_update_user_game_info__descriptor,
                                allocator, len, data);
}
void   cmsg_client_update_user_game_info__free_unpacked
                     (CMsgClientUpdateUserGameInfo *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_update_user_game_info__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_rich_presence_upload__get_packed_size
                     (const CMsgClientRichPresenceUpload *message)
{
  assert(message->descriptor == &cmsg_client_rich_presence_upload__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_rich_presence_upload__pack
                     (const CMsgClientRichPresenceUpload *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_rich_presence_upload__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_rich_presence_upload__pack_to_buffer
                     (const CMsgClientRichPresenceUpload *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_rich_presence_upload__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRichPresenceUpload *
       cmsg_client_rich_presence_upload__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRichPresenceUpload *)
     protobuf_c_message_unpack (&cmsg_client_rich_presence_upload__descriptor,
                                allocator, len, data);
}
void   cmsg_client_rich_presence_upload__free_unpacked
                     (CMsgClientRichPresenceUpload *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_rich_presence_upload__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_rich_presence_request__get_packed_size
                     (const CMsgClientRichPresenceRequest *message)
{
  assert(message->descriptor == &cmsg_client_rich_presence_request__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_rich_presence_request__pack
                     (const CMsgClientRichPresenceRequest *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_rich_presence_request__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_rich_presence_request__pack_to_buffer
                     (const CMsgClientRichPresenceRequest *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_rich_presence_request__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRichPresenceRequest *
       cmsg_client_rich_presence_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRichPresenceRequest *)
     protobuf_c_message_unpack (&cmsg_client_rich_presence_request__descriptor,
                                allocator, len, data);
}
void   cmsg_client_rich_presence_request__free_unpacked
                     (CMsgClientRichPresenceRequest *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_rich_presence_request__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_rich_presence_info__get_packed_size
                     (const CMsgClientRichPresenceInfo *message)
{
  assert(message->descriptor == &cmsg_client_rich_presence_info__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_rich_presence_info__pack
                     (const CMsgClientRichPresenceInfo *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_rich_presence_info__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_rich_presence_info__pack_to_buffer
                     (const CMsgClientRichPresenceInfo *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_rich_presence_info__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRichPresenceInfo *
       cmsg_client_rich_presence_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRichPresenceInfo *)
     protobuf_c_message_unpack (&cmsg_client_rich_presence_info__descriptor,
                                allocator, len, data);
}
void   cmsg_client_rich_presence_info__free_unpacked
                     (CMsgClientRichPresenceInfo *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_rich_presence_info__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_check_file_signature__get_packed_size
                     (const CMsgClientCheckFileSignature *message)
{
  assert(message->descriptor == &cmsg_client_check_file_signature__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_check_file_signature__pack
                     (const CMsgClientCheckFileSignature *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_check_file_signature__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_check_file_signature__pack_to_buffer
                     (const CMsgClientCheckFileSignature *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_check_file_signature__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientCheckFileSignature *
       cmsg_client_check_file_signature__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientCheckFileSignature *)
     protobuf_c_message_unpack (&cmsg_client_check_file_signature__descriptor,
                                allocator, len, data);
}
void   cmsg_client_check_file_signature__free_unpacked
                     (CMsgClientCheckFileSignature *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_check_file_signature__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_check_file_signature_response__get_packed_size
                     (const CMsgClientCheckFileSignatureResponse *message)
{
  assert(message->descriptor == &cmsg_client_check_file_signature_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_check_file_signature_response__pack
                     (const CMsgClientCheckFileSignatureResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_check_file_signature_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_check_file_signature_response__pack_to_buffer
                     (const CMsgClientCheckFileSignatureResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_check_file_signature_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientCheckFileSignatureResponse *
       cmsg_client_check_file_signature_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientCheckFileSignatureResponse *)
     protobuf_c_message_unpack (&cmsg_client_check_file_signature_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_check_file_signature_response__free_unpacked
                     (CMsgClientCheckFileSignatureResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_check_file_signature_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_read_machine_auth__get_packed_size
                     (const CMsgClientReadMachineAuth *message)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_read_machine_auth__pack
                     (const CMsgClientReadMachineAuth *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_read_machine_auth__pack_to_buffer
                     (const CMsgClientReadMachineAuth *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientReadMachineAuth *
       cmsg_client_read_machine_auth__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientReadMachineAuth *)
     protobuf_c_message_unpack (&cmsg_client_read_machine_auth__descriptor,
                                allocator, len, data);
}
void   cmsg_client_read_machine_auth__free_unpacked
                     (CMsgClientReadMachineAuth *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_read_machine_auth__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_read_machine_auth_response__get_packed_size
                     (const CMsgClientReadMachineAuthResponse *message)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_read_machine_auth_response__pack
                     (const CMsgClientReadMachineAuthResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_read_machine_auth_response__pack_to_buffer
                     (const CMsgClientReadMachineAuthResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_read_machine_auth_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientReadMachineAuthResponse *
       cmsg_client_read_machine_auth_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientReadMachineAuthResponse *)
     protobuf_c_message_unpack (&cmsg_client_read_machine_auth_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_read_machine_auth_response__free_unpacked
                     (CMsgClientReadMachineAuthResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_read_machine_auth_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_update_machine_auth__get_packed_size
                     (const CMsgClientUpdateMachineAuth *message)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_update_machine_auth__pack
                     (const CMsgClientUpdateMachineAuth *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_update_machine_auth__pack_to_buffer
                     (const CMsgClientUpdateMachineAuth *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUpdateMachineAuth *
       cmsg_client_update_machine_auth__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUpdateMachineAuth *)
     protobuf_c_message_unpack (&cmsg_client_update_machine_auth__descriptor,
                                allocator, len, data);
}
void   cmsg_client_update_machine_auth__free_unpacked
                     (CMsgClientUpdateMachineAuth *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_update_machine_auth__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_update_machine_auth_response__get_packed_size
                     (const CMsgClientUpdateMachineAuthResponse *message)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_update_machine_auth_response__pack
                     (const CMsgClientUpdateMachineAuthResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_update_machine_auth_response__pack_to_buffer
                     (const CMsgClientUpdateMachineAuthResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_update_machine_auth_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUpdateMachineAuthResponse *
       cmsg_client_update_machine_auth_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUpdateMachineAuthResponse *)
     protobuf_c_message_unpack (&cmsg_client_update_machine_auth_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_update_machine_auth_response__free_unpacked
                     (CMsgClientUpdateMachineAuthResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_update_machine_auth_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_machine_auth__get_packed_size
                     (const CMsgClientRequestMachineAuth *message)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_machine_auth__pack
                     (const CMsgClientRequestMachineAuth *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_machine_auth__pack_to_buffer
                     (const CMsgClientRequestMachineAuth *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestMachineAuth *
       cmsg_client_request_machine_auth__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestMachineAuth *)
     protobuf_c_message_unpack (&cmsg_client_request_machine_auth__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_machine_auth__free_unpacked
                     (CMsgClientRequestMachineAuth *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_machine_auth__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_machine_auth_response__get_packed_size
                     (const CMsgClientRequestMachineAuthResponse *message)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_machine_auth_response__pack
                     (const CMsgClientRequestMachineAuthResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_machine_auth_response__pack_to_buffer
                     (const CMsgClientRequestMachineAuthResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_machine_auth_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestMachineAuthResponse *
       cmsg_client_request_machine_auth_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestMachineAuthResponse *)
     protobuf_c_message_unpack (&cmsg_client_request_machine_auth_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_machine_auth_response__free_unpacked
                     (CMsgClientRequestMachineAuthResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_machine_auth_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_register_key__get_packed_size
                     (const CMsgClientRegisterKey *message)
{
  assert(message->descriptor == &cmsg_client_register_key__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_register_key__pack
                     (const CMsgClientRegisterKey *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_register_key__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_register_key__pack_to_buffer
                     (const CMsgClientRegisterKey *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_register_key__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRegisterKey *
       cmsg_client_register_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRegisterKey *)
     protobuf_c_message_unpack (&cmsg_client_register_key__descriptor,
                                allocator, len, data);
}
void   cmsg_client_register_key__free_unpacked
                     (CMsgClientRegisterKey *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_register_key__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_purchase_response__get_packed_size
                     (const CMsgClientPurchaseResponse *message)
{
  assert(message->descriptor == &cmsg_client_purchase_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_purchase_response__pack
                     (const CMsgClientPurchaseResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_purchase_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_purchase_response__pack_to_buffer
                     (const CMsgClientPurchaseResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_purchase_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientPurchaseResponse *
       cmsg_client_purchase_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientPurchaseResponse *)
     protobuf_c_message_unpack (&cmsg_client_purchase_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_purchase_response__free_unpacked
                     (CMsgClientPurchaseResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_purchase_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_activate_oemlicense__get_packed_size
                     (const CMsgClientActivateOEMLicense *message)
{
  assert(message->descriptor == &cmsg_client_activate_oemlicense__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_activate_oemlicense__pack
                     (const CMsgClientActivateOEMLicense *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_activate_oemlicense__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_activate_oemlicense__pack_to_buffer
                     (const CMsgClientActivateOEMLicense *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_activate_oemlicense__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientActivateOEMLicense *
       cmsg_client_activate_oemlicense__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientActivateOEMLicense *)
     protobuf_c_message_unpack (&cmsg_client_activate_oemlicense__descriptor,
                                allocator, len, data);
}
void   cmsg_client_activate_oemlicense__free_unpacked
                     (CMsgClientActivateOEMLicense *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_activate_oemlicense__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_register_oemmachine__get_packed_size
                     (const CMsgClientRegisterOEMMachine *message)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_register_oemmachine__pack
                     (const CMsgClientRegisterOEMMachine *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_register_oemmachine__pack_to_buffer
                     (const CMsgClientRegisterOEMMachine *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRegisterOEMMachine *
       cmsg_client_register_oemmachine__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRegisterOEMMachine *)
     protobuf_c_message_unpack (&cmsg_client_register_oemmachine__descriptor,
                                allocator, len, data);
}
void   cmsg_client_register_oemmachine__free_unpacked
                     (CMsgClientRegisterOEMMachine *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_register_oemmachine__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_register_oemmachine_response__get_packed_size
                     (const CMsgClientRegisterOEMMachineResponse *message)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_register_oemmachine_response__pack
                     (const CMsgClientRegisterOEMMachineResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_register_oemmachine_response__pack_to_buffer
                     (const CMsgClientRegisterOEMMachineResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_register_oemmachine_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRegisterOEMMachineResponse *
       cmsg_client_register_oemmachine_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRegisterOEMMachineResponse *)
     protobuf_c_message_unpack (&cmsg_client_register_oemmachine_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_register_oemmachine_response__free_unpacked
                     (CMsgClientRegisterOEMMachineResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_register_oemmachine_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_purchase_with_machine_id__get_packed_size
                     (const CMsgClientPurchaseWithMachineID *message)
{
  assert(message->descriptor == &cmsg_client_purchase_with_machine_id__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_purchase_with_machine_id__pack
                     (const CMsgClientPurchaseWithMachineID *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_purchase_with_machine_id__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_purchase_with_machine_id__pack_to_buffer
                     (const CMsgClientPurchaseWithMachineID *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_purchase_with_machine_id__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientPurchaseWithMachineID *
       cmsg_client_purchase_with_machine_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientPurchaseWithMachineID *)
     protobuf_c_message_unpack (&cmsg_client_purchase_with_machine_id__descriptor,
                                allocator, len, data);
}
void   cmsg_client_purchase_with_machine_id__free_unpacked
                     (CMsgClientPurchaseWithMachineID *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_purchase_with_machine_id__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_trading__initiate_trade_request__get_packed_size
                     (const CMsgTradingInitiateTradeRequest *message)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_request__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_trading__initiate_trade_request__pack
                     (const CMsgTradingInitiateTradeRequest *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_request__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_trading__initiate_trade_request__pack_to_buffer
                     (const CMsgTradingInitiateTradeRequest *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_request__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgTradingInitiateTradeRequest *
       cmsg_trading__initiate_trade_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgTradingInitiateTradeRequest *)
     protobuf_c_message_unpack (&cmsg_trading__initiate_trade_request__descriptor,
                                allocator, len, data);
}
void   cmsg_trading__initiate_trade_request__free_unpacked
                     (CMsgTradingInitiateTradeRequest *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_trading__initiate_trade_request__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_trading__initiate_trade_response__get_packed_size
                     (const CMsgTradingInitiateTradeResponse *message)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_trading__initiate_trade_response__pack
                     (const CMsgTradingInitiateTradeResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_trading__initiate_trade_response__pack_to_buffer
                     (const CMsgTradingInitiateTradeResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_trading__initiate_trade_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgTradingInitiateTradeResponse *
       cmsg_trading__initiate_trade_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgTradingInitiateTradeResponse *)
     protobuf_c_message_unpack (&cmsg_trading__initiate_trade_response__descriptor,
                                allocator, len, data);
}
void   cmsg_trading__initiate_trade_response__free_unpacked
                     (CMsgTradingInitiateTradeResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_trading__initiate_trade_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_trading__cancel_trade_request__get_packed_size
                     (const CMsgTradingCancelTradeRequest *message)
{
  assert(message->descriptor == &cmsg_trading__cancel_trade_request__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_trading__cancel_trade_request__pack
                     (const CMsgTradingCancelTradeRequest *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_trading__cancel_trade_request__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_trading__cancel_trade_request__pack_to_buffer
                     (const CMsgTradingCancelTradeRequest *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_trading__cancel_trade_request__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgTradingCancelTradeRequest *
       cmsg_trading__cancel_trade_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgTradingCancelTradeRequest *)
     protobuf_c_message_unpack (&cmsg_trading__cancel_trade_request__descriptor,
                                allocator, len, data);
}
void   cmsg_trading__cancel_trade_request__free_unpacked
                     (CMsgTradingCancelTradeRequest *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_trading__cancel_trade_request__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_trading__start_session__get_packed_size
                     (const CMsgTradingStartSession *message)
{
  assert(message->descriptor == &cmsg_trading__start_session__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_trading__start_session__pack
                     (const CMsgTradingStartSession *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_trading__start_session__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_trading__start_session__pack_to_buffer
                     (const CMsgTradingStartSession *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_trading__start_session__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgTradingStartSession *
       cmsg_trading__start_session__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgTradingStartSession *)
     protobuf_c_message_unpack (&cmsg_trading__start_session__descriptor,
                                allocator, len, data);
}
void   cmsg_trading__start_session__free_unpacked
                     (CMsgTradingStartSession *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_trading__start_session__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_cdnauth_token__get_packed_size
                     (const CMsgClientGetCDNAuthToken *message)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_cdnauth_token__pack
                     (const CMsgClientGetCDNAuthToken *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_cdnauth_token__pack_to_buffer
                     (const CMsgClientGetCDNAuthToken *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetCDNAuthToken *
       cmsg_client_get_cdnauth_token__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetCDNAuthToken *)
     protobuf_c_message_unpack (&cmsg_client_get_cdnauth_token__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_cdnauth_token__free_unpacked
                     (CMsgClientGetCDNAuthToken *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_cdnauth_token__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_depot_decryption_key__get_packed_size
                     (const CMsgClientGetDepotDecryptionKey *message)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_depot_decryption_key__pack
                     (const CMsgClientGetDepotDecryptionKey *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_depot_decryption_key__pack_to_buffer
                     (const CMsgClientGetDepotDecryptionKey *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetDepotDecryptionKey *
       cmsg_client_get_depot_decryption_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetDepotDecryptionKey *)
     protobuf_c_message_unpack (&cmsg_client_get_depot_decryption_key__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_depot_decryption_key__free_unpacked
                     (CMsgClientGetDepotDecryptionKey *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_depot_decryption_key_response__get_packed_size
                     (const CMsgClientGetDepotDecryptionKeyResponse *message)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_depot_decryption_key_response__pack
                     (const CMsgClientGetDepotDecryptionKeyResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_depot_decryption_key_response__pack_to_buffer
                     (const CMsgClientGetDepotDecryptionKeyResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetDepotDecryptionKeyResponse *
       cmsg_client_get_depot_decryption_key_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetDepotDecryptionKeyResponse *)
     protobuf_c_message_unpack (&cmsg_client_get_depot_decryption_key_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_depot_decryption_key_response__free_unpacked
                     (CMsgClientGetDepotDecryptionKeyResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_depot_decryption_key_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_check_app_beta_password__get_packed_size
                     (const CMsgClientCheckAppBetaPassword *message)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_check_app_beta_password__pack
                     (const CMsgClientCheckAppBetaPassword *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_check_app_beta_password__pack_to_buffer
                     (const CMsgClientCheckAppBetaPassword *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientCheckAppBetaPassword *
       cmsg_client_check_app_beta_password__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientCheckAppBetaPassword *)
     protobuf_c_message_unpack (&cmsg_client_check_app_beta_password__descriptor,
                                allocator, len, data);
}
void   cmsg_client_check_app_beta_password__free_unpacked
                     (CMsgClientCheckAppBetaPassword *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_check_app_beta_password__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_check_app_beta_password_response__get_packed_size
                     (const CMsgClientCheckAppBetaPasswordResponse *message)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_check_app_beta_password_response__pack
                     (const CMsgClientCheckAppBetaPasswordResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_check_app_beta_password_response__pack_to_buffer
                     (const CMsgClientCheckAppBetaPasswordResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_check_app_beta_password_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientCheckAppBetaPasswordResponse *
       cmsg_client_check_app_beta_password_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientCheckAppBetaPasswordResponse *)
     protobuf_c_message_unpack (&cmsg_client_check_app_beta_password_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_check_app_beta_password_response__free_unpacked
                     (CMsgClientCheckAppBetaPasswordResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_check_app_beta_password_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_cdnauth_token_response__get_packed_size
                     (const CMsgClientGetCDNAuthTokenResponse *message)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_cdnauth_token_response__pack
                     (const CMsgClientGetCDNAuthTokenResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_cdnauth_token_response__pack_to_buffer
                     (const CMsgClientGetCDNAuthTokenResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_cdnauth_token_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetCDNAuthTokenResponse *
       cmsg_client_get_cdnauth_token_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetCDNAuthTokenResponse *)
     protobuf_c_message_unpack (&cmsg_client_get_cdnauth_token_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_cdnauth_token_response__free_unpacked
                     (CMsgClientGetCDNAuthTokenResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_cdnauth_token_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_download_rate_statistics__get_packed_size
                     (const CMsgDownloadRateStatistics *message)
{
  assert(message->descriptor == &cmsg_download_rate_statistics__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_download_rate_statistics__pack
                     (const CMsgDownloadRateStatistics *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_download_rate_statistics__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_download_rate_statistics__pack_to_buffer
                     (const CMsgDownloadRateStatistics *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_download_rate_statistics__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDownloadRateStatistics *
       cmsg_download_rate_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDownloadRateStatistics *)
     protobuf_c_message_unpack (&cmsg_download_rate_statistics__descriptor,
                                allocator, len, data);
}
void   cmsg_download_rate_statistics__free_unpacked
                     (CMsgDownloadRateStatistics *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_download_rate_statistics__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_account_data__get_packed_size
                     (const CMsgClientRequestAccountData *message)
{
  assert(message->descriptor == &cmsg_client_request_account_data__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_account_data__pack
                     (const CMsgClientRequestAccountData *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_account_data__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_account_data__pack_to_buffer
                     (const CMsgClientRequestAccountData *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_account_data__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestAccountData *
       cmsg_client_request_account_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestAccountData *)
     protobuf_c_message_unpack (&cmsg_client_request_account_data__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_account_data__free_unpacked
                     (CMsgClientRequestAccountData *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_account_data__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_account_data_response__get_packed_size
                     (const CMsgClientRequestAccountDataResponse *message)
{
  assert(message->descriptor == &cmsg_client_request_account_data_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_account_data_response__pack
                     (const CMsgClientRequestAccountDataResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_account_data_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_account_data_response__pack_to_buffer
                     (const CMsgClientRequestAccountDataResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_account_data_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestAccountDataResponse *
       cmsg_client_request_account_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestAccountDataResponse *)
     protobuf_c_message_unpack (&cmsg_client_request_account_data_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_account_data_response__free_unpacked
                     (CMsgClientRequestAccountDataResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_account_data_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_ugsget_global_stats__get_packed_size
                     (const CMsgClientUGSGetGlobalStats *message)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_ugsget_global_stats__pack
                     (const CMsgClientUGSGetGlobalStats *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_ugsget_global_stats__pack_to_buffer
                     (const CMsgClientUGSGetGlobalStats *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUGSGetGlobalStats *
       cmsg_client_ugsget_global_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUGSGetGlobalStats *)
     protobuf_c_message_unpack (&cmsg_client_ugsget_global_stats__descriptor,
                                allocator, len, data);
}
void   cmsg_client_ugsget_global_stats__free_unpacked
                     (CMsgClientUGSGetGlobalStats *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_ugsget_global_stats__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_ugsget_global_stats_response__get_packed_size
                     (const CMsgClientUGSGetGlobalStatsResponse *message)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_ugsget_global_stats_response__pack
                     (const CMsgClientUGSGetGlobalStatsResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_ugsget_global_stats_response__pack_to_buffer
                     (const CMsgClientUGSGetGlobalStatsResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_ugsget_global_stats_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUGSGetGlobalStatsResponse *
       cmsg_client_ugsget_global_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUGSGetGlobalStatsResponse *)
     protobuf_c_message_unpack (&cmsg_client_ugsget_global_stats_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_ugsget_global_stats_response__free_unpacked
                     (CMsgClientUGSGetGlobalStatsResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_ugsget_global_stats_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_redeem_guest_pass__get_packed_size
                     (const CMsgClientRedeemGuestPass *message)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_redeem_guest_pass__pack
                     (const CMsgClientRedeemGuestPass *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_redeem_guest_pass__pack_to_buffer
                     (const CMsgClientRedeemGuestPass *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRedeemGuestPass *
       cmsg_client_redeem_guest_pass__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRedeemGuestPass *)
     protobuf_c_message_unpack (&cmsg_client_redeem_guest_pass__descriptor,
                                allocator, len, data);
}
void   cmsg_client_redeem_guest_pass__free_unpacked
                     (CMsgClientRedeemGuestPass *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_redeem_guest_pass__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_redeem_guest_pass_response__get_packed_size
                     (const CMsgClientRedeemGuestPassResponse *message)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_redeem_guest_pass_response__pack
                     (const CMsgClientRedeemGuestPassResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_redeem_guest_pass_response__pack_to_buffer
                     (const CMsgClientRedeemGuestPassResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_redeem_guest_pass_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRedeemGuestPassResponse *
       cmsg_client_redeem_guest_pass_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRedeemGuestPassResponse *)
     protobuf_c_message_unpack (&cmsg_client_redeem_guest_pass_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_redeem_guest_pass_response__free_unpacked
                     (CMsgClientRedeemGuestPassResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_redeem_guest_pass_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_clan_activity_counts__get_packed_size
                     (const CMsgClientGetClanActivityCounts *message)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_clan_activity_counts__pack
                     (const CMsgClientGetClanActivityCounts *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_clan_activity_counts__pack_to_buffer
                     (const CMsgClientGetClanActivityCounts *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetClanActivityCounts *
       cmsg_client_get_clan_activity_counts__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetClanActivityCounts *)
     protobuf_c_message_unpack (&cmsg_client_get_clan_activity_counts__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_clan_activity_counts__free_unpacked
                     (CMsgClientGetClanActivityCounts *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_clan_activity_counts_response__get_packed_size
                     (const CMsgClientGetClanActivityCountsResponse *message)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_clan_activity_counts_response__pack
                     (const CMsgClientGetClanActivityCountsResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_clan_activity_counts_response__pack_to_buffer
                     (const CMsgClientGetClanActivityCountsResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetClanActivityCountsResponse *
       cmsg_client_get_clan_activity_counts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetClanActivityCountsResponse *)
     protobuf_c_message_unpack (&cmsg_client_get_clan_activity_counts_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_clan_activity_counts_response__free_unpacked
                     (CMsgClientGetClanActivityCountsResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_clan_activity_counts_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_ogsreport_string__get_packed_size
                     (const CMsgClientOGSReportString *message)
{
  assert(message->descriptor == &cmsg_client_ogsreport_string__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_ogsreport_string__pack
                     (const CMsgClientOGSReportString *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_ogsreport_string__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_ogsreport_string__pack_to_buffer
                     (const CMsgClientOGSReportString *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_ogsreport_string__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientOGSReportString *
       cmsg_client_ogsreport_string__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientOGSReportString *)
     protobuf_c_message_unpack (&cmsg_client_ogsreport_string__descriptor,
                                allocator, len, data);
}
void   cmsg_client_ogsreport_string__free_unpacked
                     (CMsgClientOGSReportString *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_ogsreport_string__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_ogsreport_bug__get_packed_size
                     (const CMsgClientOGSReportBug *message)
{
  assert(message->descriptor == &cmsg_client_ogsreport_bug__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_ogsreport_bug__pack
                     (const CMsgClientOGSReportBug *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_ogsreport_bug__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_ogsreport_bug__pack_to_buffer
                     (const CMsgClientOGSReportBug *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_ogsreport_bug__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientOGSReportBug *
       cmsg_client_ogsreport_bug__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientOGSReportBug *)
     protobuf_c_message_unpack (&cmsg_client_ogsreport_bug__descriptor,
                                allocator, len, data);
}
void   cmsg_client_ogsreport_bug__free_unpacked
                     (CMsgClientOGSReportBug *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_ogsreport_bug__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_sent_logs__get_packed_size
                     (const CMsgClientSentLogs *message)
{
  assert(message->descriptor == &cmsg_client_sent_logs__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_sent_logs__pack
                     (const CMsgClientSentLogs *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_sent_logs__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_sent_logs__pack_to_buffer
                     (const CMsgClientSentLogs *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_sent_logs__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientSentLogs *
       cmsg_client_sent_logs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientSentLogs *)
     protobuf_c_message_unpack (&cmsg_client_sent_logs__descriptor,
                                allocator, len, data);
}
void   cmsg_client_sent_logs__free_unpacked
                     (CMsgClientSentLogs *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_sent_logs__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_gcclient__get_packed_size
                     (const CMsgGCClient *message)
{
  assert(message->descriptor == &cmsg_gcclient__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_gcclient__pack
                     (const CMsgGCClient *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_gcclient__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_gcclient__pack_to_buffer
                     (const CMsgGCClient *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_gcclient__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgGCClient *
       cmsg_gcclient__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgGCClient *)
     protobuf_c_message_unpack (&cmsg_gcclient__descriptor,
                                allocator, len, data);
}
void   cmsg_gcclient__free_unpacked
                     (CMsgGCClient *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_gcclient__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_free_license__get_packed_size
                     (const CMsgClientRequestFreeLicense *message)
{
  assert(message->descriptor == &cmsg_client_request_free_license__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_free_license__pack
                     (const CMsgClientRequestFreeLicense *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_free_license__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_free_license__pack_to_buffer
                     (const CMsgClientRequestFreeLicense *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_free_license__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestFreeLicense *
       cmsg_client_request_free_license__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestFreeLicense *)
     protobuf_c_message_unpack (&cmsg_client_request_free_license__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_free_license__free_unpacked
                     (CMsgClientRequestFreeLicense *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_free_license__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_free_license_response__get_packed_size
                     (const CMsgClientRequestFreeLicenseResponse *message)
{
  assert(message->descriptor == &cmsg_client_request_free_license_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_free_license_response__pack
                     (const CMsgClientRequestFreeLicenseResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_free_license_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_free_license_response__pack_to_buffer
                     (const CMsgClientRequestFreeLicenseResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_free_license_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestFreeLicenseResponse *
       cmsg_client_request_free_license_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestFreeLicenseResponse *)
     protobuf_c_message_unpack (&cmsg_client_request_free_license_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_free_license_response__free_unpacked
                     (CMsgClientRequestFreeLicenseResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_free_license_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_drmdownload_request_with_crash_data__get_packed_size
                     (const CMsgDRMDownloadRequestWithCrashData *message)
{
  assert(message->descriptor == &cmsg_drmdownload_request_with_crash_data__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_drmdownload_request_with_crash_data__pack
                     (const CMsgDRMDownloadRequestWithCrashData *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_drmdownload_request_with_crash_data__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_drmdownload_request_with_crash_data__pack_to_buffer
                     (const CMsgDRMDownloadRequestWithCrashData *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_drmdownload_request_with_crash_data__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDRMDownloadRequestWithCrashData *
       cmsg_drmdownload_request_with_crash_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDRMDownloadRequestWithCrashData *)
     protobuf_c_message_unpack (&cmsg_drmdownload_request_with_crash_data__descriptor,
                                allocator, len, data);
}
void   cmsg_drmdownload_request_with_crash_data__free_unpacked
                     (CMsgDRMDownloadRequestWithCrashData *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_drmdownload_request_with_crash_data__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_drmdownload_response__get_packed_size
                     (const CMsgDRMDownloadResponse *message)
{
  assert(message->descriptor == &cmsg_drmdownload_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_drmdownload_response__pack
                     (const CMsgDRMDownloadResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_drmdownload_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_drmdownload_response__pack_to_buffer
                     (const CMsgDRMDownloadResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_drmdownload_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDRMDownloadResponse *
       cmsg_drmdownload_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDRMDownloadResponse *)
     protobuf_c_message_unpack (&cmsg_drmdownload_response__descriptor,
                                allocator, len, data);
}
void   cmsg_drmdownload_response__free_unpacked
                     (CMsgDRMDownloadResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_drmdownload_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_drmfinal_result__get_packed_size
                     (const CMsgDRMFinalResult *message)
{
  assert(message->descriptor == &cmsg_drmfinal_result__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_drmfinal_result__pack
                     (const CMsgDRMFinalResult *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_drmfinal_result__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_drmfinal_result__pack_to_buffer
                     (const CMsgDRMFinalResult *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_drmfinal_result__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDRMFinalResult *
       cmsg_drmfinal_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDRMFinalResult *)
     protobuf_c_message_unpack (&cmsg_drmfinal_result__descriptor,
                                allocator, len, data);
}
void   cmsg_drmfinal_result__free_unpacked
                     (CMsgDRMFinalResult *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_drmfinal_result__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_dpcheck_special_survey__get_packed_size
                     (const CMsgClientDPCheckSpecialSurvey *message)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_dpcheck_special_survey__pack
                     (const CMsgClientDPCheckSpecialSurvey *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_dpcheck_special_survey__pack_to_buffer
                     (const CMsgClientDPCheckSpecialSurvey *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDPCheckSpecialSurvey *
       cmsg_client_dpcheck_special_survey__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDPCheckSpecialSurvey *)
     protobuf_c_message_unpack (&cmsg_client_dpcheck_special_survey__descriptor,
                                allocator, len, data);
}
void   cmsg_client_dpcheck_special_survey__free_unpacked
                     (CMsgClientDPCheckSpecialSurvey *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_dpcheck_special_survey_response__get_packed_size
                     (const CMsgClientDPCheckSpecialSurveyResponse *message)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_dpcheck_special_survey_response__pack
                     (const CMsgClientDPCheckSpecialSurveyResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_dpcheck_special_survey_response__pack_to_buffer
                     (const CMsgClientDPCheckSpecialSurveyResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDPCheckSpecialSurveyResponse *
       cmsg_client_dpcheck_special_survey_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDPCheckSpecialSurveyResponse *)
     protobuf_c_message_unpack (&cmsg_client_dpcheck_special_survey_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_dpcheck_special_survey_response__free_unpacked
                     (CMsgClientDPCheckSpecialSurveyResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_dpcheck_special_survey_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_dpsend_special_survey_response__get_packed_size
                     (const CMsgClientDPSendSpecialSurveyResponse *message)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_dpsend_special_survey_response__pack
                     (const CMsgClientDPSendSpecialSurveyResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_dpsend_special_survey_response__pack_to_buffer
                     (const CMsgClientDPSendSpecialSurveyResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDPSendSpecialSurveyResponse *
       cmsg_client_dpsend_special_survey_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDPSendSpecialSurveyResponse *)
     protobuf_c_message_unpack (&cmsg_client_dpsend_special_survey_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_dpsend_special_survey_response__free_unpacked
                     (CMsgClientDPSendSpecialSurveyResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_dpsend_special_survey_response_reply__get_packed_size
                     (const CMsgClientDPSendSpecialSurveyResponseReply *message)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response_reply__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_dpsend_special_survey_response_reply__pack
                     (const CMsgClientDPSendSpecialSurveyResponseReply *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response_reply__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_dpsend_special_survey_response_reply__pack_to_buffer
                     (const CMsgClientDPSendSpecialSurveyResponseReply *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response_reply__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDPSendSpecialSurveyResponseReply *
       cmsg_client_dpsend_special_survey_response_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDPSendSpecialSurveyResponseReply *)
     protobuf_c_message_unpack (&cmsg_client_dpsend_special_survey_response_reply__descriptor,
                                allocator, len, data);
}
void   cmsg_client_dpsend_special_survey_response_reply__free_unpacked
                     (CMsgClientDPSendSpecialSurveyResponseReply *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_dpsend_special_survey_response_reply__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_forgotten_password_email__get_packed_size
                     (const CMsgClientRequestForgottenPasswordEmail *message)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_forgotten_password_email__pack
                     (const CMsgClientRequestForgottenPasswordEmail *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_forgotten_password_email__pack_to_buffer
                     (const CMsgClientRequestForgottenPasswordEmail *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestForgottenPasswordEmail *
       cmsg_client_request_forgotten_password_email__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestForgottenPasswordEmail *)
     protobuf_c_message_unpack (&cmsg_client_request_forgotten_password_email__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_forgotten_password_email__free_unpacked
                     (CMsgClientRequestForgottenPasswordEmail *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_forgotten_password_email_response__get_packed_size
                     (const CMsgClientRequestForgottenPasswordEmailResponse *message)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_forgotten_password_email_response__pack
                     (const CMsgClientRequestForgottenPasswordEmailResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_forgotten_password_email_response__pack_to_buffer
                     (const CMsgClientRequestForgottenPasswordEmailResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestForgottenPasswordEmailResponse *
       cmsg_client_request_forgotten_password_email_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestForgottenPasswordEmailResponse *)
     protobuf_c_message_unpack (&cmsg_client_request_forgotten_password_email_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_forgotten_password_email_response__free_unpacked
                     (CMsgClientRequestForgottenPasswordEmailResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_forgotten_password_email_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_item_announcements__get_packed_size
                     (const CMsgClientItemAnnouncements *message)
{
  assert(message->descriptor == &cmsg_client_item_announcements__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_item_announcements__pack
                     (const CMsgClientItemAnnouncements *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_item_announcements__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_item_announcements__pack_to_buffer
                     (const CMsgClientItemAnnouncements *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_item_announcements__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientItemAnnouncements *
       cmsg_client_item_announcements__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientItemAnnouncements *)
     protobuf_c_message_unpack (&cmsg_client_item_announcements__descriptor,
                                allocator, len, data);
}
void   cmsg_client_item_announcements__free_unpacked
                     (CMsgClientItemAnnouncements *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_item_announcements__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_item_announcements__get_packed_size
                     (const CMsgClientRequestItemAnnouncements *message)
{
  assert(message->descriptor == &cmsg_client_request_item_announcements__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_item_announcements__pack
                     (const CMsgClientRequestItemAnnouncements *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_item_announcements__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_item_announcements__pack_to_buffer
                     (const CMsgClientRequestItemAnnouncements *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_item_announcements__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestItemAnnouncements *
       cmsg_client_request_item_announcements__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestItemAnnouncements *)
     protobuf_c_message_unpack (&cmsg_client_request_item_announcements__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_item_announcements__free_unpacked
                     (CMsgClientRequestItemAnnouncements *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_item_announcements__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_user_notifications__get_packed_size
                     (const CMsgClientUserNotifications *message)
{
  assert(message->descriptor == &cmsg_client_user_notifications__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_user_notifications__pack
                     (const CMsgClientUserNotifications *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_user_notifications__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_user_notifications__pack_to_buffer
                     (const CMsgClientUserNotifications *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_user_notifications__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUserNotifications *
       cmsg_client_user_notifications__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUserNotifications *)
     protobuf_c_message_unpack (&cmsg_client_user_notifications__descriptor,
                                allocator, len, data);
}
void   cmsg_client_user_notifications__free_unpacked
                     (CMsgClientUserNotifications *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_user_notifications__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_comment_notifications__get_packed_size
                     (const CMsgClientCommentNotifications *message)
{
  assert(message->descriptor == &cmsg_client_comment_notifications__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_comment_notifications__pack
                     (const CMsgClientCommentNotifications *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_comment_notifications__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_comment_notifications__pack_to_buffer
                     (const CMsgClientCommentNotifications *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_comment_notifications__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientCommentNotifications *
       cmsg_client_comment_notifications__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientCommentNotifications *)
     protobuf_c_message_unpack (&cmsg_client_comment_notifications__descriptor,
                                allocator, len, data);
}
void   cmsg_client_comment_notifications__free_unpacked
                     (CMsgClientCommentNotifications *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_comment_notifications__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_comment_notifications__get_packed_size
                     (const CMsgClientRequestCommentNotifications *message)
{
  assert(message->descriptor == &cmsg_client_request_comment_notifications__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_comment_notifications__pack
                     (const CMsgClientRequestCommentNotifications *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_comment_notifications__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_comment_notifications__pack_to_buffer
                     (const CMsgClientRequestCommentNotifications *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_comment_notifications__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestCommentNotifications *
       cmsg_client_request_comment_notifications__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestCommentNotifications *)
     protobuf_c_message_unpack (&cmsg_client_request_comment_notifications__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_comment_notifications__free_unpacked
                     (CMsgClientRequestCommentNotifications *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_comment_notifications__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_offline_message_notification__get_packed_size
                     (const CMsgClientOfflineMessageNotification *message)
{
  assert(message->descriptor == &cmsg_client_offline_message_notification__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_offline_message_notification__pack
                     (const CMsgClientOfflineMessageNotification *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_offline_message_notification__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_offline_message_notification__pack_to_buffer
                     (const CMsgClientOfflineMessageNotification *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_offline_message_notification__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientOfflineMessageNotification *
       cmsg_client_offline_message_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientOfflineMessageNotification *)
     protobuf_c_message_unpack (&cmsg_client_offline_message_notification__descriptor,
                                allocator, len, data);
}
void   cmsg_client_offline_message_notification__free_unpacked
                     (CMsgClientOfflineMessageNotification *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_offline_message_notification__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_request_offline_message_count__get_packed_size
                     (const CMsgClientRequestOfflineMessageCount *message)
{
  assert(message->descriptor == &cmsg_client_request_offline_message_count__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_request_offline_message_count__pack
                     (const CMsgClientRequestOfflineMessageCount *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_request_offline_message_count__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_request_offline_message_count__pack_to_buffer
                     (const CMsgClientRequestOfflineMessageCount *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_request_offline_message_count__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientRequestOfflineMessageCount *
       cmsg_client_request_offline_message_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientRequestOfflineMessageCount *)
     protobuf_c_message_unpack (&cmsg_client_request_offline_message_count__descriptor,
                                allocator, len, data);
}
void   cmsg_client_request_offline_message_count__free_unpacked
                     (CMsgClientRequestOfflineMessageCount *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_request_offline_message_count__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_chat_get_friend_message_history__get_packed_size
                     (const CMsgClientChatGetFriendMessageHistory *message)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_chat_get_friend_message_history__pack
                     (const CMsgClientChatGetFriendMessageHistory *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_chat_get_friend_message_history__pack_to_buffer
                     (const CMsgClientChatGetFriendMessageHistory *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientChatGetFriendMessageHistory *
       cmsg_client_chat_get_friend_message_history__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientChatGetFriendMessageHistory *)
     protobuf_c_message_unpack (&cmsg_client_chat_get_friend_message_history__descriptor,
                                allocator, len, data);
}
void   cmsg_client_chat_get_friend_message_history__free_unpacked
                     (CMsgClientChatGetFriendMessageHistory *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_chat_get_friend_message_history_response__get_packed_size
                     (const CMsgClientChatGetFriendMessageHistoryResponse *message)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_chat_get_friend_message_history_response__pack
                     (const CMsgClientChatGetFriendMessageHistoryResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_chat_get_friend_message_history_response__pack_to_buffer
                     (const CMsgClientChatGetFriendMessageHistoryResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientChatGetFriendMessageHistoryResponse *
       cmsg_client_chat_get_friend_message_history_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientChatGetFriendMessageHistoryResponse *)
     protobuf_c_message_unpack (&cmsg_client_chat_get_friend_message_history_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_chat_get_friend_message_history_response__free_unpacked
                     (CMsgClientChatGetFriendMessageHistoryResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_chat_get_friend_message_history_for_offline_messages__get_packed_size
                     (const CMsgClientChatGetFriendMessageHistoryForOfflineMessages *message)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_chat_get_friend_message_history_for_offline_messages__pack
                     (const CMsgClientChatGetFriendMessageHistoryForOfflineMessages *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_chat_get_friend_message_history_for_offline_messages__pack_to_buffer
                     (const CMsgClientChatGetFriendMessageHistoryForOfflineMessages *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientChatGetFriendMessageHistoryForOfflineMessages *
       cmsg_client_chat_get_friend_message_history_for_offline_messages__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientChatGetFriendMessageHistoryForOfflineMessages *)
     protobuf_c_message_unpack (&cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor,
                                allocator, len, data);
}
void   cmsg_client_chat_get_friend_message_history_for_offline_messages__free_unpacked
                     (CMsgClientChatGetFriendMessageHistoryForOfflineMessages *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_fsget_friends_steam_levels__get_packed_size
                     (const CMsgClientFSGetFriendsSteamLevels *message)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_fsget_friends_steam_levels__pack
                     (const CMsgClientFSGetFriendsSteamLevels *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_fsget_friends_steam_levels__pack_to_buffer
                     (const CMsgClientFSGetFriendsSteamLevels *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientFSGetFriendsSteamLevels *
       cmsg_client_fsget_friends_steam_levels__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientFSGetFriendsSteamLevels *)
     protobuf_c_message_unpack (&cmsg_client_fsget_friends_steam_levels__descriptor,
                                allocator, len, data);
}
void   cmsg_client_fsget_friends_steam_levels__free_unpacked
                     (CMsgClientFSGetFriendsSteamLevels *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_fsget_friends_steam_levels_response__get_packed_size
                     (const CMsgClientFSGetFriendsSteamLevelsResponse *message)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_fsget_friends_steam_levels_response__pack
                     (const CMsgClientFSGetFriendsSteamLevelsResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_fsget_friends_steam_levels_response__pack_to_buffer
                     (const CMsgClientFSGetFriendsSteamLevelsResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientFSGetFriendsSteamLevelsResponse *
       cmsg_client_fsget_friends_steam_levels_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientFSGetFriendsSteamLevelsResponse *)
     protobuf_c_message_unpack (&cmsg_client_fsget_friends_steam_levels_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_fsget_friends_steam_levels_response__free_unpacked
                     (CMsgClientFSGetFriendsSteamLevelsResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_fsget_friends_steam_levels_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_email_addr_info__get_packed_size
                     (const CMsgClientEmailAddrInfo *message)
{
  assert(message->descriptor == &cmsg_client_email_addr_info__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_email_addr_info__pack
                     (const CMsgClientEmailAddrInfo *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_email_addr_info__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_email_addr_info__pack_to_buffer
                     (const CMsgClientEmailAddrInfo *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_email_addr_info__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientEmailAddrInfo *
       cmsg_client_email_addr_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientEmailAddrInfo *)
     protobuf_c_message_unpack (&cmsg_client_email_addr_info__descriptor,
                                allocator, len, data);
}
void   cmsg_client_email_addr_info__free_unpacked
                     (CMsgClientEmailAddrInfo *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_email_addr_info__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creitem_vote_summary__get_packed_size
                     (const CMsgCREItemVoteSummary *message)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creitem_vote_summary__pack
                     (const CMsgCREItemVoteSummary *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creitem_vote_summary__pack_to_buffer
                     (const CMsgCREItemVoteSummary *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREItemVoteSummary *
       cmsg_creitem_vote_summary__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREItemVoteSummary *)
     protobuf_c_message_unpack (&cmsg_creitem_vote_summary__descriptor,
                                allocator, len, data);
}
void   cmsg_creitem_vote_summary__free_unpacked
                     (CMsgCREItemVoteSummary *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creitem_vote_summary__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creitem_vote_summary_response__get_packed_size
                     (const CMsgCREItemVoteSummaryResponse *message)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creitem_vote_summary_response__pack
                     (const CMsgCREItemVoteSummaryResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creitem_vote_summary_response__pack_to_buffer
                     (const CMsgCREItemVoteSummaryResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creitem_vote_summary_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREItemVoteSummaryResponse *
       cmsg_creitem_vote_summary_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREItemVoteSummaryResponse *)
     protobuf_c_message_unpack (&cmsg_creitem_vote_summary_response__descriptor,
                                allocator, len, data);
}
void   cmsg_creitem_vote_summary_response__free_unpacked
                     (CMsgCREItemVoteSummaryResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creitem_vote_summary_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creupdate_user_published_item_vote__get_packed_size
                     (const CMsgCREUpdateUserPublishedItemVote *message)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creupdate_user_published_item_vote__pack
                     (const CMsgCREUpdateUserPublishedItemVote *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creupdate_user_published_item_vote__pack_to_buffer
                     (const CMsgCREUpdateUserPublishedItemVote *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREUpdateUserPublishedItemVote *
       cmsg_creupdate_user_published_item_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREUpdateUserPublishedItemVote *)
     protobuf_c_message_unpack (&cmsg_creupdate_user_published_item_vote__descriptor,
                                allocator, len, data);
}
void   cmsg_creupdate_user_published_item_vote__free_unpacked
                     (CMsgCREUpdateUserPublishedItemVote *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creupdate_user_published_item_vote_response__get_packed_size
                     (const CMsgCREUpdateUserPublishedItemVoteResponse *message)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creupdate_user_published_item_vote_response__pack
                     (const CMsgCREUpdateUserPublishedItemVoteResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creupdate_user_published_item_vote_response__pack_to_buffer
                     (const CMsgCREUpdateUserPublishedItemVoteResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREUpdateUserPublishedItemVoteResponse *
       cmsg_creupdate_user_published_item_vote_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREUpdateUserPublishedItemVoteResponse *)
     protobuf_c_message_unpack (&cmsg_creupdate_user_published_item_vote_response__descriptor,
                                allocator, len, data);
}
void   cmsg_creupdate_user_published_item_vote_response__free_unpacked
                     (CMsgCREUpdateUserPublishedItemVoteResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creupdate_user_published_item_vote_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creget_user_published_item_vote_details__get_packed_size
                     (const CMsgCREGetUserPublishedItemVoteDetails *message)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creget_user_published_item_vote_details__pack
                     (const CMsgCREGetUserPublishedItemVoteDetails *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creget_user_published_item_vote_details__pack_to_buffer
                     (const CMsgCREGetUserPublishedItemVoteDetails *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREGetUserPublishedItemVoteDetails *
       cmsg_creget_user_published_item_vote_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREGetUserPublishedItemVoteDetails *)
     protobuf_c_message_unpack (&cmsg_creget_user_published_item_vote_details__descriptor,
                                allocator, len, data);
}
void   cmsg_creget_user_published_item_vote_details__free_unpacked
                     (CMsgCREGetUserPublishedItemVoteDetails *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_creget_user_published_item_vote_details_response__get_packed_size
                     (const CMsgCREGetUserPublishedItemVoteDetailsResponse *message)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_creget_user_published_item_vote_details_response__pack
                     (const CMsgCREGetUserPublishedItemVoteDetailsResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_creget_user_published_item_vote_details_response__pack_to_buffer
                     (const CMsgCREGetUserPublishedItemVoteDetailsResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgCREGetUserPublishedItemVoteDetailsResponse *
       cmsg_creget_user_published_item_vote_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgCREGetUserPublishedItemVoteDetailsResponse *)
     protobuf_c_message_unpack (&cmsg_creget_user_published_item_vote_details_response__descriptor,
                                allocator, len, data);
}
void   cmsg_creget_user_published_item_vote_details_response__free_unpacked
                     (CMsgCREGetUserPublishedItemVoteDetailsResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_creget_user_published_item_vote_details_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsget_follower_count__get_packed_size
                     (const CMsgFSGetFollowerCount *message)
{
  assert(message->descriptor == &cmsg_fsget_follower_count__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsget_follower_count__pack
                     (const CMsgFSGetFollowerCount *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsget_follower_count__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsget_follower_count__pack_to_buffer
                     (const CMsgFSGetFollowerCount *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsget_follower_count__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSGetFollowerCount *
       cmsg_fsget_follower_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSGetFollowerCount *)
     protobuf_c_message_unpack (&cmsg_fsget_follower_count__descriptor,
                                allocator, len, data);
}
void   cmsg_fsget_follower_count__free_unpacked
                     (CMsgFSGetFollowerCount *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsget_follower_count__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsget_follower_count_response__get_packed_size
                     (const CMsgFSGetFollowerCountResponse *message)
{
  assert(message->descriptor == &cmsg_fsget_follower_count_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsget_follower_count_response__pack
                     (const CMsgFSGetFollowerCountResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsget_follower_count_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsget_follower_count_response__pack_to_buffer
                     (const CMsgFSGetFollowerCountResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsget_follower_count_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSGetFollowerCountResponse *
       cmsg_fsget_follower_count_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSGetFollowerCountResponse *)
     protobuf_c_message_unpack (&cmsg_fsget_follower_count_response__descriptor,
                                allocator, len, data);
}
void   cmsg_fsget_follower_count_response__free_unpacked
                     (CMsgFSGetFollowerCountResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsget_follower_count_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsget_is_following__get_packed_size
                     (const CMsgFSGetIsFollowing *message)
{
  assert(message->descriptor == &cmsg_fsget_is_following__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsget_is_following__pack
                     (const CMsgFSGetIsFollowing *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsget_is_following__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsget_is_following__pack_to_buffer
                     (const CMsgFSGetIsFollowing *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsget_is_following__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSGetIsFollowing *
       cmsg_fsget_is_following__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSGetIsFollowing *)
     protobuf_c_message_unpack (&cmsg_fsget_is_following__descriptor,
                                allocator, len, data);
}
void   cmsg_fsget_is_following__free_unpacked
                     (CMsgFSGetIsFollowing *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsget_is_following__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsget_is_following_response__get_packed_size
                     (const CMsgFSGetIsFollowingResponse *message)
{
  assert(message->descriptor == &cmsg_fsget_is_following_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsget_is_following_response__pack
                     (const CMsgFSGetIsFollowingResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsget_is_following_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsget_is_following_response__pack_to_buffer
                     (const CMsgFSGetIsFollowingResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsget_is_following_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSGetIsFollowingResponse *
       cmsg_fsget_is_following_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSGetIsFollowingResponse *)
     protobuf_c_message_unpack (&cmsg_fsget_is_following_response__descriptor,
                                allocator, len, data);
}
void   cmsg_fsget_is_following_response__free_unpacked
                     (CMsgFSGetIsFollowingResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsget_is_following_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsenumerate_following_list__get_packed_size
                     (const CMsgFSEnumerateFollowingList *message)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsenumerate_following_list__pack
                     (const CMsgFSEnumerateFollowingList *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsenumerate_following_list__pack_to_buffer
                     (const CMsgFSEnumerateFollowingList *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSEnumerateFollowingList *
       cmsg_fsenumerate_following_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSEnumerateFollowingList *)
     protobuf_c_message_unpack (&cmsg_fsenumerate_following_list__descriptor,
                                allocator, len, data);
}
void   cmsg_fsenumerate_following_list__free_unpacked
                     (CMsgFSEnumerateFollowingList *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsenumerate_following_list__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_fsenumerate_following_list_response__get_packed_size
                     (const CMsgFSEnumerateFollowingListResponse *message)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_fsenumerate_following_list_response__pack
                     (const CMsgFSEnumerateFollowingListResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_fsenumerate_following_list_response__pack_to_buffer
                     (const CMsgFSEnumerateFollowingListResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_fsenumerate_following_list_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgFSEnumerateFollowingListResponse *
       cmsg_fsenumerate_following_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgFSEnumerateFollowingListResponse *)
     protobuf_c_message_unpack (&cmsg_fsenumerate_following_list_response__descriptor,
                                allocator, len, data);
}
void   cmsg_fsenumerate_following_list_response__free_unpacked
                     (CMsgFSEnumerateFollowingListResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_fsenumerate_following_list_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_dpget_number_of_current_players__get_packed_size
                     (const CMsgDPGetNumberOfCurrentPlayers *message)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_dpget_number_of_current_players__pack
                     (const CMsgDPGetNumberOfCurrentPlayers *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_dpget_number_of_current_players__pack_to_buffer
                     (const CMsgDPGetNumberOfCurrentPlayers *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDPGetNumberOfCurrentPlayers *
       cmsg_dpget_number_of_current_players__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDPGetNumberOfCurrentPlayers *)
     protobuf_c_message_unpack (&cmsg_dpget_number_of_current_players__descriptor,
                                allocator, len, data);
}
void   cmsg_dpget_number_of_current_players__free_unpacked
                     (CMsgDPGetNumberOfCurrentPlayers *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_dpget_number_of_current_players__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_dpget_number_of_current_players_response__get_packed_size
                     (const CMsgDPGetNumberOfCurrentPlayersResponse *message)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_dpget_number_of_current_players_response__pack
                     (const CMsgDPGetNumberOfCurrentPlayersResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_dpget_number_of_current_players_response__pack_to_buffer
                     (const CMsgDPGetNumberOfCurrentPlayersResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_dpget_number_of_current_players_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgDPGetNumberOfCurrentPlayersResponse *
       cmsg_dpget_number_of_current_players_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgDPGetNumberOfCurrentPlayersResponse *)
     protobuf_c_message_unpack (&cmsg_dpget_number_of_current_players_response__descriptor,
                                allocator, len, data);
}
void   cmsg_dpget_number_of_current_players_response__free_unpacked
                     (CMsgDPGetNumberOfCurrentPlayersResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_dpget_number_of_current_players_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_friend_user_status_published__get_packed_size
                     (const CMsgClientFriendUserStatusPublished *message)
{
  assert(message->descriptor == &cmsg_client_friend_user_status_published__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_friend_user_status_published__pack
                     (const CMsgClientFriendUserStatusPublished *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_friend_user_status_published__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_friend_user_status_published__pack_to_buffer
                     (const CMsgClientFriendUserStatusPublished *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_friend_user_status_published__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientFriendUserStatusPublished *
       cmsg_client_friend_user_status_published__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientFriendUserStatusPublished *)
     protobuf_c_message_unpack (&cmsg_client_friend_user_status_published__descriptor,
                                allocator, len, data);
}
void   cmsg_client_friend_user_status_published__free_unpacked
                     (CMsgClientFriendUserStatusPublished *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_friend_user_status_published__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_service_method_legacy__get_packed_size
                     (const CMsgClientServiceMethodLegacy *message)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_service_method_legacy__pack
                     (const CMsgClientServiceMethodLegacy *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_service_method_legacy__pack_to_buffer
                     (const CMsgClientServiceMethodLegacy *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientServiceMethodLegacy *
       cmsg_client_service_method_legacy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientServiceMethodLegacy *)
     protobuf_c_message_unpack (&cmsg_client_service_method_legacy__descriptor,
                                allocator, len, data);
}
void   cmsg_client_service_method_legacy__free_unpacked
                     (CMsgClientServiceMethodLegacy *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_service_method_legacy__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_service_method_legacy_response__get_packed_size
                     (const CMsgClientServiceMethodLegacyResponse *message)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_service_method_legacy_response__pack
                     (const CMsgClientServiceMethodLegacyResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_service_method_legacy_response__pack_to_buffer
                     (const CMsgClientServiceMethodLegacyResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_service_method_legacy_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientServiceMethodLegacyResponse *
       cmsg_client_service_method_legacy_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientServiceMethodLegacyResponse *)
     protobuf_c_message_unpack (&cmsg_client_service_method_legacy_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_service_method_legacy_response__free_unpacked
                     (CMsgClientServiceMethodLegacyResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_service_method_legacy_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_uimode__get_packed_size
                     (const CMsgClientUIMode *message)
{
  assert(message->descriptor == &cmsg_client_uimode__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_uimode__pack
                     (const CMsgClientUIMode *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_uimode__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_uimode__pack_to_buffer
                     (const CMsgClientUIMode *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_uimode__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUIMode *
       cmsg_client_uimode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUIMode *)
     protobuf_c_message_unpack (&cmsg_client_uimode__descriptor,
                                allocator, len, data);
}
void   cmsg_client_uimode__free_unpacked
                     (CMsgClientUIMode *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_uimode__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_vanity_urlchanged_notification__get_packed_size
                     (const CMsgClientVanityURLChangedNotification *message)
{
  assert(message->descriptor == &cmsg_client_vanity_urlchanged_notification__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_vanity_urlchanged_notification__pack
                     (const CMsgClientVanityURLChangedNotification *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_vanity_urlchanged_notification__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_vanity_urlchanged_notification__pack_to_buffer
                     (const CMsgClientVanityURLChangedNotification *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_vanity_urlchanged_notification__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientVanityURLChangedNotification *
       cmsg_client_vanity_urlchanged_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientVanityURLChangedNotification *)
     protobuf_c_message_unpack (&cmsg_client_vanity_urlchanged_notification__descriptor,
                                allocator, len, data);
}
void   cmsg_client_vanity_urlchanged_notification__free_unpacked
                     (CMsgClientVanityURLChangedNotification *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_vanity_urlchanged_notification__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_authorize_local_device_request__get_packed_size
                     (const CMsgClientAuthorizeLocalDeviceRequest *message)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_request__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_authorize_local_device_request__pack
                     (const CMsgClientAuthorizeLocalDeviceRequest *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_request__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_authorize_local_device_request__pack_to_buffer
                     (const CMsgClientAuthorizeLocalDeviceRequest *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_request__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientAuthorizeLocalDeviceRequest *
       cmsg_client_authorize_local_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientAuthorizeLocalDeviceRequest *)
     protobuf_c_message_unpack (&cmsg_client_authorize_local_device_request__descriptor,
                                allocator, len, data);
}
void   cmsg_client_authorize_local_device_request__free_unpacked
                     (CMsgClientAuthorizeLocalDeviceRequest *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_authorize_local_device_request__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_authorize_local_device__get_packed_size
                     (const CMsgClientAuthorizeLocalDevice *message)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_authorize_local_device__pack
                     (const CMsgClientAuthorizeLocalDevice *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_authorize_local_device__pack_to_buffer
                     (const CMsgClientAuthorizeLocalDevice *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientAuthorizeLocalDevice *
       cmsg_client_authorize_local_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientAuthorizeLocalDevice *)
     protobuf_c_message_unpack (&cmsg_client_authorize_local_device__descriptor,
                                allocator, len, data);
}
void   cmsg_client_authorize_local_device__free_unpacked
                     (CMsgClientAuthorizeLocalDevice *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_authorize_local_device__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_authorize_local_device_notification__get_packed_size
                     (const CMsgClientAuthorizeLocalDeviceNotification *message)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_notification__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_authorize_local_device_notification__pack
                     (const CMsgClientAuthorizeLocalDeviceNotification *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_notification__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_authorize_local_device_notification__pack_to_buffer
                     (const CMsgClientAuthorizeLocalDeviceNotification *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_authorize_local_device_notification__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientAuthorizeLocalDeviceNotification *
       cmsg_client_authorize_local_device_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientAuthorizeLocalDeviceNotification *)
     protobuf_c_message_unpack (&cmsg_client_authorize_local_device_notification__descriptor,
                                allocator, len, data);
}
void   cmsg_client_authorize_local_device_notification__free_unpacked
                     (CMsgClientAuthorizeLocalDeviceNotification *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_authorize_local_device_notification__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_deauthorize_device_request__get_packed_size
                     (const CMsgClientDeauthorizeDeviceRequest *message)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device_request__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_deauthorize_device_request__pack
                     (const CMsgClientDeauthorizeDeviceRequest *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device_request__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_deauthorize_device_request__pack_to_buffer
                     (const CMsgClientDeauthorizeDeviceRequest *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device_request__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDeauthorizeDeviceRequest *
       cmsg_client_deauthorize_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDeauthorizeDeviceRequest *)
     protobuf_c_message_unpack (&cmsg_client_deauthorize_device_request__descriptor,
                                allocator, len, data);
}
void   cmsg_client_deauthorize_device_request__free_unpacked
                     (CMsgClientDeauthorizeDeviceRequest *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_deauthorize_device_request__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_deauthorize_device__get_packed_size
                     (const CMsgClientDeauthorizeDevice *message)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_deauthorize_device__pack
                     (const CMsgClientDeauthorizeDevice *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_deauthorize_device__pack_to_buffer
                     (const CMsgClientDeauthorizeDevice *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_deauthorize_device__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientDeauthorizeDevice *
       cmsg_client_deauthorize_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientDeauthorizeDevice *)
     protobuf_c_message_unpack (&cmsg_client_deauthorize_device__descriptor,
                                allocator, len, data);
}
void   cmsg_client_deauthorize_device__free_unpacked
                     (CMsgClientDeauthorizeDevice *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_deauthorize_device__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_use_local_device_authorizations__get_packed_size
                     (const CMsgClientUseLocalDeviceAuthorizations *message)
{
  assert(message->descriptor == &cmsg_client_use_local_device_authorizations__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_use_local_device_authorizations__pack
                     (const CMsgClientUseLocalDeviceAuthorizations *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_use_local_device_authorizations__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_use_local_device_authorizations__pack_to_buffer
                     (const CMsgClientUseLocalDeviceAuthorizations *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_use_local_device_authorizations__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientUseLocalDeviceAuthorizations *
       cmsg_client_use_local_device_authorizations__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientUseLocalDeviceAuthorizations *)
     protobuf_c_message_unpack (&cmsg_client_use_local_device_authorizations__descriptor,
                                allocator, len, data);
}
void   cmsg_client_use_local_device_authorizations__free_unpacked
                     (CMsgClientUseLocalDeviceAuthorizations *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_use_local_device_authorizations__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_authorized_devices__get_packed_size
                     (const CMsgClientGetAuthorizedDevices *message)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_authorized_devices__pack
                     (const CMsgClientGetAuthorizedDevices *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_authorized_devices__pack_to_buffer
                     (const CMsgClientGetAuthorizedDevices *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetAuthorizedDevices *
       cmsg_client_get_authorized_devices__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetAuthorizedDevices *)
     protobuf_c_message_unpack (&cmsg_client_get_authorized_devices__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_authorized_devices__free_unpacked
                     (CMsgClientGetAuthorizedDevices *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_authorized_devices__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_authorized_devices_response__get_packed_size
                     (const CMsgClientGetAuthorizedDevicesResponse *message)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_authorized_devices_response__pack
                     (const CMsgClientGetAuthorizedDevicesResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_authorized_devices_response__pack_to_buffer
                     (const CMsgClientGetAuthorizedDevicesResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_authorized_devices_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetAuthorizedDevicesResponse *
       cmsg_client_get_authorized_devices_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetAuthorizedDevicesResponse *)
     protobuf_c_message_unpack (&cmsg_client_get_authorized_devices_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_authorized_devices_response__free_unpacked
                     (CMsgClientGetAuthorizedDevicesResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_authorized_devices_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_shared_library_lock_status__get_packed_size
                     (const CMsgClientSharedLibraryLockStatus *message)
{
  assert(message->descriptor == &cmsg_client_shared_library_lock_status__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_shared_library_lock_status__pack
                     (const CMsgClientSharedLibraryLockStatus *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_shared_library_lock_status__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_shared_library_lock_status__pack_to_buffer
                     (const CMsgClientSharedLibraryLockStatus *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_shared_library_lock_status__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientSharedLibraryLockStatus *
       cmsg_client_shared_library_lock_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientSharedLibraryLockStatus *)
     protobuf_c_message_unpack (&cmsg_client_shared_library_lock_status__descriptor,
                                allocator, len, data);
}
void   cmsg_client_shared_library_lock_status__free_unpacked
                     (CMsgClientSharedLibraryLockStatus *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_shared_library_lock_status__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_shared_library_stop_playing__get_packed_size
                     (const CMsgClientSharedLibraryStopPlaying *message)
{
  assert(message->descriptor == &cmsg_client_shared_library_stop_playing__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_shared_library_stop_playing__pack
                     (const CMsgClientSharedLibraryStopPlaying *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_shared_library_stop_playing__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_shared_library_stop_playing__pack_to_buffer
                     (const CMsgClientSharedLibraryStopPlaying *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_shared_library_stop_playing__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientSharedLibraryStopPlaying *
       cmsg_client_shared_library_stop_playing__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientSharedLibraryStopPlaying *)
     protobuf_c_message_unpack (&cmsg_client_shared_library_stop_playing__descriptor,
                                allocator, len, data);
}
void   cmsg_client_shared_library_stop_playing__free_unpacked
                     (CMsgClientSharedLibraryStopPlaying *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_shared_library_stop_playing__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_service_call__get_packed_size
                     (const CMsgClientServiceCall *message)
{
  assert(message->descriptor == &cmsg_client_service_call__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_service_call__pack
                     (const CMsgClientServiceCall *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_service_call__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_service_call__pack_to_buffer
                     (const CMsgClientServiceCall *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_service_call__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientServiceCall *
       cmsg_client_service_call__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientServiceCall *)
     protobuf_c_message_unpack (&cmsg_client_service_call__descriptor,
                                allocator, len, data);
}
void   cmsg_client_service_call__free_unpacked
                     (CMsgClientServiceCall *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_service_call__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_service_module__get_packed_size
                     (const CMsgClientServiceModule *message)
{
  assert(message->descriptor == &cmsg_client_service_module__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_service_module__pack
                     (const CMsgClientServiceModule *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_service_module__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_service_module__pack_to_buffer
                     (const CMsgClientServiceModule *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_service_module__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientServiceModule *
       cmsg_client_service_module__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientServiceModule *)
     protobuf_c_message_unpack (&cmsg_client_service_module__descriptor,
                                allocator, len, data);
}
void   cmsg_client_service_module__free_unpacked
                     (CMsgClientServiceModule *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_service_module__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_service_call_response__get_packed_size
                     (const CMsgClientServiceCallResponse *message)
{
  assert(message->descriptor == &cmsg_client_service_call_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_service_call_response__pack
                     (const CMsgClientServiceCallResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_service_call_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_service_call_response__pack_to_buffer
                     (const CMsgClientServiceCallResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_service_call_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientServiceCallResponse *
       cmsg_client_service_call_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientServiceCallResponse *)
     protobuf_c_message_unpack (&cmsg_client_service_call_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_service_call_response__free_unpacked
                     (CMsgClientServiceCallResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_service_call_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_amunlock_h264__get_packed_size
                     (const CMsgAMUnlockH264 *message)
{
  assert(message->descriptor == &cmsg_amunlock_h264__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_amunlock_h264__pack
                     (const CMsgAMUnlockH264 *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_amunlock_h264__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_amunlock_h264__pack_to_buffer
                     (const CMsgAMUnlockH264 *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_amunlock_h264__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgAMUnlockH264 *
       cmsg_amunlock_h264__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgAMUnlockH264 *)
     protobuf_c_message_unpack (&cmsg_amunlock_h264__descriptor,
                                allocator, len, data);
}
void   cmsg_amunlock_h264__free_unpacked
                     (CMsgAMUnlockH264 *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_amunlock_h264__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_amunlock_h264_response__get_packed_size
                     (const CMsgAMUnlockH264Response *message)
{
  assert(message->descriptor == &cmsg_amunlock_h264_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_amunlock_h264_response__pack
                     (const CMsgAMUnlockH264Response *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_amunlock_h264_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_amunlock_h264_response__pack_to_buffer
                     (const CMsgAMUnlockH264Response *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_amunlock_h264_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgAMUnlockH264Response *
       cmsg_amunlock_h264_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgAMUnlockH264Response *)
     protobuf_c_message_unpack (&cmsg_amunlock_h264_response__descriptor,
                                allocator, len, data);
}
void   cmsg_amunlock_h264_response__free_unpacked
                     (CMsgAMUnlockH264Response *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_amunlock_h264_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_playing_session_state__get_packed_size
                     (const CMsgClientPlayingSessionState *message)
{
  assert(message->descriptor == &cmsg_client_playing_session_state__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_playing_session_state__pack
                     (const CMsgClientPlayingSessionState *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_playing_session_state__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_playing_session_state__pack_to_buffer
                     (const CMsgClientPlayingSessionState *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_playing_session_state__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientPlayingSessionState *
       cmsg_client_playing_session_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientPlayingSessionState *)
     protobuf_c_message_unpack (&cmsg_client_playing_session_state__descriptor,
                                allocator, len, data);
}
void   cmsg_client_playing_session_state__free_unpacked
                     (CMsgClientPlayingSessionState *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_playing_session_state__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_kick_playing_session__get_packed_size
                     (const CMsgClientKickPlayingSession *message)
{
  assert(message->descriptor == &cmsg_client_kick_playing_session__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_kick_playing_session__pack
                     (const CMsgClientKickPlayingSession *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_kick_playing_session__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_kick_playing_session__pack_to_buffer
                     (const CMsgClientKickPlayingSession *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_kick_playing_session__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientKickPlayingSession *
       cmsg_client_kick_playing_session__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientKickPlayingSession *)
     protobuf_c_message_unpack (&cmsg_client_kick_playing_session__descriptor,
                                allocator, len, data);
}
void   cmsg_client_kick_playing_session__free_unpacked
                     (CMsgClientKickPlayingSession *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_kick_playing_session__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_voice_call_pre_authorize__get_packed_size
                     (const CMsgClientVoiceCallPreAuthorize *message)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_voice_call_pre_authorize__pack
                     (const CMsgClientVoiceCallPreAuthorize *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_voice_call_pre_authorize__pack_to_buffer
                     (const CMsgClientVoiceCallPreAuthorize *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientVoiceCallPreAuthorize *
       cmsg_client_voice_call_pre_authorize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientVoiceCallPreAuthorize *)
     protobuf_c_message_unpack (&cmsg_client_voice_call_pre_authorize__descriptor,
                                allocator, len, data);
}
void   cmsg_client_voice_call_pre_authorize__free_unpacked
                     (CMsgClientVoiceCallPreAuthorize *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_voice_call_pre_authorize_response__get_packed_size
                     (const CMsgClientVoiceCallPreAuthorizeResponse *message)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_voice_call_pre_authorize_response__pack
                     (const CMsgClientVoiceCallPreAuthorizeResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_voice_call_pre_authorize_response__pack_to_buffer
                     (const CMsgClientVoiceCallPreAuthorizeResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientVoiceCallPreAuthorizeResponse *
       cmsg_client_voice_call_pre_authorize_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientVoiceCallPreAuthorizeResponse *)
     protobuf_c_message_unpack (&cmsg_client_voice_call_pre_authorize_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_voice_call_pre_authorize_response__free_unpacked
                     (CMsgClientVoiceCallPreAuthorizeResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_voice_call_pre_authorize_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_badge_crafted_notification__get_packed_size
                     (const CMsgBadgeCraftedNotification *message)
{
  assert(message->descriptor == &cmsg_badge_crafted_notification__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_badge_crafted_notification__pack
                     (const CMsgBadgeCraftedNotification *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_badge_crafted_notification__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_badge_crafted_notification__pack_to_buffer
                     (const CMsgBadgeCraftedNotification *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_badge_crafted_notification__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgBadgeCraftedNotification *
       cmsg_badge_crafted_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgBadgeCraftedNotification *)
     protobuf_c_message_unpack (&cmsg_badge_crafted_notification__descriptor,
                                allocator, len, data);
}
void   cmsg_badge_crafted_notification__free_unpacked
                     (CMsgBadgeCraftedNotification *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_badge_crafted_notification__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_start_peer_content_server__get_packed_size
                     (const CMsgClientStartPeerContentServer *message)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_start_peer_content_server__pack
                     (const CMsgClientStartPeerContentServer *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_start_peer_content_server__pack_to_buffer
                     (const CMsgClientStartPeerContentServer *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientStartPeerContentServer *
       cmsg_client_start_peer_content_server__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientStartPeerContentServer *)
     protobuf_c_message_unpack (&cmsg_client_start_peer_content_server__descriptor,
                                allocator, len, data);
}
void   cmsg_client_start_peer_content_server__free_unpacked
                     (CMsgClientStartPeerContentServer *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_start_peer_content_server__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_start_peer_content_server_response__get_packed_size
                     (const CMsgClientStartPeerContentServerResponse *message)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_start_peer_content_server_response__pack
                     (const CMsgClientStartPeerContentServerResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_start_peer_content_server_response__pack_to_buffer
                     (const CMsgClientStartPeerContentServerResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_start_peer_content_server_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientStartPeerContentServerResponse *
       cmsg_client_start_peer_content_server_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientStartPeerContentServerResponse *)
     protobuf_c_message_unpack (&cmsg_client_start_peer_content_server_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_start_peer_content_server_response__free_unpacked
                     (CMsgClientStartPeerContentServerResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_start_peer_content_server_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_peer_content_info__get_packed_size
                     (const CMsgClientGetPeerContentInfo *message)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_peer_content_info__pack
                     (const CMsgClientGetPeerContentInfo *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_peer_content_info__pack_to_buffer
                     (const CMsgClientGetPeerContentInfo *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetPeerContentInfo *
       cmsg_client_get_peer_content_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetPeerContentInfo *)
     protobuf_c_message_unpack (&cmsg_client_get_peer_content_info__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_peer_content_info__free_unpacked
                     (CMsgClientGetPeerContentInfo *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_peer_content_info__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

size_t cmsg_client_get_peer_content_info_response__get_packed_size
                     (const CMsgClientGetPeerContentInfoResponse *message)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t cmsg_client_get_peer_content_info_response__pack
                     (const CMsgClientGetPeerContentInfoResponse *message,
                      uint8_t       *out)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t cmsg_client_get_peer_content_info_response__pack_to_buffer
                     (const CMsgClientGetPeerContentInfoResponse *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->descriptor == &cmsg_client_get_peer_content_info_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
CMsgClientGetPeerContentInfoResponse *
       cmsg_client_get_peer_content_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (CMsgClientGetPeerContentInfoResponse *)
     protobuf_c_message_unpack (&cmsg_client_get_peer_content_info_response__descriptor,
                                allocator, len, data);
}
void   cmsg_client_get_peer_content_info_response__free_unpacked
                     (CMsgClientGetPeerContentInfoResponse *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->descriptor == &cmsg_client_get_peer_content_info_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}

static const ProtobufCFieldDescriptor cmsg_client_update_user_game_info__field_descriptors[5] =
{
  {
    "steamid_idgs",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientUpdateUserGameInfo, has_steamid_idgs),
    offsetof(CMsgClientUpdateUserGameInfo, steamid_idgs),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "gameid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientUpdateUserGameInfo, has_gameid),
    offsetof(CMsgClientUpdateUserGameInfo, gameid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "game_ip",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateUserGameInfo, has_game_ip),
    offsetof(CMsgClientUpdateUserGameInfo, game_ip),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "game_port",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateUserGameInfo, has_game_port),
    offsetof(CMsgClientUpdateUserGameInfo, game_port),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "token",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientUpdateUserGameInfo, has_token),
    offsetof(CMsgClientUpdateUserGameInfo, token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_update_user_game_info__field_indices_by_name[] = {
  2,   /* field[2] = game_ip */
  3,   /* field[3] = game_port */
  1,   /* field[1] = gameid */
  0,   /* field[0] = steamid_idgs */
  4,   /* field[4] = token */
};
static const ProtobufCIntRange cmsg_client_update_user_game_info__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor cmsg_client_update_user_game_info__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUpdateUserGameInfo",
  "CMsgClientUpdateUserGameInfo",
  "CMsgClientUpdateUserGameInfo",
  "",
  sizeof(CMsgClientUpdateUserGameInfo),
  5,
  cmsg_client_update_user_game_info__field_descriptors,
  cmsg_client_update_user_game_info__field_indices_by_name,
  1,  cmsg_client_update_user_game_info__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_rich_presence_upload__field_descriptors[2] =
{
  {
    "rich_presence_kv",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientRichPresenceUpload, has_rich_presence_kv),
    offsetof(CMsgClientRichPresenceUpload, rich_presence_kv),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "steamid_broadcast",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientRichPresenceUpload, n_steamid_broadcast),
    offsetof(CMsgClientRichPresenceUpload, steamid_broadcast),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_rich_presence_upload__field_indices_by_name[] = {
  0,   /* field[0] = rich_presence_kv */
  1,   /* field[1] = steamid_broadcast */
};
static const ProtobufCIntRange cmsg_client_rich_presence_upload__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_rich_presence_upload__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRichPresenceUpload",
  "CMsgClientRichPresenceUpload",
  "CMsgClientRichPresenceUpload",
  "",
  sizeof(CMsgClientRichPresenceUpload),
  2,
  cmsg_client_rich_presence_upload__field_descriptors,
  cmsg_client_rich_presence_upload__field_indices_by_name,
  1,  cmsg_client_rich_presence_upload__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_rich_presence_request__field_descriptors[1] =
{
  {
    "steamid_request",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientRichPresenceRequest, n_steamid_request),
    offsetof(CMsgClientRichPresenceRequest, steamid_request),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_rich_presence_request__field_indices_by_name[] = {
  0,   /* field[0] = steamid_request */
};
static const ProtobufCIntRange cmsg_client_rich_presence_request__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_rich_presence_request__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRichPresenceRequest",
  "CMsgClientRichPresenceRequest",
  "CMsgClientRichPresenceRequest",
  "",
  sizeof(CMsgClientRichPresenceRequest),
  1,
  cmsg_client_rich_presence_request__field_descriptors,
  cmsg_client_rich_presence_request__field_indices_by_name,
  1,  cmsg_client_rich_presence_request__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_rich_presence_info__rich_presence__field_descriptors[2] =
{
  {
    "steamid_user",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientRichPresenceInfo__RichPresence, has_steamid_user),
    offsetof(CMsgClientRichPresenceInfo__RichPresence, steamid_user),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "rich_presence_kv",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientRichPresenceInfo__RichPresence, has_rich_presence_kv),
    offsetof(CMsgClientRichPresenceInfo__RichPresence, rich_presence_kv),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_rich_presence_info__rich_presence__field_indices_by_name[] = {
  1,   /* field[1] = rich_presence_kv */
  0,   /* field[0] = steamid_user */
};
static const ProtobufCIntRange cmsg_client_rich_presence_info__rich_presence__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_rich_presence_info__rich_presence__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRichPresenceInfo.RichPresence",
  "RichPresence",
  "CMsgClientRichPresenceInfo__RichPresence",
  "",
  sizeof(CMsgClientRichPresenceInfo__RichPresence),
  2,
  cmsg_client_rich_presence_info__rich_presence__field_descriptors,
  cmsg_client_rich_presence_info__rich_presence__field_indices_by_name,
  1,  cmsg_client_rich_presence_info__rich_presence__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_rich_presence_info__field_descriptors[1] =
{
  {
    "rich_presence",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientRichPresenceInfo, n_rich_presence),
    offsetof(CMsgClientRichPresenceInfo, rich_presence),
    &cmsg_client_rich_presence_info__rich_presence__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_rich_presence_info__field_indices_by_name[] = {
  0,   /* field[0] = rich_presence */
};
static const ProtobufCIntRange cmsg_client_rich_presence_info__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_rich_presence_info__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRichPresenceInfo",
  "CMsgClientRichPresenceInfo",
  "CMsgClientRichPresenceInfo",
  "",
  sizeof(CMsgClientRichPresenceInfo),
  1,
  cmsg_client_rich_presence_info__field_descriptors,
  cmsg_client_rich_presence_info__field_indices_by_name,
  1,  cmsg_client_rich_presence_info__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_check_file_signature__field_descriptors[1] =
{
  {
    "app_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignature, has_app_id),
    offsetof(CMsgClientCheckFileSignature, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_check_file_signature__field_indices_by_name[] = {
  0,   /* field[0] = app_id */
};
static const ProtobufCIntRange cmsg_client_check_file_signature__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_check_file_signature__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCheckFileSignature",
  "CMsgClientCheckFileSignature",
  "CMsgClientCheckFileSignature",
  "",
  sizeof(CMsgClientCheckFileSignature),
  1,
  cmsg_client_check_file_signature__field_descriptors,
  cmsg_client_check_file_signature__field_indices_by_name,
  1,  cmsg_client_check_file_signature__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_check_file_signature_response__field_descriptors[10] =
{
  {
    "app_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_app_id),
    offsetof(CMsgClientCheckFileSignatureResponse, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "pid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_pid),
    offsetof(CMsgClientCheckFileSignatureResponse, pid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_eresult),
    offsetof(CMsgClientCheckFileSignatureResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filename",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientCheckFileSignatureResponse, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "esignatureresult",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_esignatureresult),
    offsetof(CMsgClientCheckFileSignatureResponse, esignatureresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "sha_file",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientCheckFileSignatureResponse, has_sha_file),
    offsetof(CMsgClientCheckFileSignatureResponse, sha_file),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "signatureheader",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientCheckFileSignatureResponse, has_signatureheader),
    offsetof(CMsgClientCheckFileSignatureResponse, signatureheader),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filesize",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_filesize),
    offsetof(CMsgClientCheckFileSignatureResponse, filesize),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "getlasterror",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_getlasterror),
    offsetof(CMsgClientCheckFileSignatureResponse, getlasterror),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "evalvesignaturecheckdetail",
    10,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckFileSignatureResponse, has_evalvesignaturecheckdetail),
    offsetof(CMsgClientCheckFileSignatureResponse, evalvesignaturecheckdetail),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_check_file_signature_response__field_indices_by_name[] = {
  0,   /* field[0] = app_id */
  2,   /* field[2] = eresult */
  4,   /* field[4] = esignatureresult */
  9,   /* field[9] = evalvesignaturecheckdetail */
  3,   /* field[3] = filename */
  7,   /* field[7] = filesize */
  8,   /* field[8] = getlasterror */
  1,   /* field[1] = pid */
  5,   /* field[5] = sha_file */
  6,   /* field[6] = signatureheader */
};
static const ProtobufCIntRange cmsg_client_check_file_signature_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 10 }
};
const ProtobufCMessageDescriptor cmsg_client_check_file_signature_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCheckFileSignatureResponse",
  "CMsgClientCheckFileSignatureResponse",
  "CMsgClientCheckFileSignatureResponse",
  "",
  sizeof(CMsgClientCheckFileSignatureResponse),
  10,
  cmsg_client_check_file_signature_response__field_descriptors,
  cmsg_client_check_file_signature_response__field_indices_by_name,
  1,  cmsg_client_check_file_signature_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_read_machine_auth__field_descriptors[3] =
{
  {
    "filename",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientReadMachineAuth, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "offset",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuth, has_offset),
    offsetof(CMsgClientReadMachineAuth, offset),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "cubtoread",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuth, has_cubtoread),
    offsetof(CMsgClientReadMachineAuth, cubtoread),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_read_machine_auth__field_indices_by_name[] = {
  2,   /* field[2] = cubtoread */
  0,   /* field[0] = filename */
  1,   /* field[1] = offset */
};
static const ProtobufCIntRange cmsg_client_read_machine_auth__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_read_machine_auth__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientReadMachineAuth",
  "CMsgClientReadMachineAuth",
  "CMsgClientReadMachineAuth",
  "",
  sizeof(CMsgClientReadMachineAuth),
  3,
  cmsg_client_read_machine_auth__field_descriptors,
  cmsg_client_read_machine_auth__field_indices_by_name,
  1,  cmsg_client_read_machine_auth__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_read_machine_auth_response__field_descriptors[9] =
{
  {
    "filename",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientReadMachineAuthResponse, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuthResponse, has_eresult),
    offsetof(CMsgClientReadMachineAuthResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filesize",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuthResponse, has_filesize),
    offsetof(CMsgClientReadMachineAuthResponse, filesize),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "sha_file",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientReadMachineAuthResponse, has_sha_file),
    offsetof(CMsgClientReadMachineAuthResponse, sha_file),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "getlasterror",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuthResponse, has_getlasterror),
    offsetof(CMsgClientReadMachineAuthResponse, getlasterror),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "offset",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuthResponse, has_offset),
    offsetof(CMsgClientReadMachineAuthResponse, offset),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "cubread",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientReadMachineAuthResponse, has_cubread),
    offsetof(CMsgClientReadMachineAuthResponse, cubread),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "bytes_read",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientReadMachineAuthResponse, has_bytes_read),
    offsetof(CMsgClientReadMachineAuthResponse, bytes_read),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filename_sentry",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientReadMachineAuthResponse, filename_sentry),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_read_machine_auth_response__field_indices_by_name[] = {
  7,   /* field[7] = bytes_read */
  6,   /* field[6] = cubread */
  1,   /* field[1] = eresult */
  0,   /* field[0] = filename */
  8,   /* field[8] = filename_sentry */
  2,   /* field[2] = filesize */
  4,   /* field[4] = getlasterror */
  5,   /* field[5] = offset */
  3,   /* field[3] = sha_file */
};
static const ProtobufCIntRange cmsg_client_read_machine_auth_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 9 }
};
const ProtobufCMessageDescriptor cmsg_client_read_machine_auth_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientReadMachineAuthResponse",
  "CMsgClientReadMachineAuthResponse",
  "CMsgClientReadMachineAuthResponse",
  "",
  sizeof(CMsgClientReadMachineAuthResponse),
  9,
  cmsg_client_read_machine_auth_response__field_descriptors,
  cmsg_client_read_machine_auth_response__field_indices_by_name,
  1,  cmsg_client_read_machine_auth_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_update_machine_auth__field_descriptors[8] =
{
  {
    "filename",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientUpdateMachineAuth, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "offset",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuth, has_offset),
    offsetof(CMsgClientUpdateMachineAuth, offset),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "cubtowrite",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuth, has_cubtowrite),
    offsetof(CMsgClientUpdateMachineAuth, cubtowrite),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "bytes",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientUpdateMachineAuth, has_bytes),
    offsetof(CMsgClientUpdateMachineAuth, bytes),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_type",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuth, has_otp_type),
    offsetof(CMsgClientUpdateMachineAuth, otp_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_identifier",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientUpdateMachineAuth, otp_identifier),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_sharedsecret",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientUpdateMachineAuth, has_otp_sharedsecret),
    offsetof(CMsgClientUpdateMachineAuth, otp_sharedsecret),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_timedrift",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuth, has_otp_timedrift),
    offsetof(CMsgClientUpdateMachineAuth, otp_timedrift),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_update_machine_auth__field_indices_by_name[] = {
  3,   /* field[3] = bytes */
  2,   /* field[2] = cubtowrite */
  0,   /* field[0] = filename */
  1,   /* field[1] = offset */
  5,   /* field[5] = otp_identifier */
  6,   /* field[6] = otp_sharedsecret */
  7,   /* field[7] = otp_timedrift */
  4,   /* field[4] = otp_type */
};
static const ProtobufCIntRange cmsg_client_update_machine_auth__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 8 }
};
const ProtobufCMessageDescriptor cmsg_client_update_machine_auth__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUpdateMachineAuth",
  "CMsgClientUpdateMachineAuth",
  "CMsgClientUpdateMachineAuth",
  "",
  sizeof(CMsgClientUpdateMachineAuth),
  8,
  cmsg_client_update_machine_auth__field_descriptors,
  cmsg_client_update_machine_auth__field_indices_by_name,
  1,  cmsg_client_update_machine_auth__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_update_machine_auth_response__field_descriptors[10] =
{
  {
    "filename",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientUpdateMachineAuthResponse, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_eresult),
    offsetof(CMsgClientUpdateMachineAuthResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filesize",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_filesize),
    offsetof(CMsgClientUpdateMachineAuthResponse, filesize),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "sha_file",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_sha_file),
    offsetof(CMsgClientUpdateMachineAuthResponse, sha_file),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "getlasterror",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_getlasterror),
    offsetof(CMsgClientUpdateMachineAuthResponse, getlasterror),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "offset",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_offset),
    offsetof(CMsgClientUpdateMachineAuthResponse, offset),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "cubwrote",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_cubwrote),
    offsetof(CMsgClientUpdateMachineAuthResponse, cubwrote),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_type",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_otp_type),
    offsetof(CMsgClientUpdateMachineAuthResponse, otp_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_value",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUpdateMachineAuthResponse, has_otp_value),
    offsetof(CMsgClientUpdateMachineAuthResponse, otp_value),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_identifier",
    10,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientUpdateMachineAuthResponse, otp_identifier),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_update_machine_auth_response__field_indices_by_name[] = {
  6,   /* field[6] = cubwrote */
  1,   /* field[1] = eresult */
  0,   /* field[0] = filename */
  2,   /* field[2] = filesize */
  4,   /* field[4] = getlasterror */
  5,   /* field[5] = offset */
  9,   /* field[9] = otp_identifier */
  7,   /* field[7] = otp_type */
  8,   /* field[8] = otp_value */
  3,   /* field[3] = sha_file */
};
static const ProtobufCIntRange cmsg_client_update_machine_auth_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 10 }
};
const ProtobufCMessageDescriptor cmsg_client_update_machine_auth_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUpdateMachineAuthResponse",
  "CMsgClientUpdateMachineAuthResponse",
  "CMsgClientUpdateMachineAuthResponse",
  "",
  sizeof(CMsgClientUpdateMachineAuthResponse),
  10,
  cmsg_client_update_machine_auth_response__field_descriptors,
  cmsg_client_update_machine_auth_response__field_indices_by_name,
  1,  cmsg_client_update_machine_auth_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_machine_auth__field_descriptors[11] =
{
  {
    "filename",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestMachineAuth, filename),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult_sentryfile",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestMachineAuth, has_eresult_sentryfile),
    offsetof(CMsgClientRequestMachineAuth, eresult_sentryfile),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "filesize",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestMachineAuth, has_filesize),
    offsetof(CMsgClientRequestMachineAuth, filesize),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "sha_sentryfile",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientRequestMachineAuth, has_sha_sentryfile),
    offsetof(CMsgClientRequestMachineAuth, sha_sentryfile),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "lock_account_action",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientRequestMachineAuth, has_lock_account_action),
    offsetof(CMsgClientRequestMachineAuth, lock_account_action),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_type",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestMachineAuth, has_otp_type),
    offsetof(CMsgClientRequestMachineAuth, otp_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_identifier",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestMachineAuth, otp_identifier),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_sharedsecret",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientRequestMachineAuth, has_otp_sharedsecret),
    offsetof(CMsgClientRequestMachineAuth, otp_sharedsecret),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "otp_value",
    10,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestMachineAuth, has_otp_value),
    offsetof(CMsgClientRequestMachineAuth, otp_value),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "machine_name",
    11,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestMachineAuth, machine_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "machine_name_userchosen",
    12,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestMachineAuth, machine_name_userchosen),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_machine_auth__field_indices_by_name[] = {
  1,   /* field[1] = eresult_sentryfile */
  0,   /* field[0] = filename */
  2,   /* field[2] = filesize */
  4,   /* field[4] = lock_account_action */
  9,   /* field[9] = machine_name */
  10,   /* field[10] = machine_name_userchosen */
  6,   /* field[6] = otp_identifier */
  7,   /* field[7] = otp_sharedsecret */
  5,   /* field[5] = otp_type */
  8,   /* field[8] = otp_value */
  3,   /* field[3] = sha_sentryfile */
};
static const ProtobufCIntRange cmsg_client_request_machine_auth__number_ranges[2 + 1] =
{
  { 1, 0 },
  { 6, 4 },
  { 0, 11 }
};
const ProtobufCMessageDescriptor cmsg_client_request_machine_auth__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestMachineAuth",
  "CMsgClientRequestMachineAuth",
  "CMsgClientRequestMachineAuth",
  "",
  sizeof(CMsgClientRequestMachineAuth),
  11,
  cmsg_client_request_machine_auth__field_descriptors,
  cmsg_client_request_machine_auth__field_indices_by_name,
  2,  cmsg_client_request_machine_auth__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_machine_auth_response__field_descriptors[1] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestMachineAuthResponse, has_eresult),
    offsetof(CMsgClientRequestMachineAuthResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_machine_auth_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_request_machine_auth_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_request_machine_auth_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestMachineAuthResponse",
  "CMsgClientRequestMachineAuthResponse",
  "CMsgClientRequestMachineAuthResponse",
  "",
  sizeof(CMsgClientRequestMachineAuthResponse),
  1,
  cmsg_client_request_machine_auth_response__field_descriptors,
  cmsg_client_request_machine_auth_response__field_indices_by_name,
  1,  cmsg_client_request_machine_auth_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_register_key__field_descriptors[1] =
{
  {
    "key",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRegisterKey, key),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_register_key__field_indices_by_name[] = {
  0,   /* field[0] = key */
};
static const ProtobufCIntRange cmsg_client_register_key__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_register_key__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRegisterKey",
  "CMsgClientRegisterKey",
  "CMsgClientRegisterKey",
  "",
  sizeof(CMsgClientRegisterKey),
  1,
  cmsg_client_register_key__field_descriptors,
  cmsg_client_register_key__field_indices_by_name,
  1,  cmsg_client_register_key__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_purchase_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_purchase_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientPurchaseResponse, has_eresult),
    offsetof(CMsgClientPurchaseResponse, eresult),
    NULL,
    &cmsg_client_purchase_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "purchase_result_details",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientPurchaseResponse, has_purchase_result_details),
    offsetof(CMsgClientPurchaseResponse, purchase_result_details),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "purchase_receipt_info",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientPurchaseResponse, has_purchase_receipt_info),
    offsetof(CMsgClientPurchaseResponse, purchase_receipt_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_purchase_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = purchase_receipt_info */
  1,   /* field[1] = purchase_result_details */
};
static const ProtobufCIntRange cmsg_client_purchase_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_purchase_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientPurchaseResponse",
  "CMsgClientPurchaseResponse",
  "CMsgClientPurchaseResponse",
  "",
  sizeof(CMsgClientPurchaseResponse),
  3,
  cmsg_client_purchase_response__field_descriptors,
  cmsg_client_purchase_response__field_indices_by_name,
  1,  cmsg_client_purchase_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_activate_oemlicense__field_descriptors[6] =
{
  {
    "bios_manufacturer",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientActivateOEMLicense, bios_manufacturer),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "bios_serialnumber",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientActivateOEMLicense, bios_serialnumber),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "license_file",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientActivateOEMLicense, has_license_file),
    offsetof(CMsgClientActivateOEMLicense, license_file),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "mainboard_manufacturer",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientActivateOEMLicense, mainboard_manufacturer),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "mainboard_product",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientActivateOEMLicense, mainboard_product),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "mainboard_serialnumber",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientActivateOEMLicense, mainboard_serialnumber),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_activate_oemlicense__field_indices_by_name[] = {
  0,   /* field[0] = bios_manufacturer */
  1,   /* field[1] = bios_serialnumber */
  2,   /* field[2] = license_file */
  3,   /* field[3] = mainboard_manufacturer */
  4,   /* field[4] = mainboard_product */
  5,   /* field[5] = mainboard_serialnumber */
};
static const ProtobufCIntRange cmsg_client_activate_oemlicense__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 6 }
};
const ProtobufCMessageDescriptor cmsg_client_activate_oemlicense__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientActivateOEMLicense",
  "CMsgClientActivateOEMLicense",
  "CMsgClientActivateOEMLicense",
  "",
  sizeof(CMsgClientActivateOEMLicense),
  6,
  cmsg_client_activate_oemlicense__field_descriptors,
  cmsg_client_activate_oemlicense__field_indices_by_name,
  1,  cmsg_client_activate_oemlicense__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_register_oemmachine__field_descriptors[1] =
{
  {
    "oem_register_file",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientRegisterOEMMachine, has_oem_register_file),
    offsetof(CMsgClientRegisterOEMMachine, oem_register_file),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_register_oemmachine__field_indices_by_name[] = {
  0,   /* field[0] = oem_register_file */
};
static const ProtobufCIntRange cmsg_client_register_oemmachine__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_register_oemmachine__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRegisterOEMMachine",
  "CMsgClientRegisterOEMMachine",
  "CMsgClientRegisterOEMMachine",
  "",
  sizeof(CMsgClientRegisterOEMMachine),
  1,
  cmsg_client_register_oemmachine__field_descriptors,
  cmsg_client_register_oemmachine__field_indices_by_name,
  1,  cmsg_client_register_oemmachine__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_register_oemmachine_response__field_descriptors[1] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRegisterOEMMachineResponse, has_eresult),
    offsetof(CMsgClientRegisterOEMMachineResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_register_oemmachine_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_register_oemmachine_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_register_oemmachine_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRegisterOEMMachineResponse",
  "CMsgClientRegisterOEMMachineResponse",
  "CMsgClientRegisterOEMMachineResponse",
  "",
  sizeof(CMsgClientRegisterOEMMachineResponse),
  1,
  cmsg_client_register_oemmachine_response__field_descriptors,
  cmsg_client_register_oemmachine_response__field_indices_by_name,
  1,  cmsg_client_register_oemmachine_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_purchase_with_machine_id__field_descriptors[2] =
{
  {
    "package_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientPurchaseWithMachineID, has_package_id),
    offsetof(CMsgClientPurchaseWithMachineID, package_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "machine_info",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientPurchaseWithMachineID, has_machine_info),
    offsetof(CMsgClientPurchaseWithMachineID, machine_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_purchase_with_machine_id__field_indices_by_name[] = {
  1,   /* field[1] = machine_info */
  0,   /* field[0] = package_id */
};
static const ProtobufCIntRange cmsg_client_purchase_with_machine_id__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_purchase_with_machine_id__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientPurchaseWithMachineID",
  "CMsgClientPurchaseWithMachineID",
  "CMsgClientPurchaseWithMachineID",
  "",
  sizeof(CMsgClientPurchaseWithMachineID),
  2,
  cmsg_client_purchase_with_machine_id__field_descriptors,
  cmsg_client_purchase_with_machine_id__field_indices_by_name,
  1,  cmsg_client_purchase_with_machine_id__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_trading__initiate_trade_request__field_descriptors[3] =
{
  {
    "trade_request_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeRequest, has_trade_request_id),
    offsetof(CMsgTradingInitiateTradeRequest, trade_request_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "other_steamid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgTradingInitiateTradeRequest, has_other_steamid),
    offsetof(CMsgTradingInitiateTradeRequest, other_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "other_name",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgTradingInitiateTradeRequest, other_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_trading__initiate_trade_request__field_indices_by_name[] = {
  2,   /* field[2] = other_name */
  1,   /* field[1] = other_steamid */
  0,   /* field[0] = trade_request_id */
};
static const ProtobufCIntRange cmsg_trading__initiate_trade_request__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_trading__initiate_trade_request__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgTrading_InitiateTradeRequest",
  "CMsgTradingInitiateTradeRequest",
  "CMsgTradingInitiateTradeRequest",
  "",
  sizeof(CMsgTradingInitiateTradeRequest),
  3,
  cmsg_trading__initiate_trade_request__field_descriptors,
  cmsg_trading__initiate_trade_request__field_indices_by_name,
  1,  cmsg_trading__initiate_trade_request__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_trading__initiate_trade_response__field_descriptors[9] =
{
  {
    "response",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_response),
    offsetof(CMsgTradingInitiateTradeResponse, response),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "trade_request_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_trade_request_id),
    offsetof(CMsgTradingInitiateTradeResponse, trade_request_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "other_steamid",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgTradingInitiateTradeResponse, has_other_steamid),
    offsetof(CMsgTradingInitiateTradeResponse, other_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "steamguard_required_days",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_steamguard_required_days),
    offsetof(CMsgTradingInitiateTradeResponse, steamguard_required_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "new_device_cooldown_days",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_new_device_cooldown_days),
    offsetof(CMsgTradingInitiateTradeResponse, new_device_cooldown_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "default_password_reset_probation_days",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_default_password_reset_probation_days),
    offsetof(CMsgTradingInitiateTradeResponse, default_password_reset_probation_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "password_reset_probation_days",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_password_reset_probation_days),
    offsetof(CMsgTradingInitiateTradeResponse, password_reset_probation_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "default_email_change_probation_days",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_default_email_change_probation_days),
    offsetof(CMsgTradingInitiateTradeResponse, default_email_change_probation_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "email_change_probation_days",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgTradingInitiateTradeResponse, has_email_change_probation_days),
    offsetof(CMsgTradingInitiateTradeResponse, email_change_probation_days),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_trading__initiate_trade_response__field_indices_by_name[] = {
  7,   /* field[7] = default_email_change_probation_days */
  5,   /* field[5] = default_password_reset_probation_days */
  8,   /* field[8] = email_change_probation_days */
  4,   /* field[4] = new_device_cooldown_days */
  2,   /* field[2] = other_steamid */
  6,   /* field[6] = password_reset_probation_days */
  0,   /* field[0] = response */
  3,   /* field[3] = steamguard_required_days */
  1,   /* field[1] = trade_request_id */
};
static const ProtobufCIntRange cmsg_trading__initiate_trade_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 9 }
};
const ProtobufCMessageDescriptor cmsg_trading__initiate_trade_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgTrading_InitiateTradeResponse",
  "CMsgTradingInitiateTradeResponse",
  "CMsgTradingInitiateTradeResponse",
  "",
  sizeof(CMsgTradingInitiateTradeResponse),
  9,
  cmsg_trading__initiate_trade_response__field_descriptors,
  cmsg_trading__initiate_trade_response__field_indices_by_name,
  1,  cmsg_trading__initiate_trade_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_trading__cancel_trade_request__field_descriptors[1] =
{
  {
    "other_steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgTradingCancelTradeRequest, has_other_steamid),
    offsetof(CMsgTradingCancelTradeRequest, other_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_trading__cancel_trade_request__field_indices_by_name[] = {
  0,   /* field[0] = other_steamid */
};
static const ProtobufCIntRange cmsg_trading__cancel_trade_request__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_trading__cancel_trade_request__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgTrading_CancelTradeRequest",
  "CMsgTradingCancelTradeRequest",
  "CMsgTradingCancelTradeRequest",
  "",
  sizeof(CMsgTradingCancelTradeRequest),
  1,
  cmsg_trading__cancel_trade_request__field_descriptors,
  cmsg_trading__cancel_trade_request__field_indices_by_name,
  1,  cmsg_trading__cancel_trade_request__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_trading__start_session__field_descriptors[1] =
{
  {
    "other_steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgTradingStartSession, has_other_steamid),
    offsetof(CMsgTradingStartSession, other_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_trading__start_session__field_indices_by_name[] = {
  0,   /* field[0] = other_steamid */
};
static const ProtobufCIntRange cmsg_trading__start_session__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_trading__start_session__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgTrading_StartSession",
  "CMsgTradingStartSession",
  "CMsgTradingStartSession",
  "",
  sizeof(CMsgTradingStartSession),
  1,
  cmsg_trading__start_session__field_descriptors,
  cmsg_trading__start_session__field_indices_by_name,
  1,  cmsg_trading__start_session__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_cdnauth_token__field_descriptors[3] =
{
  {
    "depot_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetCDNAuthToken, has_depot_id),
    offsetof(CMsgClientGetCDNAuthToken, depot_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "host_name",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientGetCDNAuthToken, host_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetCDNAuthToken, has_app_id),
    offsetof(CMsgClientGetCDNAuthToken, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_cdnauth_token__field_indices_by_name[] = {
  2,   /* field[2] = app_id */
  0,   /* field[0] = depot_id */
  1,   /* field[1] = host_name */
};
static const ProtobufCIntRange cmsg_client_get_cdnauth_token__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_get_cdnauth_token__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetCDNAuthToken",
  "CMsgClientGetCDNAuthToken",
  "CMsgClientGetCDNAuthToken",
  "",
  sizeof(CMsgClientGetCDNAuthToken),
  3,
  cmsg_client_get_cdnauth_token__field_descriptors,
  cmsg_client_get_cdnauth_token__field_indices_by_name,
  1,  cmsg_client_get_cdnauth_token__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_depot_decryption_key__field_descriptors[2] =
{
  {
    "depot_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetDepotDecryptionKey, has_depot_id),
    offsetof(CMsgClientGetDepotDecryptionKey, depot_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetDepotDecryptionKey, has_app_id),
    offsetof(CMsgClientGetDepotDecryptionKey, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_depot_decryption_key__field_indices_by_name[] = {
  1,   /* field[1] = app_id */
  0,   /* field[0] = depot_id */
};
static const ProtobufCIntRange cmsg_client_get_depot_decryption_key__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_get_depot_decryption_key__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetDepotDecryptionKey",
  "CMsgClientGetDepotDecryptionKey",
  "CMsgClientGetDepotDecryptionKey",
  "",
  sizeof(CMsgClientGetDepotDecryptionKey),
  2,
  cmsg_client_get_depot_decryption_key__field_descriptors,
  cmsg_client_get_depot_decryption_key__field_indices_by_name,
  1,  cmsg_client_get_depot_decryption_key__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_get_depot_decryption_key_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_get_depot_decryption_key_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, has_eresult),
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, eresult),
    NULL,
    &cmsg_client_get_depot_decryption_key_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "depot_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, has_depot_id),
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, depot_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "depot_encryption_key",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, has_depot_encryption_key),
    offsetof(CMsgClientGetDepotDecryptionKeyResponse, depot_encryption_key),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_depot_decryption_key_response__field_indices_by_name[] = {
  2,   /* field[2] = depot_encryption_key */
  1,   /* field[1] = depot_id */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_get_depot_decryption_key_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_get_depot_decryption_key_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetDepotDecryptionKeyResponse",
  "CMsgClientGetDepotDecryptionKeyResponse",
  "CMsgClientGetDepotDecryptionKeyResponse",
  "",
  sizeof(CMsgClientGetDepotDecryptionKeyResponse),
  3,
  cmsg_client_get_depot_decryption_key_response__field_descriptors,
  cmsg_client_get_depot_decryption_key_response__field_indices_by_name,
  1,  cmsg_client_get_depot_decryption_key_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_check_app_beta_password__field_descriptors[3] =
{
  {
    "app_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCheckAppBetaPassword, has_app_id),
    offsetof(CMsgClientCheckAppBetaPassword, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "betapassword",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientCheckAppBetaPassword, betapassword),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "language",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientCheckAppBetaPassword, has_language),
    offsetof(CMsgClientCheckAppBetaPassword, language),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_check_app_beta_password__field_indices_by_name[] = {
  0,   /* field[0] = app_id */
  1,   /* field[1] = betapassword */
  2,   /* field[2] = language */
};
static const ProtobufCIntRange cmsg_client_check_app_beta_password__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_check_app_beta_password__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCheckAppBetaPassword",
  "CMsgClientCheckAppBetaPassword",
  "CMsgClientCheckAppBetaPassword",
  "",
  sizeof(CMsgClientCheckAppBetaPassword),
  3,
  cmsg_client_check_app_beta_password__field_descriptors,
  cmsg_client_check_app_beta_password__field_indices_by_name,
  1,  cmsg_client_check_app_beta_password__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_check_app_beta_password_response__beta_password__field_descriptors[3] =
{
  {
    "betaname",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientCheckAppBetaPasswordResponse__BetaPassword, betaname),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "betapassword",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientCheckAppBetaPasswordResponse__BetaPassword, betapassword),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "betadescription",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientCheckAppBetaPasswordResponse__BetaPassword, betadescription),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_check_app_beta_password_response__beta_password__field_indices_by_name[] = {
  2,   /* field[2] = betadescription */
  0,   /* field[0] = betaname */
  1,   /* field[1] = betapassword */
};
static const ProtobufCIntRange cmsg_client_check_app_beta_password_response__beta_password__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_check_app_beta_password_response__beta_password__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCheckAppBetaPasswordResponse.BetaPassword",
  "BetaPassword",
  "CMsgClientCheckAppBetaPasswordResponse__BetaPassword",
  "",
  sizeof(CMsgClientCheckAppBetaPasswordResponse__BetaPassword),
  3,
  cmsg_client_check_app_beta_password_response__beta_password__field_descriptors,
  cmsg_client_check_app_beta_password_response__beta_password__field_indices_by_name,
  1,  cmsg_client_check_app_beta_password_response__beta_password__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_check_app_beta_password_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_check_app_beta_password_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientCheckAppBetaPasswordResponse, has_eresult),
    offsetof(CMsgClientCheckAppBetaPasswordResponse, eresult),
    NULL,
    &cmsg_client_check_app_beta_password_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "betapasswords",
    4,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientCheckAppBetaPasswordResponse, n_betapasswords),
    offsetof(CMsgClientCheckAppBetaPasswordResponse, betapasswords),
    &cmsg_client_check_app_beta_password_response__beta_password__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_check_app_beta_password_response__field_indices_by_name[] = {
  1,   /* field[1] = betapasswords */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_check_app_beta_password_response__number_ranges[2 + 1] =
{
  { 1, 0 },
  { 4, 1 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_check_app_beta_password_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCheckAppBetaPasswordResponse",
  "CMsgClientCheckAppBetaPasswordResponse",
  "CMsgClientCheckAppBetaPasswordResponse",
  "",
  sizeof(CMsgClientCheckAppBetaPasswordResponse),
  2,
  cmsg_client_check_app_beta_password_response__field_descriptors,
  cmsg_client_check_app_beta_password_response__field_indices_by_name,
  2,  cmsg_client_check_app_beta_password_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_get_cdnauth_token_response__eresult__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_get_cdnauth_token_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetCDNAuthTokenResponse, has_eresult),
    offsetof(CMsgClientGetCDNAuthTokenResponse, eresult),
    NULL,
    &cmsg_client_get_cdnauth_token_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "token",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientGetCDNAuthTokenResponse, token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "expiration_time",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetCDNAuthTokenResponse, has_expiration_time),
    offsetof(CMsgClientGetCDNAuthTokenResponse, expiration_time),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_cdnauth_token_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = expiration_time */
  1,   /* field[1] = token */
};
static const ProtobufCIntRange cmsg_client_get_cdnauth_token_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_get_cdnauth_token_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetCDNAuthTokenResponse",
  "CMsgClientGetCDNAuthTokenResponse",
  "CMsgClientGetCDNAuthTokenResponse",
  "",
  sizeof(CMsgClientGetCDNAuthTokenResponse),
  3,
  cmsg_client_get_cdnauth_token_response__field_descriptors,
  cmsg_client_get_cdnauth_token_response__field_indices_by_name,
  1,  cmsg_client_get_cdnauth_token_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_download_rate_statistics__stats_info__field_descriptors[8] =
{
  {
    "source_type",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_source_type),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, source_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "source_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_source_id),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, source_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "seconds",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_seconds),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, seconds),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "bytes",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_bytes),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, bytes),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "host_name",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDownloadRateStatistics__StatsInfo, host_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "microseconds",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_microseconds),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, microseconds),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "used_ipv6",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_used_ipv6),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, used_ipv6),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "proxied",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgDownloadRateStatistics__StatsInfo, has_proxied),
    offsetof(CMsgDownloadRateStatistics__StatsInfo, proxied),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_download_rate_statistics__stats_info__field_indices_by_name[] = {
  3,   /* field[3] = bytes */
  4,   /* field[4] = host_name */
  5,   /* field[5] = microseconds */
  7,   /* field[7] = proxied */
  2,   /* field[2] = seconds */
  1,   /* field[1] = source_id */
  0,   /* field[0] = source_type */
  6,   /* field[6] = used_ipv6 */
};
static const ProtobufCIntRange cmsg_download_rate_statistics__stats_info__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 8 }
};
const ProtobufCMessageDescriptor cmsg_download_rate_statistics__stats_info__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDownloadRateStatistics.StatsInfo",
  "StatsInfo",
  "CMsgDownloadRateStatistics__StatsInfo",
  "",
  sizeof(CMsgDownloadRateStatistics__StatsInfo),
  8,
  cmsg_download_rate_statistics__stats_info__field_descriptors,
  cmsg_download_rate_statistics__stats_info__field_indices_by_name,
  1,  cmsg_download_rate_statistics__stats_info__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_download_rate_statistics__field_descriptors[4] =
{
  {
    "cell_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics, has_cell_id),
    offsetof(CMsgDownloadRateStatistics, cell_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "stats",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgDownloadRateStatistics, n_stats),
    offsetof(CMsgDownloadRateStatistics, stats),
    &cmsg_download_rate_statistics__stats_info__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "throttling_kbps",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics, has_throttling_kbps),
    offsetof(CMsgDownloadRateStatistics, throttling_kbps),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "steam_realm",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDownloadRateStatistics, has_steam_realm),
    offsetof(CMsgDownloadRateStatistics, steam_realm),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_download_rate_statistics__field_indices_by_name[] = {
  0,   /* field[0] = cell_id */
  1,   /* field[1] = stats */
  3,   /* field[3] = steam_realm */
  2,   /* field[2] = throttling_kbps */
};
static const ProtobufCIntRange cmsg_download_rate_statistics__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_download_rate_statistics__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDownloadRateStatistics",
  "CMsgDownloadRateStatistics",
  "CMsgDownloadRateStatistics",
  "",
  sizeof(CMsgDownloadRateStatistics),
  4,
  cmsg_download_rate_statistics__field_descriptors,
  cmsg_download_rate_statistics__field_indices_by_name,
  1,  cmsg_download_rate_statistics__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_account_data__field_descriptors[2] =
{
  {
    "account_or_email",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestAccountData, account_or_email),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "action",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestAccountData, has_action),
    offsetof(CMsgClientRequestAccountData, action),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_account_data__field_indices_by_name[] = {
  0,   /* field[0] = account_or_email */
  1,   /* field[1] = action */
};
static const ProtobufCIntRange cmsg_client_request_account_data__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_request_account_data__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestAccountData",
  "CMsgClientRequestAccountData",
  "CMsgClientRequestAccountData",
  "",
  sizeof(CMsgClientRequestAccountData),
  2,
  cmsg_client_request_account_data__field_descriptors,
  cmsg_client_request_account_data__field_indices_by_name,
  1,  cmsg_client_request_account_data__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_account_data_response__field_descriptors[7] =
{
  {
    "action",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestAccountDataResponse, has_action),
    offsetof(CMsgClientRequestAccountDataResponse, action),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestAccountDataResponse, has_eresult),
    offsetof(CMsgClientRequestAccountDataResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "account_name",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestAccountDataResponse, account_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "ct_matches",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestAccountDataResponse, has_ct_matches),
    offsetof(CMsgClientRequestAccountDataResponse, ct_matches),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "account_name_suggestion1",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestAccountDataResponse, account_name_suggestion1),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "account_name_suggestion2",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestAccountDataResponse, account_name_suggestion2),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "account_name_suggestion3",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestAccountDataResponse, account_name_suggestion3),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_account_data_response__field_indices_by_name[] = {
  2,   /* field[2] = account_name */
  4,   /* field[4] = account_name_suggestion1 */
  5,   /* field[5] = account_name_suggestion2 */
  6,   /* field[6] = account_name_suggestion3 */
  0,   /* field[0] = action */
  3,   /* field[3] = ct_matches */
  1,   /* field[1] = eresult */
};
static const ProtobufCIntRange cmsg_client_request_account_data_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 7 }
};
const ProtobufCMessageDescriptor cmsg_client_request_account_data_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestAccountDataResponse",
  "CMsgClientRequestAccountDataResponse",
  "CMsgClientRequestAccountDataResponse",
  "",
  sizeof(CMsgClientRequestAccountDataResponse),
  7,
  cmsg_client_request_account_data_response__field_descriptors,
  cmsg_client_request_account_data_response__field_indices_by_name,
  1,  cmsg_client_request_account_data_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_ugsget_global_stats__field_descriptors[5] =
{
  {
    "gameid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientUGSGetGlobalStats, has_gameid),
    offsetof(CMsgClientUGSGetGlobalStats, gameid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "history_days_requested",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUGSGetGlobalStats, has_history_days_requested),
    offsetof(CMsgClientUGSGetGlobalStats, history_days_requested),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "time_last_requested",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED32,
    offsetof(CMsgClientUGSGetGlobalStats, has_time_last_requested),
    offsetof(CMsgClientUGSGetGlobalStats, time_last_requested),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "first_day_cached",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUGSGetGlobalStats, has_first_day_cached),
    offsetof(CMsgClientUGSGetGlobalStats, first_day_cached),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "days_cached",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUGSGetGlobalStats, has_days_cached),
    offsetof(CMsgClientUGSGetGlobalStats, days_cached),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ugsget_global_stats__field_indices_by_name[] = {
  4,   /* field[4] = days_cached */
  3,   /* field[3] = first_day_cached */
  0,   /* field[0] = gameid */
  1,   /* field[1] = history_days_requested */
  2,   /* field[2] = time_last_requested */
};
static const ProtobufCIntRange cmsg_client_ugsget_global_stats__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor cmsg_client_ugsget_global_stats__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUGSGetGlobalStats",
  "CMsgClientUGSGetGlobalStats",
  "CMsgClientUGSGetGlobalStats",
  "",
  sizeof(CMsgClientUGSGetGlobalStats),
  5,
  cmsg_client_ugsget_global_stats__field_descriptors,
  cmsg_client_ugsget_global_stats__field_indices_by_name,
  1,  cmsg_client_ugsget_global_stats__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_ugsget_global_stats_response__day__stat__field_descriptors[2] =
{
  {
    "stat_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day__Stat, has_stat_id),
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day__Stat, stat_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "data",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT64,
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day__Stat, has_data),
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day__Stat, data),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ugsget_global_stats_response__day__stat__field_indices_by_name[] = {
  1,   /* field[1] = data */
  0,   /* field[0] = stat_id */
};
static const ProtobufCIntRange cmsg_client_ugsget_global_stats_response__day__stat__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_ugsget_global_stats_response__day__stat__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUGSGetGlobalStatsResponse.Day.Stat",
  "Stat",
  "CMsgClientUGSGetGlobalStatsResponse__Day__Stat",
  "",
  sizeof(CMsgClientUGSGetGlobalStatsResponse__Day__Stat),
  2,
  cmsg_client_ugsget_global_stats_response__day__stat__field_descriptors,
  cmsg_client_ugsget_global_stats_response__day__stat__field_indices_by_name,
  1,  cmsg_client_ugsget_global_stats_response__day__stat__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_ugsget_global_stats_response__day__field_descriptors[2] =
{
  {
    "day_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day, has_day_id),
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day, day_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "stats",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day, n_stats),
    offsetof(CMsgClientUGSGetGlobalStatsResponse__Day, stats),
    &cmsg_client_ugsget_global_stats_response__day__stat__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ugsget_global_stats_response__day__field_indices_by_name[] = {
  0,   /* field[0] = day_id */
  1,   /* field[1] = stats */
};
static const ProtobufCIntRange cmsg_client_ugsget_global_stats_response__day__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_ugsget_global_stats_response__day__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUGSGetGlobalStatsResponse.Day",
  "Day",
  "CMsgClientUGSGetGlobalStatsResponse__Day",
  "",
  sizeof(CMsgClientUGSGetGlobalStatsResponse__Day),
  2,
  cmsg_client_ugsget_global_stats_response__day__field_descriptors,
  cmsg_client_ugsget_global_stats_response__day__field_indices_by_name,
  1,  cmsg_client_ugsget_global_stats_response__day__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_ugsget_global_stats_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_ugsget_global_stats_response__field_descriptors[4] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientUGSGetGlobalStatsResponse, has_eresult),
    offsetof(CMsgClientUGSGetGlobalStatsResponse, eresult),
    NULL,
    &cmsg_client_ugsget_global_stats_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "timestamp",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED32,
    offsetof(CMsgClientUGSGetGlobalStatsResponse, has_timestamp),
    offsetof(CMsgClientUGSGetGlobalStatsResponse, timestamp),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "day_current",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientUGSGetGlobalStatsResponse, has_day_current),
    offsetof(CMsgClientUGSGetGlobalStatsResponse, day_current),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "days",
    4,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientUGSGetGlobalStatsResponse, n_days),
    offsetof(CMsgClientUGSGetGlobalStatsResponse, days),
    &cmsg_client_ugsget_global_stats_response__day__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ugsget_global_stats_response__field_indices_by_name[] = {
  2,   /* field[2] = day_current */
  3,   /* field[3] = days */
  0,   /* field[0] = eresult */
  1,   /* field[1] = timestamp */
};
static const ProtobufCIntRange cmsg_client_ugsget_global_stats_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_client_ugsget_global_stats_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUGSGetGlobalStatsResponse",
  "CMsgClientUGSGetGlobalStatsResponse",
  "CMsgClientUGSGetGlobalStatsResponse",
  "",
  sizeof(CMsgClientUGSGetGlobalStatsResponse),
  4,
  cmsg_client_ugsget_global_stats_response__field_descriptors,
  cmsg_client_ugsget_global_stats_response__field_indices_by_name,
  1,  cmsg_client_ugsget_global_stats_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_redeem_guest_pass__field_descriptors[1] =
{
  {
    "guest_pass_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientRedeemGuestPass, has_guest_pass_id),
    offsetof(CMsgClientRedeemGuestPass, guest_pass_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_redeem_guest_pass__field_indices_by_name[] = {
  0,   /* field[0] = guest_pass_id */
};
static const ProtobufCIntRange cmsg_client_redeem_guest_pass__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_redeem_guest_pass__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRedeemGuestPass",
  "CMsgClientRedeemGuestPass",
  "CMsgClientRedeemGuestPass",
  "",
  sizeof(CMsgClientRedeemGuestPass),
  1,
  cmsg_client_redeem_guest_pass__field_descriptors,
  cmsg_client_redeem_guest_pass__field_indices_by_name,
  1,  cmsg_client_redeem_guest_pass__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_redeem_guest_pass_response__eresult__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_redeem_guest_pass_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRedeemGuestPassResponse, has_eresult),
    offsetof(CMsgClientRedeemGuestPassResponse, eresult),
    NULL,
    &cmsg_client_redeem_guest_pass_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "package_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRedeemGuestPassResponse, has_package_id),
    offsetof(CMsgClientRedeemGuestPassResponse, package_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "must_own_appid",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRedeemGuestPassResponse, has_must_own_appid),
    offsetof(CMsgClientRedeemGuestPassResponse, must_own_appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_redeem_guest_pass_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = must_own_appid */
  1,   /* field[1] = package_id */
};
static const ProtobufCIntRange cmsg_client_redeem_guest_pass_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_redeem_guest_pass_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRedeemGuestPassResponse",
  "CMsgClientRedeemGuestPassResponse",
  "CMsgClientRedeemGuestPassResponse",
  "",
  sizeof(CMsgClientRedeemGuestPassResponse),
  3,
  cmsg_client_redeem_guest_pass_response__field_descriptors,
  cmsg_client_redeem_guest_pass_response__field_indices_by_name,
  1,  cmsg_client_redeem_guest_pass_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_clan_activity_counts__field_descriptors[1] =
{
  {
    "steamid_clans",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientGetClanActivityCounts, n_steamid_clans),
    offsetof(CMsgClientGetClanActivityCounts, steamid_clans),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_clan_activity_counts__field_indices_by_name[] = {
  0,   /* field[0] = steamid_clans */
};
static const ProtobufCIntRange cmsg_client_get_clan_activity_counts__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_get_clan_activity_counts__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetClanActivityCounts",
  "CMsgClientGetClanActivityCounts",
  "CMsgClientGetClanActivityCounts",
  "",
  sizeof(CMsgClientGetClanActivityCounts),
  1,
  cmsg_client_get_clan_activity_counts__field_descriptors,
  cmsg_client_get_clan_activity_counts__field_indices_by_name,
  1,  cmsg_client_get_clan_activity_counts__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_get_clan_activity_counts_response__eresult__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_get_clan_activity_counts_response__field_descriptors[1] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetClanActivityCountsResponse, has_eresult),
    offsetof(CMsgClientGetClanActivityCountsResponse, eresult),
    NULL,
    &cmsg_client_get_clan_activity_counts_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_clan_activity_counts_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_get_clan_activity_counts_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_get_clan_activity_counts_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetClanActivityCountsResponse",
  "CMsgClientGetClanActivityCountsResponse",
  "CMsgClientGetClanActivityCountsResponse",
  "",
  sizeof(CMsgClientGetClanActivityCountsResponse),
  1,
  cmsg_client_get_clan_activity_counts_response__field_descriptors,
  cmsg_client_get_clan_activity_counts_response__field_indices_by_name,
  1,  cmsg_client_get_clan_activity_counts_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_ogsreport_string__field_descriptors[5] =
{
  {
    "accumulated",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientOGSReportString, has_accumulated),
    offsetof(CMsgClientOGSReportString, accumulated),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "sessionid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientOGSReportString, has_sessionid),
    offsetof(CMsgClientOGSReportString, sessionid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "severity",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientOGSReportString, has_severity),
    offsetof(CMsgClientOGSReportString, severity),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "formatter",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientOGSReportString, formatter),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "varargs",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientOGSReportString, has_varargs),
    offsetof(CMsgClientOGSReportString, varargs),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ogsreport_string__field_indices_by_name[] = {
  0,   /* field[0] = accumulated */
  3,   /* field[3] = formatter */
  1,   /* field[1] = sessionid */
  2,   /* field[2] = severity */
  4,   /* field[4] = varargs */
};
static const ProtobufCIntRange cmsg_client_ogsreport_string__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor cmsg_client_ogsreport_string__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientOGSReportString",
  "CMsgClientOGSReportString",
  "CMsgClientOGSReportString",
  "",
  sizeof(CMsgClientOGSReportString),
  5,
  cmsg_client_ogsreport_string__field_descriptors,
  cmsg_client_ogsreport_string__field_indices_by_name,
  1,  cmsg_client_ogsreport_string__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_ogsreport_bug__field_descriptors[3] =
{
  {
    "sessionid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientOGSReportBug, has_sessionid),
    offsetof(CMsgClientOGSReportBug, sessionid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "bugtext",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientOGSReportBug, bugtext),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "screenshot",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientOGSReportBug, has_screenshot),
    offsetof(CMsgClientOGSReportBug, screenshot),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_ogsreport_bug__field_indices_by_name[] = {
  1,   /* field[1] = bugtext */
  2,   /* field[2] = screenshot */
  0,   /* field[0] = sessionid */
};
static const ProtobufCIntRange cmsg_client_ogsreport_bug__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_ogsreport_bug__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientOGSReportBug",
  "CMsgClientOGSReportBug",
  "CMsgClientOGSReportBug",
  "",
  sizeof(CMsgClientOGSReportBug),
  3,
  cmsg_client_ogsreport_bug__field_descriptors,
  cmsg_client_ogsreport_bug__field_indices_by_name,
  1,  cmsg_client_ogsreport_bug__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_sent_logs__field_descriptors NULL
#define cmsg_client_sent_logs__field_indices_by_name NULL
#define cmsg_client_sent_logs__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_sent_logs__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientSentLogs",
  "CMsgClientSentLogs",
  "CMsgClientSentLogs",
  "",
  sizeof(CMsgClientSentLogs),
  0,
  cmsg_client_sent_logs__field_descriptors,
  cmsg_client_sent_logs__field_indices_by_name,
  0,  cmsg_client_sent_logs__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_gcclient__field_descriptors[6] =
{
  {
    "appid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgGCClient, has_appid),
    offsetof(CMsgGCClient, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "msgtype",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgGCClient, has_msgtype),
    offsetof(CMsgGCClient, msgtype),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "payload",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgGCClient, has_payload),
    offsetof(CMsgGCClient, payload),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "steamid",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgGCClient, has_steamid),
    offsetof(CMsgGCClient, steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "gcname",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgGCClient, gcname),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "ip",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgGCClient, has_ip),
    offsetof(CMsgGCClient, ip),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_gcclient__field_indices_by_name[] = {
  0,   /* field[0] = appid */
  4,   /* field[4] = gcname */
  5,   /* field[5] = ip */
  1,   /* field[1] = msgtype */
  2,   /* field[2] = payload */
  3,   /* field[3] = steamid */
};
static const ProtobufCIntRange cmsg_gcclient__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 6 }
};
const ProtobufCMessageDescriptor cmsg_gcclient__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgGCClient",
  "CMsgGCClient",
  "CMsgGCClient",
  "",
  sizeof(CMsgGCClient),
  6,
  cmsg_gcclient__field_descriptors,
  cmsg_gcclient__field_indices_by_name,
  1,  cmsg_gcclient__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_free_license__field_descriptors[1] =
{
  {
    "appids",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestFreeLicense, n_appids),
    offsetof(CMsgClientRequestFreeLicense, appids),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_free_license__field_indices_by_name[] = {
  0,   /* field[0] = appids */
};
static const ProtobufCIntRange cmsg_client_request_free_license__number_ranges[1 + 1] =
{
  { 2, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_request_free_license__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestFreeLicense",
  "CMsgClientRequestFreeLicense",
  "CMsgClientRequestFreeLicense",
  "",
  sizeof(CMsgClientRequestFreeLicense),
  1,
  cmsg_client_request_free_license__field_descriptors,
  cmsg_client_request_free_license__field_indices_by_name,
  1,  cmsg_client_request_free_license__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_request_free_license_response__eresult__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_request_free_license_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestFreeLicenseResponse, has_eresult),
    offsetof(CMsgClientRequestFreeLicenseResponse, eresult),
    NULL,
    &cmsg_client_request_free_license_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "granted_packageids",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestFreeLicenseResponse, n_granted_packageids),
    offsetof(CMsgClientRequestFreeLicenseResponse, granted_packageids),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "granted_appids",
    3,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestFreeLicenseResponse, n_granted_appids),
    offsetof(CMsgClientRequestFreeLicenseResponse, granted_appids),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_free_license_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = granted_appids */
  1,   /* field[1] = granted_packageids */
};
static const ProtobufCIntRange cmsg_client_request_free_license_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_request_free_license_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestFreeLicenseResponse",
  "CMsgClientRequestFreeLicenseResponse",
  "CMsgClientRequestFreeLicenseResponse",
  "",
  sizeof(CMsgClientRequestFreeLicenseResponse),
  3,
  cmsg_client_request_free_license_response__field_descriptors,
  cmsg_client_request_free_license_response__field_indices_by_name,
  1,  cmsg_client_request_free_license_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_drmdownload_request_with_crash_data__field_descriptors[8] =
{
  {
    "download_flags",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_download_flags),
    offsetof(CMsgDRMDownloadRequestWithCrashData, download_flags),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_types_known",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_download_types_known),
    offsetof(CMsgDRMDownloadRequestWithCrashData, download_types_known),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "guid_drm",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_guid_drm),
    offsetof(CMsgDRMDownloadRequestWithCrashData, guid_drm),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "guid_split",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_guid_split),
    offsetof(CMsgDRMDownloadRequestWithCrashData, guid_split),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "guid_merge",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_guid_merge),
    offsetof(CMsgDRMDownloadRequestWithCrashData, guid_merge),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_name",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDRMDownloadRequestWithCrashData, module_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_path",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDRMDownloadRequestWithCrashData, module_path),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "crash_data",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMDownloadRequestWithCrashData, has_crash_data),
    offsetof(CMsgDRMDownloadRequestWithCrashData, crash_data),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_drmdownload_request_with_crash_data__field_indices_by_name[] = {
  7,   /* field[7] = crash_data */
  0,   /* field[0] = download_flags */
  1,   /* field[1] = download_types_known */
  2,   /* field[2] = guid_drm */
  4,   /* field[4] = guid_merge */
  3,   /* field[3] = guid_split */
  5,   /* field[5] = module_name */
  6,   /* field[6] = module_path */
};
static const ProtobufCIntRange cmsg_drmdownload_request_with_crash_data__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 8 }
};
const ProtobufCMessageDescriptor cmsg_drmdownload_request_with_crash_data__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDRMDownloadRequestWithCrashData",
  "CMsgDRMDownloadRequestWithCrashData",
  "CMsgDRMDownloadRequestWithCrashData",
  "",
  sizeof(CMsgDRMDownloadRequestWithCrashData),
  8,
  cmsg_drmdownload_request_with_crash_data__field_descriptors,
  cmsg_drmdownload_request_with_crash_data__field_indices_by_name,
  1,  cmsg_drmdownload_request_with_crash_data__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_drmdownload_response__eresult__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_drmdownload_response__field_descriptors[8] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadResponse, has_eresult),
    offsetof(CMsgDRMDownloadResponse, eresult),
    NULL,
    &cmsg_drmdownload_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadResponse, has_app_id),
    offsetof(CMsgDRMDownloadResponse, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "blob_download_type",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadResponse, has_blob_download_type),
    offsetof(CMsgDRMDownloadResponse, blob_download_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "merge_guid",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMDownloadResponse, has_merge_guid),
    offsetof(CMsgDRMDownloadResponse, merge_guid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_dfs_ip",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadResponse, has_download_file_dfs_ip),
    offsetof(CMsgDRMDownloadResponse, download_file_dfs_ip),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_dfs_port",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMDownloadResponse, has_download_file_dfs_port),
    offsetof(CMsgDRMDownloadResponse, download_file_dfs_port),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_url",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDRMDownloadResponse, download_file_url),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_path",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDRMDownloadResponse, module_path),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_drmdownload_response__field_indices_by_name[] = {
  1,   /* field[1] = app_id */
  2,   /* field[2] = blob_download_type */
  4,   /* field[4] = download_file_dfs_ip */
  5,   /* field[5] = download_file_dfs_port */
  6,   /* field[6] = download_file_url */
  0,   /* field[0] = eresult */
  3,   /* field[3] = merge_guid */
  7,   /* field[7] = module_path */
};
static const ProtobufCIntRange cmsg_drmdownload_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 8 }
};
const ProtobufCMessageDescriptor cmsg_drmdownload_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDRMDownloadResponse",
  "CMsgDRMDownloadResponse",
  "CMsgDRMDownloadResponse",
  "",
  sizeof(CMsgDRMDownloadResponse),
  8,
  cmsg_drmdownload_response__field_descriptors,
  cmsg_drmdownload_response__field_indices_by_name,
  1,  cmsg_drmdownload_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_drmfinal_result__e_result__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_drmfinal_result__field_descriptors[8] =
{
  {
    "eResult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_eresult),
    offsetof(CMsgDRMFinalResult, eresult),
    NULL,
    &cmsg_drmfinal_result__e_result__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_app_id),
    offsetof(CMsgDRMFinalResult, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "blob_download_type",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_blob_download_type),
    offsetof(CMsgDRMFinalResult, blob_download_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "error_detail",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_error_detail),
    offsetof(CMsgDRMFinalResult, error_detail),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "merge_guid",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgDRMFinalResult, has_merge_guid),
    offsetof(CMsgDRMFinalResult, merge_guid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_dfs_ip",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_download_file_dfs_ip),
    offsetof(CMsgDRMFinalResult, download_file_dfs_ip),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_dfs_port",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDRMFinalResult, has_download_file_dfs_port),
    offsetof(CMsgDRMFinalResult, download_file_dfs_port),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "download_file_url",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgDRMFinalResult, download_file_url),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_drmfinal_result__field_indices_by_name[] = {
  1,   /* field[1] = app_id */
  2,   /* field[2] = blob_download_type */
  5,   /* field[5] = download_file_dfs_ip */
  6,   /* field[6] = download_file_dfs_port */
  7,   /* field[7] = download_file_url */
  0,   /* field[0] = eResult */
  3,   /* field[3] = error_detail */
  4,   /* field[4] = merge_guid */
};
static const ProtobufCIntRange cmsg_drmfinal_result__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 8 }
};
const ProtobufCMessageDescriptor cmsg_drmfinal_result__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDRMFinalResult",
  "CMsgDRMFinalResult",
  "CMsgDRMFinalResult",
  "",
  sizeof(CMsgDRMFinalResult),
  8,
  cmsg_drmfinal_result__field_descriptors,
  cmsg_drmfinal_result__field_indices_by_name,
  1,  cmsg_drmfinal_result__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_dpcheck_special_survey__field_descriptors[1] =
{
  {
    "survey_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDPCheckSpecialSurvey, has_survey_id),
    offsetof(CMsgClientDPCheckSpecialSurvey, survey_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_dpcheck_special_survey__field_indices_by_name[] = {
  0,   /* field[0] = survey_id */
};
static const ProtobufCIntRange cmsg_client_dpcheck_special_survey__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_dpcheck_special_survey__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDPCheckSpecialSurvey",
  "CMsgClientDPCheckSpecialSurvey",
  "CMsgClientDPCheckSpecialSurvey",
  "",
  sizeof(CMsgClientDPCheckSpecialSurvey),
  1,
  cmsg_client_dpcheck_special_survey__field_descriptors,
  cmsg_client_dpcheck_special_survey__field_indices_by_name,
  1,  cmsg_client_dpcheck_special_survey__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_dpcheck_special_survey_response__e_result__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_dpcheck_special_survey_response__field_descriptors[6] =
{
  {
    "eResult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, has_eresult),
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, eresult),
    NULL,
    &cmsg_client_dpcheck_special_survey_response__e_result__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "state",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, has_state),
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, state),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "name",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "custom_url",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, custom_url),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "include_software",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, has_include_software),
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, include_software),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "token",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, has_token),
    offsetof(CMsgClientDPCheckSpecialSurveyResponse, token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_dpcheck_special_survey_response__field_indices_by_name[] = {
  3,   /* field[3] = custom_url */
  0,   /* field[0] = eResult */
  4,   /* field[4] = include_software */
  2,   /* field[2] = name */
  1,   /* field[1] = state */
  5,   /* field[5] = token */
};
static const ProtobufCIntRange cmsg_client_dpcheck_special_survey_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 6 }
};
const ProtobufCMessageDescriptor cmsg_client_dpcheck_special_survey_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDPCheckSpecialSurveyResponse",
  "CMsgClientDPCheckSpecialSurveyResponse",
  "CMsgClientDPCheckSpecialSurveyResponse",
  "",
  sizeof(CMsgClientDPCheckSpecialSurveyResponse),
  6,
  cmsg_client_dpcheck_special_survey_response__field_descriptors,
  cmsg_client_dpcheck_special_survey_response__field_indices_by_name,
  1,  cmsg_client_dpcheck_special_survey_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_dpsend_special_survey_response__field_descriptors[2] =
{
  {
    "survey_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDPSendSpecialSurveyResponse, has_survey_id),
    offsetof(CMsgClientDPSendSpecialSurveyResponse, survey_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "data",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientDPSendSpecialSurveyResponse, has_data),
    offsetof(CMsgClientDPSendSpecialSurveyResponse, data),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_dpsend_special_survey_response__field_indices_by_name[] = {
  1,   /* field[1] = data */
  0,   /* field[0] = survey_id */
};
static const ProtobufCIntRange cmsg_client_dpsend_special_survey_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_dpsend_special_survey_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDPSendSpecialSurveyResponse",
  "CMsgClientDPSendSpecialSurveyResponse",
  "CMsgClientDPSendSpecialSurveyResponse",
  "",
  sizeof(CMsgClientDPSendSpecialSurveyResponse),
  2,
  cmsg_client_dpsend_special_survey_response__field_descriptors,
  cmsg_client_dpsend_special_survey_response__field_indices_by_name,
  1,  cmsg_client_dpsend_special_survey_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const uint32_t cmsg_client_dpsend_special_survey_response_reply__e_result__default_value = 2u;
static const ProtobufCFieldDescriptor cmsg_client_dpsend_special_survey_response_reply__field_descriptors[2] =
{
  {
    "eResult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDPSendSpecialSurveyResponseReply, has_eresult),
    offsetof(CMsgClientDPSendSpecialSurveyResponseReply, eresult),
    NULL,
    &cmsg_client_dpsend_special_survey_response_reply__e_result__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "token",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientDPSendSpecialSurveyResponseReply, has_token),
    offsetof(CMsgClientDPSendSpecialSurveyResponseReply, token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_dpsend_special_survey_response_reply__field_indices_by_name[] = {
  0,   /* field[0] = eResult */
  1,   /* field[1] = token */
};
static const ProtobufCIntRange cmsg_client_dpsend_special_survey_response_reply__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_dpsend_special_survey_response_reply__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDPSendSpecialSurveyResponseReply",
  "CMsgClientDPSendSpecialSurveyResponseReply",
  "CMsgClientDPSendSpecialSurveyResponseReply",
  "",
  sizeof(CMsgClientDPSendSpecialSurveyResponseReply),
  2,
  cmsg_client_dpsend_special_survey_response_reply__field_descriptors,
  cmsg_client_dpsend_special_survey_response_reply__field_indices_by_name,
  1,  cmsg_client_dpsend_special_survey_response_reply__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_forgotten_password_email__field_descriptors[2] =
{
  {
    "account_name",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestForgottenPasswordEmail, account_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "password_tried",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientRequestForgottenPasswordEmail, password_tried),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_forgotten_password_email__field_indices_by_name[] = {
  0,   /* field[0] = account_name */
  1,   /* field[1] = password_tried */
};
static const ProtobufCIntRange cmsg_client_request_forgotten_password_email__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_request_forgotten_password_email__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestForgottenPasswordEmail",
  "CMsgClientRequestForgottenPasswordEmail",
  "CMsgClientRequestForgottenPasswordEmail",
  "",
  sizeof(CMsgClientRequestForgottenPasswordEmail),
  2,
  cmsg_client_request_forgotten_password_email__field_descriptors,
  cmsg_client_request_forgotten_password_email__field_indices_by_name,
  1,  cmsg_client_request_forgotten_password_email__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_request_forgotten_password_email_response__field_descriptors[2] =
{
  {
    "eResult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientRequestForgottenPasswordEmailResponse, has_eresult),
    offsetof(CMsgClientRequestForgottenPasswordEmailResponse, eresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "use_secret_question",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientRequestForgottenPasswordEmailResponse, has_use_secret_question),
    offsetof(CMsgClientRequestForgottenPasswordEmailResponse, use_secret_question),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_request_forgotten_password_email_response__field_indices_by_name[] = {
  0,   /* field[0] = eResult */
  1,   /* field[1] = use_secret_question */
};
static const ProtobufCIntRange cmsg_client_request_forgotten_password_email_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_request_forgotten_password_email_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestForgottenPasswordEmailResponse",
  "CMsgClientRequestForgottenPasswordEmailResponse",
  "CMsgClientRequestForgottenPasswordEmailResponse",
  "",
  sizeof(CMsgClientRequestForgottenPasswordEmailResponse),
  2,
  cmsg_client_request_forgotten_password_email_response__field_descriptors,
  cmsg_client_request_forgotten_password_email_response__field_indices_by_name,
  1,  cmsg_client_request_forgotten_password_email_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_item_announcements__unseen_item__field_descriptors[6] =
{
  {
    "appid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_appid),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "context_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_context_id),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, context_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "asset_id",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_asset_id),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, asset_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "amount",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_amount),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, amount),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "rtime32_gained",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED32,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_rtime32_gained),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, rtime32_gained),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "source_appid",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientItemAnnouncements__UnseenItem, has_source_appid),
    offsetof(CMsgClientItemAnnouncements__UnseenItem, source_appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_item_announcements__unseen_item__field_indices_by_name[] = {
  3,   /* field[3] = amount */
  0,   /* field[0] = appid */
  2,   /* field[2] = asset_id */
  1,   /* field[1] = context_id */
  4,   /* field[4] = rtime32_gained */
  5,   /* field[5] = source_appid */
};
static const ProtobufCIntRange cmsg_client_item_announcements__unseen_item__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 6 }
};
const ProtobufCMessageDescriptor cmsg_client_item_announcements__unseen_item__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientItemAnnouncements.UnseenItem",
  "UnseenItem",
  "CMsgClientItemAnnouncements__UnseenItem",
  "",
  sizeof(CMsgClientItemAnnouncements__UnseenItem),
  6,
  cmsg_client_item_announcements__unseen_item__field_descriptors,
  cmsg_client_item_announcements__unseen_item__field_indices_by_name,
  1,  cmsg_client_item_announcements__unseen_item__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_item_announcements__field_descriptors[2] =
{
  {
    "count_new_items",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientItemAnnouncements, has_count_new_items),
    offsetof(CMsgClientItemAnnouncements, count_new_items),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "unseen_items",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientItemAnnouncements, n_unseen_items),
    offsetof(CMsgClientItemAnnouncements, unseen_items),
    &cmsg_client_item_announcements__unseen_item__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_item_announcements__field_indices_by_name[] = {
  0,   /* field[0] = count_new_items */
  1,   /* field[1] = unseen_items */
};
static const ProtobufCIntRange cmsg_client_item_announcements__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_item_announcements__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientItemAnnouncements",
  "CMsgClientItemAnnouncements",
  "CMsgClientItemAnnouncements",
  "",
  sizeof(CMsgClientItemAnnouncements),
  2,
  cmsg_client_item_announcements__field_descriptors,
  cmsg_client_item_announcements__field_indices_by_name,
  1,  cmsg_client_item_announcements__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_request_item_announcements__field_descriptors NULL
#define cmsg_client_request_item_announcements__field_indices_by_name NULL
#define cmsg_client_request_item_announcements__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_request_item_announcements__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestItemAnnouncements",
  "CMsgClientRequestItemAnnouncements",
  "CMsgClientRequestItemAnnouncements",
  "",
  sizeof(CMsgClientRequestItemAnnouncements),
  0,
  cmsg_client_request_item_announcements__field_descriptors,
  cmsg_client_request_item_announcements__field_indices_by_name,
  0,  cmsg_client_request_item_announcements__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_user_notifications__notification__field_descriptors[2] =
{
  {
    "user_notification_type",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUserNotifications__Notification, has_user_notification_type),
    offsetof(CMsgClientUserNotifications__Notification, user_notification_type),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "count",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUserNotifications__Notification, has_count),
    offsetof(CMsgClientUserNotifications__Notification, count),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_user_notifications__notification__field_indices_by_name[] = {
  1,   /* field[1] = count */
  0,   /* field[0] = user_notification_type */
};
static const ProtobufCIntRange cmsg_client_user_notifications__notification__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_user_notifications__notification__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUserNotifications.Notification",
  "Notification",
  "CMsgClientUserNotifications__Notification",
  "",
  sizeof(CMsgClientUserNotifications__Notification),
  2,
  cmsg_client_user_notifications__notification__field_descriptors,
  cmsg_client_user_notifications__notification__field_indices_by_name,
  1,  cmsg_client_user_notifications__notification__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_user_notifications__field_descriptors[1] =
{
  {
    "notifications",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientUserNotifications, n_notifications),
    offsetof(CMsgClientUserNotifications, notifications),
    &cmsg_client_user_notifications__notification__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_user_notifications__field_indices_by_name[] = {
  0,   /* field[0] = notifications */
};
static const ProtobufCIntRange cmsg_client_user_notifications__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_user_notifications__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUserNotifications",
  "CMsgClientUserNotifications",
  "CMsgClientUserNotifications",
  "",
  sizeof(CMsgClientUserNotifications),
  1,
  cmsg_client_user_notifications__field_descriptors,
  cmsg_client_user_notifications__field_indices_by_name,
  1,  cmsg_client_user_notifications__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_comment_notifications__field_descriptors[3] =
{
  {
    "count_new_comments",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCommentNotifications, has_count_new_comments),
    offsetof(CMsgClientCommentNotifications, count_new_comments),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "count_new_comments_owner",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCommentNotifications, has_count_new_comments_owner),
    offsetof(CMsgClientCommentNotifications, count_new_comments_owner),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "count_new_comments_subscriptions",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientCommentNotifications, has_count_new_comments_subscriptions),
    offsetof(CMsgClientCommentNotifications, count_new_comments_subscriptions),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_comment_notifications__field_indices_by_name[] = {
  0,   /* field[0] = count_new_comments */
  1,   /* field[1] = count_new_comments_owner */
  2,   /* field[2] = count_new_comments_subscriptions */
};
static const ProtobufCIntRange cmsg_client_comment_notifications__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_comment_notifications__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientCommentNotifications",
  "CMsgClientCommentNotifications",
  "CMsgClientCommentNotifications",
  "",
  sizeof(CMsgClientCommentNotifications),
  3,
  cmsg_client_comment_notifications__field_descriptors,
  cmsg_client_comment_notifications__field_indices_by_name,
  1,  cmsg_client_comment_notifications__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_request_comment_notifications__field_descriptors NULL
#define cmsg_client_request_comment_notifications__field_indices_by_name NULL
#define cmsg_client_request_comment_notifications__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_request_comment_notifications__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestCommentNotifications",
  "CMsgClientRequestCommentNotifications",
  "CMsgClientRequestCommentNotifications",
  "",
  sizeof(CMsgClientRequestCommentNotifications),
  0,
  cmsg_client_request_comment_notifications__field_descriptors,
  cmsg_client_request_comment_notifications__field_indices_by_name,
  0,  cmsg_client_request_comment_notifications__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_offline_message_notification__field_descriptors[2] =
{
  {
    "offline_messages",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientOfflineMessageNotification, has_offline_messages),
    offsetof(CMsgClientOfflineMessageNotification, offline_messages),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "friends_with_offline_messages",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientOfflineMessageNotification, n_friends_with_offline_messages),
    offsetof(CMsgClientOfflineMessageNotification, friends_with_offline_messages),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_offline_message_notification__field_indices_by_name[] = {
  1,   /* field[1] = friends_with_offline_messages */
  0,   /* field[0] = offline_messages */
};
static const ProtobufCIntRange cmsg_client_offline_message_notification__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_offline_message_notification__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientOfflineMessageNotification",
  "CMsgClientOfflineMessageNotification",
  "CMsgClientOfflineMessageNotification",
  "",
  sizeof(CMsgClientOfflineMessageNotification),
  2,
  cmsg_client_offline_message_notification__field_descriptors,
  cmsg_client_offline_message_notification__field_indices_by_name,
  1,  cmsg_client_offline_message_notification__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_request_offline_message_count__field_descriptors NULL
#define cmsg_client_request_offline_message_count__field_indices_by_name NULL
#define cmsg_client_request_offline_message_count__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_request_offline_message_count__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientRequestOfflineMessageCount",
  "CMsgClientRequestOfflineMessageCount",
  "CMsgClientRequestOfflineMessageCount",
  "",
  sizeof(CMsgClientRequestOfflineMessageCount),
  0,
  cmsg_client_request_offline_message_count__field_descriptors,
  cmsg_client_request_offline_message_count__field_indices_by_name,
  0,  cmsg_client_request_offline_message_count__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_chat_get_friend_message_history__field_descriptors[1] =
{
  {
    "steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientChatGetFriendMessageHistory, has_steamid),
    offsetof(CMsgClientChatGetFriendMessageHistory, steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_chat_get_friend_message_history__field_indices_by_name[] = {
  0,   /* field[0] = steamid */
};
static const ProtobufCIntRange cmsg_client_chat_get_friend_message_history__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_chat_get_friend_message_history__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientChatGetFriendMessageHistory",
  "CMsgClientChatGetFriendMessageHistory",
  "CMsgClientChatGetFriendMessageHistory",
  "",
  sizeof(CMsgClientChatGetFriendMessageHistory),
  1,
  cmsg_client_chat_get_friend_message_history__field_descriptors,
  cmsg_client_chat_get_friend_message_history__field_indices_by_name,
  1,  cmsg_client_chat_get_friend_message_history__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_chat_get_friend_message_history_response__friend_message__field_descriptors[4] =
{
  {
    "accountid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, has_accountid),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, accountid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "timestamp",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, has_timestamp),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, timestamp),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "message",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, message),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "unread",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, has_unread),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage, unread),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_chat_get_friend_message_history_response__friend_message__field_indices_by_name[] = {
  0,   /* field[0] = accountid */
  2,   /* field[2] = message */
  1,   /* field[1] = timestamp */
  3,   /* field[3] = unread */
};
static const ProtobufCIntRange cmsg_client_chat_get_friend_message_history_response__friend_message__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_client_chat_get_friend_message_history_response__friend_message__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage",
  "FriendMessage",
  "CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage",
  "",
  sizeof(CMsgClientChatGetFriendMessageHistoryResponse__FriendMessage),
  4,
  cmsg_client_chat_get_friend_message_history_response__friend_message__field_descriptors,
  cmsg_client_chat_get_friend_message_history_response__friend_message__field_indices_by_name,
  1,  cmsg_client_chat_get_friend_message_history_response__friend_message__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_chat_get_friend_message_history_response__field_descriptors[3] =
{
  {
    "steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, has_steamid),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "success",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, has_success),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, success),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "messages",
    3,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, n_messages),
    offsetof(CMsgClientChatGetFriendMessageHistoryResponse, messages),
    &cmsg_client_chat_get_friend_message_history_response__friend_message__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_chat_get_friend_message_history_response__field_indices_by_name[] = {
  2,   /* field[2] = messages */
  0,   /* field[0] = steamid */
  1,   /* field[1] = success */
};
static const ProtobufCIntRange cmsg_client_chat_get_friend_message_history_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_chat_get_friend_message_history_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientChatGetFriendMessageHistoryResponse",
  "CMsgClientChatGetFriendMessageHistoryResponse",
  "CMsgClientChatGetFriendMessageHistoryResponse",
  "",
  sizeof(CMsgClientChatGetFriendMessageHistoryResponse),
  3,
  cmsg_client_chat_get_friend_message_history_response__field_descriptors,
  cmsg_client_chat_get_friend_message_history_response__field_indices_by_name,
  1,  cmsg_client_chat_get_friend_message_history_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_chat_get_friend_message_history_for_offline_messages__field_descriptors NULL
#define cmsg_client_chat_get_friend_message_history_for_offline_messages__field_indices_by_name NULL
#define cmsg_client_chat_get_friend_message_history_for_offline_messages__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_chat_get_friend_message_history_for_offline_messages__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientChatGetFriendMessageHistoryForOfflineMessages",
  "CMsgClientChatGetFriendMessageHistoryForOfflineMessages",
  "CMsgClientChatGetFriendMessageHistoryForOfflineMessages",
  "",
  sizeof(CMsgClientChatGetFriendMessageHistoryForOfflineMessages),
  0,
  cmsg_client_chat_get_friend_message_history_for_offline_messages__field_descriptors,
  cmsg_client_chat_get_friend_message_history_for_offline_messages__field_indices_by_name,
  0,  cmsg_client_chat_get_friend_message_history_for_offline_messages__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_fsget_friends_steam_levels__field_descriptors[1] =
{
  {
    "accountids",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientFSGetFriendsSteamLevels, n_accountids),
    offsetof(CMsgClientFSGetFriendsSteamLevels, accountids),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_fsget_friends_steam_levels__field_indices_by_name[] = {
  0,   /* field[0] = accountids */
};
static const ProtobufCIntRange cmsg_client_fsget_friends_steam_levels__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_fsget_friends_steam_levels__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientFSGetFriendsSteamLevels",
  "CMsgClientFSGetFriendsSteamLevels",
  "CMsgClientFSGetFriendsSteamLevels",
  "",
  sizeof(CMsgClientFSGetFriendsSteamLevels),
  1,
  cmsg_client_fsget_friends_steam_levels__field_descriptors,
  cmsg_client_fsget_friends_steam_levels__field_indices_by_name,
  1,  cmsg_client_fsget_friends_steam_levels__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_fsget_friends_steam_levels_response__friend__field_descriptors[2] =
{
  {
    "accountid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse__Friend, has_accountid),
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse__Friend, accountid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "level",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse__Friend, has_level),
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse__Friend, level),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_fsget_friends_steam_levels_response__friend__field_indices_by_name[] = {
  0,   /* field[0] = accountid */
  1,   /* field[1] = level */
};
static const ProtobufCIntRange cmsg_client_fsget_friends_steam_levels_response__friend__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_fsget_friends_steam_levels_response__friend__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientFSGetFriendsSteamLevelsResponse.Friend",
  "Friend",
  "CMsgClientFSGetFriendsSteamLevelsResponse__Friend",
  "",
  sizeof(CMsgClientFSGetFriendsSteamLevelsResponse__Friend),
  2,
  cmsg_client_fsget_friends_steam_levels_response__friend__field_descriptors,
  cmsg_client_fsget_friends_steam_levels_response__friend__field_indices_by_name,
  1,  cmsg_client_fsget_friends_steam_levels_response__friend__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_fsget_friends_steam_levels_response__field_descriptors[1] =
{
  {
    "friends",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse, n_friends),
    offsetof(CMsgClientFSGetFriendsSteamLevelsResponse, friends),
    &cmsg_client_fsget_friends_steam_levels_response__friend__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_fsget_friends_steam_levels_response__field_indices_by_name[] = {
  0,   /* field[0] = friends */
};
static const ProtobufCIntRange cmsg_client_fsget_friends_steam_levels_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_fsget_friends_steam_levels_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientFSGetFriendsSteamLevelsResponse",
  "CMsgClientFSGetFriendsSteamLevelsResponse",
  "CMsgClientFSGetFriendsSteamLevelsResponse",
  "",
  sizeof(CMsgClientFSGetFriendsSteamLevelsResponse),
  1,
  cmsg_client_fsget_friends_steam_levels_response__field_descriptors,
  cmsg_client_fsget_friends_steam_levels_response__field_indices_by_name,
  1,  cmsg_client_fsget_friends_steam_levels_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_email_addr_info__field_descriptors[5] =
{
  {
    "email_address",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientEmailAddrInfo, email_address),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "email_is_validated",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientEmailAddrInfo, has_email_is_validated),
    offsetof(CMsgClientEmailAddrInfo, email_is_validated),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "email_validation_changed",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientEmailAddrInfo, has_email_validation_changed),
    offsetof(CMsgClientEmailAddrInfo, email_validation_changed),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "credential_change_requires_code",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientEmailAddrInfo, has_credential_change_requires_code),
    offsetof(CMsgClientEmailAddrInfo, credential_change_requires_code),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "password_or_secretqa_change_requires_code",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientEmailAddrInfo, has_password_or_secretqa_change_requires_code),
    offsetof(CMsgClientEmailAddrInfo, password_or_secretqa_change_requires_code),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_email_addr_info__field_indices_by_name[] = {
  3,   /* field[3] = credential_change_requires_code */
  0,   /* field[0] = email_address */
  1,   /* field[1] = email_is_validated */
  2,   /* field[2] = email_validation_changed */
  4,   /* field[4] = password_or_secretqa_change_requires_code */
};
static const ProtobufCIntRange cmsg_client_email_addr_info__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor cmsg_client_email_addr_info__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientEmailAddrInfo",
  "CMsgClientEmailAddrInfo",
  "CMsgClientEmailAddrInfo",
  "",
  sizeof(CMsgClientEmailAddrInfo),
  5,
  cmsg_client_email_addr_info__field_descriptors,
  cmsg_client_email_addr_info__field_indices_by_name,
  1,  cmsg_client_email_addr_info__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creitem_vote_summary__published_file_id__field_descriptors[1] =
{
  {
    "published_file_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgCREItemVoteSummary__PublishedFileId, has_published_file_id),
    offsetof(CMsgCREItemVoteSummary__PublishedFileId, published_file_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creitem_vote_summary__published_file_id__field_indices_by_name[] = {
  0,   /* field[0] = published_file_id */
};
static const ProtobufCIntRange cmsg_creitem_vote_summary__published_file_id__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_creitem_vote_summary__published_file_id__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREItemVoteSummary.PublishedFileId",
  "PublishedFileId",
  "CMsgCREItemVoteSummary__PublishedFileId",
  "",
  sizeof(CMsgCREItemVoteSummary__PublishedFileId),
  1,
  cmsg_creitem_vote_summary__published_file_id__field_descriptors,
  cmsg_creitem_vote_summary__published_file_id__field_indices_by_name,
  1,  cmsg_creitem_vote_summary__published_file_id__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creitem_vote_summary__field_descriptors[1] =
{
  {
    "published_file_ids",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgCREItemVoteSummary, n_published_file_ids),
    offsetof(CMsgCREItemVoteSummary, published_file_ids),
    &cmsg_creitem_vote_summary__published_file_id__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creitem_vote_summary__field_indices_by_name[] = {
  0,   /* field[0] = published_file_ids */
};
static const ProtobufCIntRange cmsg_creitem_vote_summary__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_creitem_vote_summary__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREItemVoteSummary",
  "CMsgCREItemVoteSummary",
  "CMsgCREItemVoteSummary",
  "",
  sizeof(CMsgCREItemVoteSummary),
  1,
  cmsg_creitem_vote_summary__field_descriptors,
  cmsg_creitem_vote_summary__field_indices_by_name,
  1,  cmsg_creitem_vote_summary__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creitem_vote_summary_response__item_vote_summary__field_descriptors[5] =
{
  {
    "published_file_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, has_published_file_id),
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, published_file_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "votes_for",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, has_votes_for),
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, votes_for),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "votes_against",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, has_votes_against),
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, votes_against),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "reports",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, has_reports),
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, reports),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "score",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FLOAT,
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, has_score),
    offsetof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary, score),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creitem_vote_summary_response__item_vote_summary__field_indices_by_name[] = {
  0,   /* field[0] = published_file_id */
  3,   /* field[3] = reports */
  4,   /* field[4] = score */
  2,   /* field[2] = votes_against */
  1,   /* field[1] = votes_for */
};
static const ProtobufCIntRange cmsg_creitem_vote_summary_response__item_vote_summary__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor cmsg_creitem_vote_summary_response__item_vote_summary__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREItemVoteSummaryResponse.ItemVoteSummary",
  "ItemVoteSummary",
  "CMsgCREItemVoteSummaryResponse__ItemVoteSummary",
  "",
  sizeof(CMsgCREItemVoteSummaryResponse__ItemVoteSummary),
  5,
  cmsg_creitem_vote_summary_response__item_vote_summary__field_descriptors,
  cmsg_creitem_vote_summary_response__item_vote_summary__field_indices_by_name,
  1,  cmsg_creitem_vote_summary_response__item_vote_summary__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_creitem_vote_summary_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_creitem_vote_summary_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREItemVoteSummaryResponse, has_eresult),
    offsetof(CMsgCREItemVoteSummaryResponse, eresult),
    NULL,
    &cmsg_creitem_vote_summary_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "item_vote_summaries",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgCREItemVoteSummaryResponse, n_item_vote_summaries),
    offsetof(CMsgCREItemVoteSummaryResponse, item_vote_summaries),
    &cmsg_creitem_vote_summary_response__item_vote_summary__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creitem_vote_summary_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  1,   /* field[1] = item_vote_summaries */
};
static const ProtobufCIntRange cmsg_creitem_vote_summary_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_creitem_vote_summary_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREItemVoteSummaryResponse",
  "CMsgCREItemVoteSummaryResponse",
  "CMsgCREItemVoteSummaryResponse",
  "",
  sizeof(CMsgCREItemVoteSummaryResponse),
  2,
  cmsg_creitem_vote_summary_response__field_descriptors,
  cmsg_creitem_vote_summary_response__field_indices_by_name,
  1,  cmsg_creitem_vote_summary_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creupdate_user_published_item_vote__field_descriptors[2] =
{
  {
    "published_file_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgCREUpdateUserPublishedItemVote, has_published_file_id),
    offsetof(CMsgCREUpdateUserPublishedItemVote, published_file_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "vote_up",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgCREUpdateUserPublishedItemVote, has_vote_up),
    offsetof(CMsgCREUpdateUserPublishedItemVote, vote_up),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creupdate_user_published_item_vote__field_indices_by_name[] = {
  0,   /* field[0] = published_file_id */
  1,   /* field[1] = vote_up */
};
static const ProtobufCIntRange cmsg_creupdate_user_published_item_vote__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_creupdate_user_published_item_vote__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREUpdateUserPublishedItemVote",
  "CMsgCREUpdateUserPublishedItemVote",
  "CMsgCREUpdateUserPublishedItemVote",
  "",
  sizeof(CMsgCREUpdateUserPublishedItemVote),
  2,
  cmsg_creupdate_user_published_item_vote__field_descriptors,
  cmsg_creupdate_user_published_item_vote__field_indices_by_name,
  1,  cmsg_creupdate_user_published_item_vote__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_creupdate_user_published_item_vote_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_creupdate_user_published_item_vote_response__field_descriptors[1] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREUpdateUserPublishedItemVoteResponse, has_eresult),
    offsetof(CMsgCREUpdateUserPublishedItemVoteResponse, eresult),
    NULL,
    &cmsg_creupdate_user_published_item_vote_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creupdate_user_published_item_vote_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_creupdate_user_published_item_vote_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_creupdate_user_published_item_vote_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREUpdateUserPublishedItemVoteResponse",
  "CMsgCREUpdateUserPublishedItemVoteResponse",
  "CMsgCREUpdateUserPublishedItemVoteResponse",
  "",
  sizeof(CMsgCREUpdateUserPublishedItemVoteResponse),
  1,
  cmsg_creupdate_user_published_item_vote_response__field_descriptors,
  cmsg_creupdate_user_published_item_vote_response__field_indices_by_name,
  1,  cmsg_creupdate_user_published_item_vote_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creget_user_published_item_vote_details__published_file_id__field_descriptors[1] =
{
  {
    "published_file_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgCREGetUserPublishedItemVoteDetails__PublishedFileId, has_published_file_id),
    offsetof(CMsgCREGetUserPublishedItemVoteDetails__PublishedFileId, published_file_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creget_user_published_item_vote_details__published_file_id__field_indices_by_name[] = {
  0,   /* field[0] = published_file_id */
};
static const ProtobufCIntRange cmsg_creget_user_published_item_vote_details__published_file_id__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_creget_user_published_item_vote_details__published_file_id__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId",
  "PublishedFileId",
  "CMsgCREGetUserPublishedItemVoteDetails__PublishedFileId",
  "",
  sizeof(CMsgCREGetUserPublishedItemVoteDetails__PublishedFileId),
  1,
  cmsg_creget_user_published_item_vote_details__published_file_id__field_descriptors,
  cmsg_creget_user_published_item_vote_details__published_file_id__field_indices_by_name,
  1,  cmsg_creget_user_published_item_vote_details__published_file_id__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_creget_user_published_item_vote_details__field_descriptors[1] =
{
  {
    "published_file_ids",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgCREGetUserPublishedItemVoteDetails, n_published_file_ids),
    offsetof(CMsgCREGetUserPublishedItemVoteDetails, published_file_ids),
    &cmsg_creget_user_published_item_vote_details__published_file_id__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creget_user_published_item_vote_details__field_indices_by_name[] = {
  0,   /* field[0] = published_file_ids */
};
static const ProtobufCIntRange cmsg_creget_user_published_item_vote_details__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_creget_user_published_item_vote_details__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREGetUserPublishedItemVoteDetails",
  "CMsgCREGetUserPublishedItemVoteDetails",
  "CMsgCREGetUserPublishedItemVoteDetails",
  "",
  sizeof(CMsgCREGetUserPublishedItemVoteDetails),
  1,
  cmsg_creget_user_published_item_vote_details__field_descriptors,
  cmsg_creget_user_published_item_vote_details__field_indices_by_name,
  1,  cmsg_creget_user_published_item_vote_details__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__vote__default_value = 0;
static const ProtobufCFieldDescriptor cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__field_descriptors[2] =
{
  {
    "published_file_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail, has_published_file_id),
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail, published_file_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "vote",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail, has_vote),
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail, vote),
    NULL,
    &cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__vote__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__field_indices_by_name[] = {
  0,   /* field[0] = published_file_id */
  1,   /* field[1] = vote */
};
static const ProtobufCIntRange cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail",
  "UserItemVoteDetail",
  "CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail",
  "",
  sizeof(CMsgCREGetUserPublishedItemVoteDetailsResponse__UserItemVoteDetail),
  2,
  cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__field_descriptors,
  cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__field_indices_by_name,
  1,  cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_creget_user_published_item_vote_details_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_creget_user_published_item_vote_details_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse, has_eresult),
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse, eresult),
    NULL,
    &cmsg_creget_user_published_item_vote_details_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "user_item_vote_details",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse, n_user_item_vote_details),
    offsetof(CMsgCREGetUserPublishedItemVoteDetailsResponse, user_item_vote_details),
    &cmsg_creget_user_published_item_vote_details_response__user_item_vote_detail__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_creget_user_published_item_vote_details_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  1,   /* field[1] = user_item_vote_details */
};
static const ProtobufCIntRange cmsg_creget_user_published_item_vote_details_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_creget_user_published_item_vote_details_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgCREGetUserPublishedItemVoteDetailsResponse",
  "CMsgCREGetUserPublishedItemVoteDetailsResponse",
  "CMsgCREGetUserPublishedItemVoteDetailsResponse",
  "",
  sizeof(CMsgCREGetUserPublishedItemVoteDetailsResponse),
  2,
  cmsg_creget_user_published_item_vote_details_response__field_descriptors,
  cmsg_creget_user_published_item_vote_details_response__field_indices_by_name,
  1,  cmsg_creget_user_published_item_vote_details_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_fsget_follower_count__field_descriptors[1] =
{
  {
    "steam_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgFSGetFollowerCount, has_steam_id),
    offsetof(CMsgFSGetFollowerCount, steam_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsget_follower_count__field_indices_by_name[] = {
  0,   /* field[0] = steam_id */
};
static const ProtobufCIntRange cmsg_fsget_follower_count__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_fsget_follower_count__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSGetFollowerCount",
  "CMsgFSGetFollowerCount",
  "CMsgFSGetFollowerCount",
  "",
  sizeof(CMsgFSGetFollowerCount),
  1,
  cmsg_fsget_follower_count__field_descriptors,
  cmsg_fsget_follower_count__field_indices_by_name,
  1,  cmsg_fsget_follower_count__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_fsget_follower_count_response__eresult__default_value = 2;
static const int32_t cmsg_fsget_follower_count_response__count__default_value = 0;
static const ProtobufCFieldDescriptor cmsg_fsget_follower_count_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgFSGetFollowerCountResponse, has_eresult),
    offsetof(CMsgFSGetFollowerCountResponse, eresult),
    NULL,
    &cmsg_fsget_follower_count_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "count",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgFSGetFollowerCountResponse, has_count),
    offsetof(CMsgFSGetFollowerCountResponse, count),
    NULL,
    &cmsg_fsget_follower_count_response__count__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsget_follower_count_response__field_indices_by_name[] = {
  1,   /* field[1] = count */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_fsget_follower_count_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_fsget_follower_count_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSGetFollowerCountResponse",
  "CMsgFSGetFollowerCountResponse",
  "CMsgFSGetFollowerCountResponse",
  "",
  sizeof(CMsgFSGetFollowerCountResponse),
  2,
  cmsg_fsget_follower_count_response__field_descriptors,
  cmsg_fsget_follower_count_response__field_indices_by_name,
  1,  cmsg_fsget_follower_count_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_fsget_is_following__field_descriptors[1] =
{
  {
    "steam_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgFSGetIsFollowing, has_steam_id),
    offsetof(CMsgFSGetIsFollowing, steam_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsget_is_following__field_indices_by_name[] = {
  0,   /* field[0] = steam_id */
};
static const ProtobufCIntRange cmsg_fsget_is_following__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_fsget_is_following__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSGetIsFollowing",
  "CMsgFSGetIsFollowing",
  "CMsgFSGetIsFollowing",
  "",
  sizeof(CMsgFSGetIsFollowing),
  1,
  cmsg_fsget_is_following__field_descriptors,
  cmsg_fsget_is_following__field_indices_by_name,
  1,  cmsg_fsget_is_following__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_fsget_is_following_response__eresult__default_value = 2;
static const protobuf_c_boolean cmsg_fsget_is_following_response__is_following__default_value = 0;
static const ProtobufCFieldDescriptor cmsg_fsget_is_following_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgFSGetIsFollowingResponse, has_eresult),
    offsetof(CMsgFSGetIsFollowingResponse, eresult),
    NULL,
    &cmsg_fsget_is_following_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "is_following",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgFSGetIsFollowingResponse, has_is_following),
    offsetof(CMsgFSGetIsFollowingResponse, is_following),
    NULL,
    &cmsg_fsget_is_following_response__is_following__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsget_is_following_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  1,   /* field[1] = is_following */
};
static const ProtobufCIntRange cmsg_fsget_is_following_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_fsget_is_following_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSGetIsFollowingResponse",
  "CMsgFSGetIsFollowingResponse",
  "CMsgFSGetIsFollowingResponse",
  "",
  sizeof(CMsgFSGetIsFollowingResponse),
  2,
  cmsg_fsget_is_following_response__field_descriptors,
  cmsg_fsget_is_following_response__field_indices_by_name,
  1,  cmsg_fsget_is_following_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_fsenumerate_following_list__field_descriptors[1] =
{
  {
    "start_index",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgFSEnumerateFollowingList, has_start_index),
    offsetof(CMsgFSEnumerateFollowingList, start_index),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsenumerate_following_list__field_indices_by_name[] = {
  0,   /* field[0] = start_index */
};
static const ProtobufCIntRange cmsg_fsenumerate_following_list__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_fsenumerate_following_list__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSEnumerateFollowingList",
  "CMsgFSEnumerateFollowingList",
  "CMsgFSEnumerateFollowingList",
  "",
  sizeof(CMsgFSEnumerateFollowingList),
  1,
  cmsg_fsenumerate_following_list__field_descriptors,
  cmsg_fsenumerate_following_list__field_indices_by_name,
  1,  cmsg_fsenumerate_following_list__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_fsenumerate_following_list_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_fsenumerate_following_list_response__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgFSEnumerateFollowingListResponse, has_eresult),
    offsetof(CMsgFSEnumerateFollowingListResponse, eresult),
    NULL,
    &cmsg_fsenumerate_following_list_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "total_results",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgFSEnumerateFollowingListResponse, has_total_results),
    offsetof(CMsgFSEnumerateFollowingListResponse, total_results),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "steam_ids",
    3,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgFSEnumerateFollowingListResponse, n_steam_ids),
    offsetof(CMsgFSEnumerateFollowingListResponse, steam_ids),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_fsenumerate_following_list_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = steam_ids */
  1,   /* field[1] = total_results */
};
static const ProtobufCIntRange cmsg_fsenumerate_following_list_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_fsenumerate_following_list_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgFSEnumerateFollowingListResponse",
  "CMsgFSEnumerateFollowingListResponse",
  "CMsgFSEnumerateFollowingListResponse",
  "",
  sizeof(CMsgFSEnumerateFollowingListResponse),
  3,
  cmsg_fsenumerate_following_list_response__field_descriptors,
  cmsg_fsenumerate_following_list_response__field_indices_by_name,
  1,  cmsg_fsenumerate_following_list_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_dpget_number_of_current_players__field_descriptors[1] =
{
  {
    "appid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgDPGetNumberOfCurrentPlayers, has_appid),
    offsetof(CMsgDPGetNumberOfCurrentPlayers, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_dpget_number_of_current_players__field_indices_by_name[] = {
  0,   /* field[0] = appid */
};
static const ProtobufCIntRange cmsg_dpget_number_of_current_players__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_dpget_number_of_current_players__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDPGetNumberOfCurrentPlayers",
  "CMsgDPGetNumberOfCurrentPlayers",
  "CMsgDPGetNumberOfCurrentPlayers",
  "",
  sizeof(CMsgDPGetNumberOfCurrentPlayers),
  1,
  cmsg_dpget_number_of_current_players__field_descriptors,
  cmsg_dpget_number_of_current_players__field_indices_by_name,
  1,  cmsg_dpget_number_of_current_players__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_dpget_number_of_current_players_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_dpget_number_of_current_players_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgDPGetNumberOfCurrentPlayersResponse, has_eresult),
    offsetof(CMsgDPGetNumberOfCurrentPlayersResponse, eresult),
    NULL,
    &cmsg_dpget_number_of_current_players_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "player_count",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgDPGetNumberOfCurrentPlayersResponse, has_player_count),
    offsetof(CMsgDPGetNumberOfCurrentPlayersResponse, player_count),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_dpget_number_of_current_players_response__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  1,   /* field[1] = player_count */
};
static const ProtobufCIntRange cmsg_dpget_number_of_current_players_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_dpget_number_of_current_players_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgDPGetNumberOfCurrentPlayersResponse",
  "CMsgDPGetNumberOfCurrentPlayersResponse",
  "CMsgDPGetNumberOfCurrentPlayersResponse",
  "",
  sizeof(CMsgDPGetNumberOfCurrentPlayersResponse),
  2,
  cmsg_dpget_number_of_current_players_response__field_descriptors,
  cmsg_dpget_number_of_current_players_response__field_indices_by_name,
  1,  cmsg_dpget_number_of_current_players_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_friend_user_status_published__field_descriptors[3] =
{
  {
    "friend_steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientFriendUserStatusPublished, has_friend_steamid),
    offsetof(CMsgClientFriendUserStatusPublished, friend_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "appid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientFriendUserStatusPublished, has_appid),
    offsetof(CMsgClientFriendUserStatusPublished, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "status_text",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientFriendUserStatusPublished, status_text),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_friend_user_status_published__field_indices_by_name[] = {
  1,   /* field[1] = appid */
  0,   /* field[0] = friend_steamid */
  2,   /* field[2] = status_text */
};
static const ProtobufCIntRange cmsg_client_friend_user_status_published__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_friend_user_status_published__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientFriendUserStatusPublished",
  "CMsgClientFriendUserStatusPublished",
  "CMsgClientFriendUserStatusPublished",
  "",
  sizeof(CMsgClientFriendUserStatusPublished),
  3,
  cmsg_client_friend_user_status_published__field_descriptors,
  cmsg_client_friend_user_status_published__field_indices_by_name,
  1,  cmsg_client_friend_user_status_published__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_service_method_legacy__field_descriptors[3] =
{
  {
    "method_name",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientServiceMethodLegacy, method_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "serialized_method",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceMethodLegacy, has_serialized_method),
    offsetof(CMsgClientServiceMethodLegacy, serialized_method),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "is_notification",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientServiceMethodLegacy, has_is_notification),
    offsetof(CMsgClientServiceMethodLegacy, is_notification),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_service_method_legacy__field_indices_by_name[] = {
  2,   /* field[2] = is_notification */
  0,   /* field[0] = method_name */
  1,   /* field[1] = serialized_method */
};
static const ProtobufCIntRange cmsg_client_service_method_legacy__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_service_method_legacy__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientServiceMethodLegacy",
  "CMsgClientServiceMethodLegacy",
  "CMsgClientServiceMethodLegacy",
  "",
  sizeof(CMsgClientServiceMethodLegacy),
  3,
  cmsg_client_service_method_legacy__field_descriptors,
  cmsg_client_service_method_legacy__field_indices_by_name,
  1,  cmsg_client_service_method_legacy__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_service_method_legacy_response__field_descriptors[2] =
{
  {
    "method_name",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientServiceMethodLegacyResponse, method_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "serialized_method_response",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceMethodLegacyResponse, has_serialized_method_response),
    offsetof(CMsgClientServiceMethodLegacyResponse, serialized_method_response),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_service_method_legacy_response__field_indices_by_name[] = {
  0,   /* field[0] = method_name */
  1,   /* field[1] = serialized_method_response */
};
static const ProtobufCIntRange cmsg_client_service_method_legacy_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_service_method_legacy_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientServiceMethodLegacyResponse",
  "CMsgClientServiceMethodLegacyResponse",
  "CMsgClientServiceMethodLegacyResponse",
  "",
  sizeof(CMsgClientServiceMethodLegacyResponse),
  2,
  cmsg_client_service_method_legacy_response__field_descriptors,
  cmsg_client_service_method_legacy_response__field_indices_by_name,
  1,  cmsg_client_service_method_legacy_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_uimode__field_descriptors[2] =
{
  {
    "uimode",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUIMode, has_uimode),
    offsetof(CMsgClientUIMode, uimode),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "chat_mode",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUIMode, has_chat_mode),
    offsetof(CMsgClientUIMode, chat_mode),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_uimode__field_indices_by_name[] = {
  1,   /* field[1] = chat_mode */
  0,   /* field[0] = uimode */
};
static const ProtobufCIntRange cmsg_client_uimode__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_uimode__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUIMode",
  "CMsgClientUIMode",
  "CMsgClientUIMode",
  "",
  sizeof(CMsgClientUIMode),
  2,
  cmsg_client_uimode__field_descriptors,
  cmsg_client_uimode__field_indices_by_name,
  1,  cmsg_client_uimode__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_vanity_urlchanged_notification__field_descriptors[1] =
{
  {
    "vanity_url",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientVanityURLChangedNotification, vanity_url),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_vanity_urlchanged_notification__field_indices_by_name[] = {
  0,   /* field[0] = vanity_url */
};
static const ProtobufCIntRange cmsg_client_vanity_urlchanged_notification__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_vanity_urlchanged_notification__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientVanityURLChangedNotification",
  "CMsgClientVanityURLChangedNotification",
  "CMsgClientVanityURLChangedNotification",
  "",
  sizeof(CMsgClientVanityURLChangedNotification),
  1,
  cmsg_client_vanity_urlchanged_notification__field_descriptors,
  cmsg_client_vanity_urlchanged_notification__field_indices_by_name,
  1,  cmsg_client_vanity_urlchanged_notification__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_authorize_local_device_request__field_descriptors[3] =
{
  {
    "device_description",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientAuthorizeLocalDeviceRequest, device_description),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "owner_account_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientAuthorizeLocalDeviceRequest, has_owner_account_id),
    offsetof(CMsgClientAuthorizeLocalDeviceRequest, owner_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "local_device_token",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientAuthorizeLocalDeviceRequest, has_local_device_token),
    offsetof(CMsgClientAuthorizeLocalDeviceRequest, local_device_token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_authorize_local_device_request__field_indices_by_name[] = {
  0,   /* field[0] = device_description */
  2,   /* field[2] = local_device_token */
  1,   /* field[1] = owner_account_id */
};
static const ProtobufCIntRange cmsg_client_authorize_local_device_request__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_authorize_local_device_request__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientAuthorizeLocalDeviceRequest",
  "CMsgClientAuthorizeLocalDeviceRequest",
  "CMsgClientAuthorizeLocalDeviceRequest",
  "",
  sizeof(CMsgClientAuthorizeLocalDeviceRequest),
  3,
  cmsg_client_authorize_local_device_request__field_descriptors,
  cmsg_client_authorize_local_device_request__field_indices_by_name,
  1,  cmsg_client_authorize_local_device_request__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_authorize_local_device__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_authorize_local_device__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientAuthorizeLocalDevice, has_eresult),
    offsetof(CMsgClientAuthorizeLocalDevice, eresult),
    NULL,
    &cmsg_client_authorize_local_device__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "owner_account_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientAuthorizeLocalDevice, has_owner_account_id),
    offsetof(CMsgClientAuthorizeLocalDevice, owner_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "authed_device_token",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientAuthorizeLocalDevice, has_authed_device_token),
    offsetof(CMsgClientAuthorizeLocalDevice, authed_device_token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_authorize_local_device__field_indices_by_name[] = {
  2,   /* field[2] = authed_device_token */
  0,   /* field[0] = eresult */
  1,   /* field[1] = owner_account_id */
};
static const ProtobufCIntRange cmsg_client_authorize_local_device__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_authorize_local_device__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientAuthorizeLocalDevice",
  "CMsgClientAuthorizeLocalDevice",
  "CMsgClientAuthorizeLocalDevice",
  "",
  sizeof(CMsgClientAuthorizeLocalDevice),
  3,
  cmsg_client_authorize_local_device__field_descriptors,
  cmsg_client_authorize_local_device__field_indices_by_name,
  1,  cmsg_client_authorize_local_device__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_authorize_local_device_notification__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_authorize_local_device_notification__field_descriptors[3] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, has_eresult),
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, eresult),
    NULL,
    &cmsg_client_authorize_local_device_notification__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "owner_account_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, has_owner_account_id),
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, owner_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "local_device_token",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, has_local_device_token),
    offsetof(CMsgClientAuthorizeLocalDeviceNotification, local_device_token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_authorize_local_device_notification__field_indices_by_name[] = {
  0,   /* field[0] = eresult */
  2,   /* field[2] = local_device_token */
  1,   /* field[1] = owner_account_id */
};
static const ProtobufCIntRange cmsg_client_authorize_local_device_notification__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_authorize_local_device_notification__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientAuthorizeLocalDeviceNotification",
  "CMsgClientAuthorizeLocalDeviceNotification",
  "CMsgClientAuthorizeLocalDeviceNotification",
  "",
  sizeof(CMsgClientAuthorizeLocalDeviceNotification),
  3,
  cmsg_client_authorize_local_device_notification__field_descriptors,
  cmsg_client_authorize_local_device_notification__field_indices_by_name,
  1,  cmsg_client_authorize_local_device_notification__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_deauthorize_device_request__field_descriptors[2] =
{
  {
    "deauthorization_account_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDeauthorizeDeviceRequest, has_deauthorization_account_id),
    offsetof(CMsgClientDeauthorizeDeviceRequest, deauthorization_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "deauthorization_device_token",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientDeauthorizeDeviceRequest, has_deauthorization_device_token),
    offsetof(CMsgClientDeauthorizeDeviceRequest, deauthorization_device_token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_deauthorize_device_request__field_indices_by_name[] = {
  0,   /* field[0] = deauthorization_account_id */
  1,   /* field[1] = deauthorization_device_token */
};
static const ProtobufCIntRange cmsg_client_deauthorize_device_request__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_deauthorize_device_request__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDeauthorizeDeviceRequest",
  "CMsgClientDeauthorizeDeviceRequest",
  "CMsgClientDeauthorizeDeviceRequest",
  "",
  sizeof(CMsgClientDeauthorizeDeviceRequest),
  2,
  cmsg_client_deauthorize_device_request__field_descriptors,
  cmsg_client_deauthorize_device_request__field_indices_by_name,
  1,  cmsg_client_deauthorize_device_request__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_deauthorize_device__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_deauthorize_device__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientDeauthorizeDevice, has_eresult),
    offsetof(CMsgClientDeauthorizeDevice, eresult),
    NULL,
    &cmsg_client_deauthorize_device__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "deauthorization_account_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientDeauthorizeDevice, has_deauthorization_account_id),
    offsetof(CMsgClientDeauthorizeDevice, deauthorization_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_deauthorize_device__field_indices_by_name[] = {
  1,   /* field[1] = deauthorization_account_id */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_deauthorize_device__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_deauthorize_device__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientDeauthorizeDevice",
  "CMsgClientDeauthorizeDevice",
  "CMsgClientDeauthorizeDevice",
  "",
  sizeof(CMsgClientDeauthorizeDevice),
  2,
  cmsg_client_deauthorize_device__field_descriptors,
  cmsg_client_deauthorize_device__field_indices_by_name,
  1,  cmsg_client_deauthorize_device__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_use_local_device_authorizations__device_token__field_descriptors[2] =
{
  {
    "owner_account_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUseLocalDeviceAuthorizations__DeviceToken, has_owner_account_id),
    offsetof(CMsgClientUseLocalDeviceAuthorizations__DeviceToken, owner_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "token_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientUseLocalDeviceAuthorizations__DeviceToken, has_token_id),
    offsetof(CMsgClientUseLocalDeviceAuthorizations__DeviceToken, token_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_use_local_device_authorizations__device_token__field_indices_by_name[] = {
  0,   /* field[0] = owner_account_id */
  1,   /* field[1] = token_id */
};
static const ProtobufCIntRange cmsg_client_use_local_device_authorizations__device_token__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_use_local_device_authorizations__device_token__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUseLocalDeviceAuthorizations.DeviceToken",
  "DeviceToken",
  "CMsgClientUseLocalDeviceAuthorizations__DeviceToken",
  "",
  sizeof(CMsgClientUseLocalDeviceAuthorizations__DeviceToken),
  2,
  cmsg_client_use_local_device_authorizations__device_token__field_descriptors,
  cmsg_client_use_local_device_authorizations__device_token__field_indices_by_name,
  1,  cmsg_client_use_local_device_authorizations__device_token__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_use_local_device_authorizations__field_descriptors[2] =
{
  {
    "authorization_account_id",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientUseLocalDeviceAuthorizations, n_authorization_account_id),
    offsetof(CMsgClientUseLocalDeviceAuthorizations, authorization_account_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "device_tokens",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientUseLocalDeviceAuthorizations, n_device_tokens),
    offsetof(CMsgClientUseLocalDeviceAuthorizations, device_tokens),
    &cmsg_client_use_local_device_authorizations__device_token__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_use_local_device_authorizations__field_indices_by_name[] = {
  0,   /* field[0] = authorization_account_id */
  1,   /* field[1] = device_tokens */
};
static const ProtobufCIntRange cmsg_client_use_local_device_authorizations__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_use_local_device_authorizations__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientUseLocalDeviceAuthorizations",
  "CMsgClientUseLocalDeviceAuthorizations",
  "CMsgClientUseLocalDeviceAuthorizations",
  "",
  sizeof(CMsgClientUseLocalDeviceAuthorizations),
  2,
  cmsg_client_use_local_device_authorizations__field_descriptors,
  cmsg_client_use_local_device_authorizations__field_indices_by_name,
  1,  cmsg_client_use_local_device_authorizations__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
#define cmsg_client_get_authorized_devices__field_descriptors NULL
#define cmsg_client_get_authorized_devices__field_indices_by_name NULL
#define cmsg_client_get_authorized_devices__number_ranges NULL
const ProtobufCMessageDescriptor cmsg_client_get_authorized_devices__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetAuthorizedDevices",
  "CMsgClientGetAuthorizedDevices",
  "CMsgClientGetAuthorizedDevices",
  "",
  sizeof(CMsgClientGetAuthorizedDevices),
  0,
  cmsg_client_get_authorized_devices__field_descriptors,
  cmsg_client_get_authorized_devices__field_indices_by_name,
  0,  cmsg_client_get_authorized_devices__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_authorized_devices_response__authorized_device__field_descriptors[6] =
{
  {
    "auth_device_token",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT64,
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, has_auth_device_token),
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, auth_device_token),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "device_name",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, device_name),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_access_time",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, has_last_access_time),
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, last_access_time),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "borrower_id",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, has_borrower_id),
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, borrower_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "is_pending",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, has_is_pending),
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, is_pending),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_played",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, has_app_played),
    offsetof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice, app_played),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_authorized_devices_response__authorized_device__field_indices_by_name[] = {
  5,   /* field[5] = app_played */
  0,   /* field[0] = auth_device_token */
  3,   /* field[3] = borrower_id */
  1,   /* field[1] = device_name */
  4,   /* field[4] = is_pending */
  2,   /* field[2] = last_access_time */
};
static const ProtobufCIntRange cmsg_client_get_authorized_devices_response__authorized_device__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 6 }
};
const ProtobufCMessageDescriptor cmsg_client_get_authorized_devices_response__authorized_device__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice",
  "AuthorizedDevice",
  "CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice",
  "",
  sizeof(CMsgClientGetAuthorizedDevicesResponse__AuthorizedDevice),
  6,
  cmsg_client_get_authorized_devices_response__authorized_device__field_descriptors,
  cmsg_client_get_authorized_devices_response__authorized_device__field_indices_by_name,
  1,  cmsg_client_get_authorized_devices_response__authorized_device__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_get_authorized_devices_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_get_authorized_devices_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientGetAuthorizedDevicesResponse, has_eresult),
    offsetof(CMsgClientGetAuthorizedDevicesResponse, eresult),
    NULL,
    &cmsg_client_get_authorized_devices_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "authorized_device",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientGetAuthorizedDevicesResponse, n_authorized_device),
    offsetof(CMsgClientGetAuthorizedDevicesResponse, authorized_device),
    &cmsg_client_get_authorized_devices_response__authorized_device__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_authorized_devices_response__field_indices_by_name[] = {
  1,   /* field[1] = authorized_device */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_client_get_authorized_devices_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_get_authorized_devices_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetAuthorizedDevicesResponse",
  "CMsgClientGetAuthorizedDevicesResponse",
  "CMsgClientGetAuthorizedDevicesResponse",
  "",
  sizeof(CMsgClientGetAuthorizedDevicesResponse),
  2,
  cmsg_client_get_authorized_devices_response__field_descriptors,
  cmsg_client_get_authorized_devices_response__field_indices_by_name,
  1,  cmsg_client_get_authorized_devices_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_shared_library_lock_status__locked_library__field_descriptors[2] =
{
  {
    "owner_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientSharedLibraryLockStatus__LockedLibrary, has_owner_id),
    offsetof(CMsgClientSharedLibraryLockStatus__LockedLibrary, owner_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "locked_by",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientSharedLibraryLockStatus__LockedLibrary, has_locked_by),
    offsetof(CMsgClientSharedLibraryLockStatus__LockedLibrary, locked_by),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_shared_library_lock_status__locked_library__field_indices_by_name[] = {
  1,   /* field[1] = locked_by */
  0,   /* field[0] = owner_id */
};
static const ProtobufCIntRange cmsg_client_shared_library_lock_status__locked_library__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_shared_library_lock_status__locked_library__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientSharedLibraryLockStatus.LockedLibrary",
  "LockedLibrary",
  "CMsgClientSharedLibraryLockStatus__LockedLibrary",
  "",
  sizeof(CMsgClientSharedLibraryLockStatus__LockedLibrary),
  2,
  cmsg_client_shared_library_lock_status__locked_library__field_descriptors,
  cmsg_client_shared_library_lock_status__locked_library__field_indices_by_name,
  1,  cmsg_client_shared_library_lock_status__locked_library__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_shared_library_lock_status__field_descriptors[2] =
{
  {
    "locked_library",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientSharedLibraryLockStatus, n_locked_library),
    offsetof(CMsgClientSharedLibraryLockStatus, locked_library),
    &cmsg_client_shared_library_lock_status__locked_library__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "own_library_locked_by",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientSharedLibraryLockStatus, has_own_library_locked_by),
    offsetof(CMsgClientSharedLibraryLockStatus, own_library_locked_by),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_shared_library_lock_status__field_indices_by_name[] = {
  0,   /* field[0] = locked_library */
  1,   /* field[1] = own_library_locked_by */
};
static const ProtobufCIntRange cmsg_client_shared_library_lock_status__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_shared_library_lock_status__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientSharedLibraryLockStatus",
  "CMsgClientSharedLibraryLockStatus",
  "CMsgClientSharedLibraryLockStatus",
  "",
  sizeof(CMsgClientSharedLibraryLockStatus),
  2,
  cmsg_client_shared_library_lock_status__field_descriptors,
  cmsg_client_shared_library_lock_status__field_indices_by_name,
  1,  cmsg_client_shared_library_lock_status__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_shared_library_stop_playing__stop_app__field_descriptors[2] =
{
  {
    "app_id",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientSharedLibraryStopPlaying__StopApp, has_app_id),
    offsetof(CMsgClientSharedLibraryStopPlaying__StopApp, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "owner_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientSharedLibraryStopPlaying__StopApp, has_owner_id),
    offsetof(CMsgClientSharedLibraryStopPlaying__StopApp, owner_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_shared_library_stop_playing__stop_app__field_indices_by_name[] = {
  0,   /* field[0] = app_id */
  1,   /* field[1] = owner_id */
};
static const ProtobufCIntRange cmsg_client_shared_library_stop_playing__stop_app__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_shared_library_stop_playing__stop_app__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientSharedLibraryStopPlaying.StopApp",
  "StopApp",
  "CMsgClientSharedLibraryStopPlaying__StopApp",
  "",
  sizeof(CMsgClientSharedLibraryStopPlaying__StopApp),
  2,
  cmsg_client_shared_library_stop_playing__stop_app__field_descriptors,
  cmsg_client_shared_library_stop_playing__stop_app__field_indices_by_name,
  1,  cmsg_client_shared_library_stop_playing__stop_app__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_shared_library_stop_playing__field_descriptors[2] =
{
  {
    "seconds_left",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientSharedLibraryStopPlaying, has_seconds_left),
    offsetof(CMsgClientSharedLibraryStopPlaying, seconds_left),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "stop_apps",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    offsetof(CMsgClientSharedLibraryStopPlaying, n_stop_apps),
    offsetof(CMsgClientSharedLibraryStopPlaying, stop_apps),
    &cmsg_client_shared_library_stop_playing__stop_app__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_shared_library_stop_playing__field_indices_by_name[] = {
  0,   /* field[0] = seconds_left */
  1,   /* field[1] = stop_apps */
};
static const ProtobufCIntRange cmsg_client_shared_library_stop_playing__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_shared_library_stop_playing__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientSharedLibraryStopPlaying",
  "CMsgClientSharedLibraryStopPlaying",
  "CMsgClientSharedLibraryStopPlaying",
  "",
  sizeof(CMsgClientSharedLibraryStopPlaying),
  2,
  cmsg_client_shared_library_stop_playing__field_descriptors,
  cmsg_client_shared_library_stop_playing__field_indices_by_name,
  1,  cmsg_client_shared_library_stop_playing__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_service_call__field_descriptors[11] =
{
  {
    "sysid_routing",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCall, has_sysid_routing),
    offsetof(CMsgClientServiceCall, sysid_routing),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "call_handle",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_call_handle),
    offsetof(CMsgClientServiceCall, call_handle),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_crc",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_module_crc),
    offsetof(CMsgClientServiceCall, module_crc),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_hash",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCall, has_module_hash),
    offsetof(CMsgClientServiceCall, module_hash),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "function_id",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_function_id),
    offsetof(CMsgClientServiceCall, function_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "cub_output_max",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_cub_output_max),
    offsetof(CMsgClientServiceCall, cub_output_max),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "flags",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_flags),
    offsetof(CMsgClientServiceCall, flags),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "callparameter",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCall, has_callparameter),
    offsetof(CMsgClientServiceCall, callparameter),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "ping_only",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientServiceCall, has_ping_only),
    offsetof(CMsgClientServiceCall, ping_only),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "max_outstanding_calls",
    10,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_max_outstanding_calls),
    offsetof(CMsgClientServiceCall, max_outstanding_calls),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    11,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCall, has_app_id),
    offsetof(CMsgClientServiceCall, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_service_call__field_indices_by_name[] = {
  10,   /* field[10] = app_id */
  1,   /* field[1] = call_handle */
  7,   /* field[7] = callparameter */
  5,   /* field[5] = cub_output_max */
  6,   /* field[6] = flags */
  4,   /* field[4] = function_id */
  9,   /* field[9] = max_outstanding_calls */
  2,   /* field[2] = module_crc */
  3,   /* field[3] = module_hash */
  8,   /* field[8] = ping_only */
  0,   /* field[0] = sysid_routing */
};
static const ProtobufCIntRange cmsg_client_service_call__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 11 }
};
const ProtobufCMessageDescriptor cmsg_client_service_call__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientServiceCall",
  "CMsgClientServiceCall",
  "CMsgClientServiceCall",
  "",
  sizeof(CMsgClientServiceCall),
  11,
  cmsg_client_service_call__field_descriptors,
  cmsg_client_service_call__field_indices_by_name,
  1,  cmsg_client_service_call__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_service_module__field_descriptors[3] =
{
  {
    "module_crc",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceModule, has_module_crc),
    offsetof(CMsgClientServiceModule, module_crc),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_hash",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceModule, has_module_hash),
    offsetof(CMsgClientServiceModule, module_hash),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_content",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceModule, has_module_content),
    offsetof(CMsgClientServiceModule, module_content),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_service_module__field_indices_by_name[] = {
  2,   /* field[2] = module_content */
  0,   /* field[0] = module_crc */
  1,   /* field[1] = module_hash */
};
static const ProtobufCIntRange cmsg_client_service_module__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_client_service_module__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientServiceModule",
  "CMsgClientServiceModule",
  "CMsgClientServiceModule",
  "",
  sizeof(CMsgClientServiceModule),
  3,
  cmsg_client_service_module__field_descriptors,
  cmsg_client_service_module__field_indices_by_name,
  1,  cmsg_client_service_module__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_service_call_response__field_descriptors[21] =
{
  {
    "sysid_routing",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_sysid_routing),
    offsetof(CMsgClientServiceCallResponse, sysid_routing),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "call_handle",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_call_handle),
    offsetof(CMsgClientServiceCallResponse, call_handle),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_crc",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_module_crc),
    offsetof(CMsgClientServiceCallResponse, module_crc),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "module_hash",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_module_hash),
    offsetof(CMsgClientServiceCallResponse, module_hash),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "ecallresult",
    5,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_ecallresult),
    offsetof(CMsgClientServiceCallResponse, ecallresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "result_content",
    6,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_result_content),
    offsetof(CMsgClientServiceCallResponse, result_content),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "os_version_info",
    7,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_os_version_info),
    offsetof(CMsgClientServiceCallResponse, os_version_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "system_info",
    8,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_system_info),
    offsetof(CMsgClientServiceCallResponse, system_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "load_address",
    9,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientServiceCallResponse, has_load_address),
    offsetof(CMsgClientServiceCallResponse, load_address),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "exception_record",
    10,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_exception_record),
    offsetof(CMsgClientServiceCallResponse, exception_record),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "portable_os_version_info",
    11,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_portable_os_version_info),
    offsetof(CMsgClientServiceCallResponse, portable_os_version_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "portable_system_info",
    12,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_portable_system_info),
    offsetof(CMsgClientServiceCallResponse, portable_system_info),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "was_converted",
    13,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientServiceCallResponse, has_was_converted),
    offsetof(CMsgClientServiceCallResponse, was_converted),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "internal_result",
    14,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_internal_result),
    offsetof(CMsgClientServiceCallResponse, internal_result),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "current_count",
    15,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_current_count),
    offsetof(CMsgClientServiceCallResponse, current_count),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_call_handle",
    16,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_last_call_handle),
    offsetof(CMsgClientServiceCallResponse, last_call_handle),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_call_module_crc",
    17,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_last_call_module_crc),
    offsetof(CMsgClientServiceCallResponse, last_call_module_crc),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_call_sysid_routing",
    18,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgClientServiceCallResponse, has_last_call_sysid_routing),
    offsetof(CMsgClientServiceCallResponse, last_call_sysid_routing),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_ecallresult",
    19,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_last_ecallresult),
    offsetof(CMsgClientServiceCallResponse, last_ecallresult),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_callissue_delta",
    20,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_last_callissue_delta),
    offsetof(CMsgClientServiceCallResponse, last_callissue_delta),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "last_callcomplete_delta",
    21,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientServiceCallResponse, has_last_callcomplete_delta),
    offsetof(CMsgClientServiceCallResponse, last_callcomplete_delta),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_service_call_response__field_indices_by_name[] = {
  1,   /* field[1] = call_handle */
  14,   /* field[14] = current_count */
  4,   /* field[4] = ecallresult */
  9,   /* field[9] = exception_record */
  13,   /* field[13] = internal_result */
  15,   /* field[15] = last_call_handle */
  16,   /* field[16] = last_call_module_crc */
  17,   /* field[17] = last_call_sysid_routing */
  20,   /* field[20] = last_callcomplete_delta */
  19,   /* field[19] = last_callissue_delta */
  18,   /* field[18] = last_ecallresult */
  8,   /* field[8] = load_address */
  2,   /* field[2] = module_crc */
  3,   /* field[3] = module_hash */
  6,   /* field[6] = os_version_info */
  10,   /* field[10] = portable_os_version_info */
  11,   /* field[11] = portable_system_info */
  5,   /* field[5] = result_content */
  0,   /* field[0] = sysid_routing */
  7,   /* field[7] = system_info */
  12,   /* field[12] = was_converted */
};
static const ProtobufCIntRange cmsg_client_service_call_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 21 }
};
const ProtobufCMessageDescriptor cmsg_client_service_call_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientServiceCallResponse",
  "CMsgClientServiceCallResponse",
  "CMsgClientServiceCallResponse",
  "",
  sizeof(CMsgClientServiceCallResponse),
  21,
  cmsg_client_service_call_response__field_descriptors,
  cmsg_client_service_call_response__field_indices_by_name,
  1,  cmsg_client_service_call_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_amunlock_h264__field_descriptors[3] =
{
  {
    "appid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgAMUnlockH264, has_appid),
    offsetof(CMsgAMUnlockH264, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "platform",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgAMUnlockH264, has_platform),
    offsetof(CMsgAMUnlockH264, platform),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "reason",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgAMUnlockH264, has_reason),
    offsetof(CMsgAMUnlockH264, reason),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_amunlock_h264__field_indices_by_name[] = {
  0,   /* field[0] = appid */
  1,   /* field[1] = platform */
  2,   /* field[2] = reason */
};
static const ProtobufCIntRange cmsg_amunlock_h264__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor cmsg_amunlock_h264__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgAMUnlockH264",
  "CMsgAMUnlockH264",
  "CMsgAMUnlockH264",
  "",
  sizeof(CMsgAMUnlockH264),
  3,
  cmsg_amunlock_h264__field_descriptors,
  cmsg_amunlock_h264__field_indices_by_name,
  1,  cmsg_amunlock_h264__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_amunlock_h264_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_amunlock_h264_response__field_descriptors[2] =
{
  {
    "eresult",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgAMUnlockH264Response, has_eresult),
    offsetof(CMsgAMUnlockH264Response, eresult),
    NULL,
    &cmsg_amunlock_h264_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "encryption_key",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BYTES,
    offsetof(CMsgAMUnlockH264Response, has_encryption_key),
    offsetof(CMsgAMUnlockH264Response, encryption_key),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_amunlock_h264_response__field_indices_by_name[] = {
  1,   /* field[1] = encryption_key */
  0,   /* field[0] = eresult */
};
static const ProtobufCIntRange cmsg_amunlock_h264_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_amunlock_h264_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgAMUnlockH264Response",
  "CMsgAMUnlockH264Response",
  "CMsgAMUnlockH264Response",
  "",
  sizeof(CMsgAMUnlockH264Response),
  2,
  cmsg_amunlock_h264_response__field_descriptors,
  cmsg_amunlock_h264_response__field_indices_by_name,
  1,  cmsg_amunlock_h264_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_playing_session_state__field_descriptors[2] =
{
  {
    "playing_blocked",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientPlayingSessionState, has_playing_blocked),
    offsetof(CMsgClientPlayingSessionState, playing_blocked),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "playing_app",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientPlayingSessionState, has_playing_app),
    offsetof(CMsgClientPlayingSessionState, playing_app),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_playing_session_state__field_indices_by_name[] = {
  1,   /* field[1] = playing_app */
  0,   /* field[0] = playing_blocked */
};
static const ProtobufCIntRange cmsg_client_playing_session_state__number_ranges[1 + 1] =
{
  { 2, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_playing_session_state__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientPlayingSessionState",
  "CMsgClientPlayingSessionState",
  "CMsgClientPlayingSessionState",
  "",
  sizeof(CMsgClientPlayingSessionState),
  2,
  cmsg_client_playing_session_state__field_descriptors,
  cmsg_client_playing_session_state__field_indices_by_name,
  1,  cmsg_client_playing_session_state__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_kick_playing_session__field_descriptors[1] =
{
  {
    "only_stop_game",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientKickPlayingSession, has_only_stop_game),
    offsetof(CMsgClientKickPlayingSession, only_stop_game),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_kick_playing_session__field_indices_by_name[] = {
  0,   /* field[0] = only_stop_game */
};
static const ProtobufCIntRange cmsg_client_kick_playing_session__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 1 }
};
const ProtobufCMessageDescriptor cmsg_client_kick_playing_session__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientKickPlayingSession",
  "CMsgClientKickPlayingSession",
  "CMsgClientKickPlayingSession",
  "",
  sizeof(CMsgClientKickPlayingSession),
  1,
  cmsg_client_kick_playing_session__field_descriptors,
  cmsg_client_kick_playing_session__field_indices_by_name,
  1,  cmsg_client_kick_playing_session__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_voice_call_pre_authorize__field_descriptors[4] =
{
  {
    "caller_steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientVoiceCallPreAuthorize, has_caller_steamid),
    offsetof(CMsgClientVoiceCallPreAuthorize, caller_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "receiver_steamid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientVoiceCallPreAuthorize, has_receiver_steamid),
    offsetof(CMsgClientVoiceCallPreAuthorize, receiver_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "caller_id",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientVoiceCallPreAuthorize, has_caller_id),
    offsetof(CMsgClientVoiceCallPreAuthorize, caller_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "hangup",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_BOOL,
    offsetof(CMsgClientVoiceCallPreAuthorize, has_hangup),
    offsetof(CMsgClientVoiceCallPreAuthorize, hangup),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_voice_call_pre_authorize__field_indices_by_name[] = {
  2,   /* field[2] = caller_id */
  0,   /* field[0] = caller_steamid */
  3,   /* field[3] = hangup */
  1,   /* field[1] = receiver_steamid */
};
static const ProtobufCIntRange cmsg_client_voice_call_pre_authorize__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_client_voice_call_pre_authorize__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientVoiceCallPreAuthorize",
  "CMsgClientVoiceCallPreAuthorize",
  "CMsgClientVoiceCallPreAuthorize",
  "",
  sizeof(CMsgClientVoiceCallPreAuthorize),
  4,
  cmsg_client_voice_call_pre_authorize__field_descriptors,
  cmsg_client_voice_call_pre_authorize__field_indices_by_name,
  1,  cmsg_client_voice_call_pre_authorize__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const int32_t cmsg_client_voice_call_pre_authorize_response__eresult__default_value = 2;
static const ProtobufCFieldDescriptor cmsg_client_voice_call_pre_authorize_response__field_descriptors[4] =
{
  {
    "caller_steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, has_caller_steamid),
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, caller_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "receiver_steamid",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, has_receiver_steamid),
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, receiver_steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "eresult",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, has_eresult),
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, eresult),
    NULL,
    &cmsg_client_voice_call_pre_authorize_response__eresult__default_value,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "caller_id",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_INT32,
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, has_caller_id),
    offsetof(CMsgClientVoiceCallPreAuthorizeResponse, caller_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_voice_call_pre_authorize_response__field_indices_by_name[] = {
  3,   /* field[3] = caller_id */
  0,   /* field[0] = caller_steamid */
  2,   /* field[2] = eresult */
  1,   /* field[1] = receiver_steamid */
};
static const ProtobufCIntRange cmsg_client_voice_call_pre_authorize_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_client_voice_call_pre_authorize_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientVoiceCallPreAuthorizeResponse",
  "CMsgClientVoiceCallPreAuthorizeResponse",
  "CMsgClientVoiceCallPreAuthorizeResponse",
  "",
  sizeof(CMsgClientVoiceCallPreAuthorizeResponse),
  4,
  cmsg_client_voice_call_pre_authorize_response__field_descriptors,
  cmsg_client_voice_call_pre_authorize_response__field_indices_by_name,
  1,  cmsg_client_voice_call_pre_authorize_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_badge_crafted_notification__field_descriptors[2] =
{
  {
    "appid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgBadgeCraftedNotification, has_appid),
    offsetof(CMsgBadgeCraftedNotification, appid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "badge_level",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgBadgeCraftedNotification, has_badge_level),
    offsetof(CMsgBadgeCraftedNotification, badge_level),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_badge_crafted_notification__field_indices_by_name[] = {
  0,   /* field[0] = appid */
  1,   /* field[1] = badge_level */
};
static const ProtobufCIntRange cmsg_badge_crafted_notification__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_badge_crafted_notification__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgBadgeCraftedNotification",
  "CMsgBadgeCraftedNotification",
  "CMsgBadgeCraftedNotification",
  "",
  sizeof(CMsgBadgeCraftedNotification),
  2,
  cmsg_badge_crafted_notification__field_descriptors,
  cmsg_badge_crafted_notification__field_indices_by_name,
  1,  cmsg_badge_crafted_notification__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_start_peer_content_server__field_descriptors[4] =
{
  {
    "steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientStartPeerContentServer, has_steamid),
    offsetof(CMsgClientStartPeerContentServer, steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "client_remote_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientStartPeerContentServer, has_client_remote_id),
    offsetof(CMsgClientStartPeerContentServer, client_remote_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "app_id",
    3,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientStartPeerContentServer, has_app_id),
    offsetof(CMsgClientStartPeerContentServer, app_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "current_build_id",
    4,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientStartPeerContentServer, has_current_build_id),
    offsetof(CMsgClientStartPeerContentServer, current_build_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_start_peer_content_server__field_indices_by_name[] = {
  2,   /* field[2] = app_id */
  1,   /* field[1] = client_remote_id */
  3,   /* field[3] = current_build_id */
  0,   /* field[0] = steamid */
};
static const ProtobufCIntRange cmsg_client_start_peer_content_server__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor cmsg_client_start_peer_content_server__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientStartPeerContentServer",
  "CMsgClientStartPeerContentServer",
  "CMsgClientStartPeerContentServer",
  "",
  sizeof(CMsgClientStartPeerContentServer),
  4,
  cmsg_client_start_peer_content_server__field_descriptors,
  cmsg_client_start_peer_content_server__field_indices_by_name,
  1,  cmsg_client_start_peer_content_server__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_start_peer_content_server_response__field_descriptors[2] =
{
  {
    "result",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientStartPeerContentServerResponse, has_result),
    offsetof(CMsgClientStartPeerContentServerResponse, result),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "server_port",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientStartPeerContentServerResponse, has_server_port),
    offsetof(CMsgClientStartPeerContentServerResponse, server_port),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_start_peer_content_server_response__field_indices_by_name[] = {
  0,   /* field[0] = result */
  1,   /* field[1] = server_port */
};
static const ProtobufCIntRange cmsg_client_start_peer_content_server_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_start_peer_content_server_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientStartPeerContentServerResponse",
  "CMsgClientStartPeerContentServerResponse",
  "CMsgClientStartPeerContentServerResponse",
  "",
  sizeof(CMsgClientStartPeerContentServerResponse),
  2,
  cmsg_client_start_peer_content_server_response__field_descriptors,
  cmsg_client_start_peer_content_server_response__field_indices_by_name,
  1,  cmsg_client_start_peer_content_server_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_peer_content_info__field_descriptors[2] =
{
  {
    "steamid",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientGetPeerContentInfo, has_steamid),
    offsetof(CMsgClientGetPeerContentInfo, steamid),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "client_remote_id",
    2,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_FIXED64,
    offsetof(CMsgClientGetPeerContentInfo, has_client_remote_id),
    offsetof(CMsgClientGetPeerContentInfo, client_remote_id),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_peer_content_info__field_indices_by_name[] = {
  1,   /* field[1] = client_remote_id */
  0,   /* field[0] = steamid */
};
static const ProtobufCIntRange cmsg_client_get_peer_content_info__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_get_peer_content_info__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetPeerContentInfo",
  "CMsgClientGetPeerContentInfo",
  "CMsgClientGetPeerContentInfo",
  "",
  sizeof(CMsgClientGetPeerContentInfo),
  2,
  cmsg_client_get_peer_content_info__field_descriptors,
  cmsg_client_get_peer_content_info__field_indices_by_name,
  1,  cmsg_client_get_peer_content_info__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor cmsg_client_get_peer_content_info_response__field_descriptors[2] =
{
  {
    "result",
    1,
    PROTOBUF_C_LABEL_OPTIONAL,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetPeerContentInfoResponse, has_result),
    offsetof(CMsgClientGetPeerContentInfoResponse, result),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "apps",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_UINT32,
    offsetof(CMsgClientGetPeerContentInfoResponse, n_apps),
    offsetof(CMsgClientGetPeerContentInfoResponse, apps),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned cmsg_client_get_peer_content_info_response__field_indices_by_name[] = {
  1,   /* field[1] = apps */
  0,   /* field[0] = result */
};
static const ProtobufCIntRange cmsg_client_get_peer_content_info_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor cmsg_client_get_peer_content_info_response__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "CMsgClientGetPeerContentInfoResponse",
  "CMsgClientGetPeerContentInfoResponse",
  "CMsgClientGetPeerContentInfoResponse",
  "",
  sizeof(CMsgClientGetPeerContentInfoResponse),
  2,
  cmsg_client_get_peer_content_info_response__field_descriptors,
  cmsg_client_get_peer_content_info_response__field_indices_by_name,
  1,  cmsg_client_get_peer_content_info_response__number_ranges,
  NULL,NULL,NULL,NULL    /* reserved[123] */
};
